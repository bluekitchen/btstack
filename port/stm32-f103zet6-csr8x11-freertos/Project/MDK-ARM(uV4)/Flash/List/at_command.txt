; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\at_command.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\at_command.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\Middleware\ut_manager\Cunit\Headers -I..\..\Middleware\ut_manager\Cunit\interface -I..\..\Middleware\at_command -I..\..\..\..\src -I..\..\..\..\src\ble\gatt-service -I..\..\..\..\src\ble -I..\..\Libraries\CMSIS\Include -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=522 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DNDEBUG --omf_browse=.\flash\obj\at_command.crf ..\..\Middleware\at_command\at_command.c]
                          THUMB

                          AREA ||i.at_command_deinit||, CODE, READONLY, ALIGN=2

                  at_command_deinit PROC
;;;84     
;;;85     at_command_status_t at_command_deinit(void)
000000  b508              PUSH     {r3,lr}
;;;86     {
;;;87         AT_COMMAND_LOG_INFO("[AT_COMMAND] at_command_deinit\r\n");
000002  a010              ADR      r0,|L1.68|
000004  f7fffffe          BL       __2printf
;;;88     
;;;89         if (at_command_semaphore) {
000008  4817              LDR      r0,|L1.104|
00000a  6800              LDR      r0,[r0,#0]  ; at_command_semaphore
00000c  b130              CBZ      r0,|L1.28|
;;;90             vSemaphoreDelete((SemaphoreHandle_t)at_command_semaphore);
00000e  4816              LDR      r0,|L1.104|
000010  6800              LDR      r0,[r0,#0]  ; at_command_semaphore
000012  f7fffffe          BL       vQueueDelete
;;;91             at_command_semaphore = 0;
000016  2000              MOVS     r0,#0
000018  4913              LDR      r1,|L1.104|
00001a  6008              STR      r0,[r1,#0]  ; at_command_semaphore
                  |L1.28|
;;;92         }
;;;93         if (at_command_timer_handle) {
00001c  4813              LDR      r0,|L1.108|
00001e  6800              LDR      r0,[r0,#0]  ; at_command_timer_handle
000020  b158              CBZ      r0,|L1.58|
;;;94             xTimerDelete(at_command_timer_handle, 0);
000022  2000              MOVS     r0,#0
000024  4603              MOV      r3,r0
000026  4602              MOV      r2,r0
000028  2105              MOVS     r1,#5
00002a  9000              STR      r0,[sp,#0]
00002c  480f              LDR      r0,|L1.108|
00002e  6800              LDR      r0,[r0,#0]  ; at_command_timer_handle
000030  f7fffffe          BL       xTimerGenericCommand
;;;95             at_command_timer_handle = NULL;
000034  2000              MOVS     r0,#0
000036  490d              LDR      r1,|L1.108|
000038  6008              STR      r0,[r1,#0]  ; at_command_timer_handle
                  |L1.58|
;;;96         }
;;;97         g_at_command_state = AT_COMMAND_STATE_IDLE;
00003a  2000              MOVS     r0,#0
00003c  490c              LDR      r1,|L1.112|
00003e  7008              STRB     r0,[r1,#0]
;;;98     
;;;99         return AT_COMMAND_OK;
;;;100    }
000040  bd08              POP      {r3,pc}
;;;101    
                          ENDP

000042  0000              DCW      0x0000
                  |L1.68|
000044  5b41545f          DCB      "[AT_COMMAND] at_command_deinit\r\n",0
000048  434f4d4d
00004c  414e445d
000050  2061745f
000054  636f6d6d
000058  616e645f
00005c  6465696e
000060  69740d0a
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0
                  |L1.104|
                          DCD      at_command_semaphore
                  |L1.108|
                          DCD      at_command_timer_handle
                  |L1.112|
                          DCD      g_at_command_state

                          AREA ||i.at_command_deregister_handler||, CODE, READONLY, ALIGN=2

                  at_command_deregister_handler PROC
;;;118    
;;;119    at_command_status_t at_command_deregister_handler(at_command_item_t *item)
000000  b570              PUSH     {r4-r6,lr}
;;;120    {
000002  4604              MOV      r4,r0
;;;121        uint8_t i = 0;
000004  2500              MOVS     r5,#0
;;;122        if (NULL == item || NULL == item->name || NULL == item->handler) {
000006  b11c              CBZ      r4,|L2.16|
000008  6820              LDR      r0,[r4,#0]
00000a  b108              CBZ      r0,|L2.16|
00000c  6860              LDR      r0,[r4,#4]
00000e  b910              CBNZ     r0,|L2.22|
                  |L2.16|
;;;123            return AT_COMMAND_INVALID_PARAM;
000010  f06f0001          MVN      r0,#1
                  |L2.20|
;;;124        }
;;;125        for (i = 0; i < AT_COMMAND_ITEM_MAX_COUNT; i++) {
;;;126            if (at_cmd_item_table[i].handler == item->handler &&
;;;127                    0 == strncmp((const char *)at_cmd_item_table[i].name, item->name, strlen(item->name))) {
;;;128                at_cmd_item_table[i].handler = NULL;
;;;129                at_cmd_item_table[i].name = NULL;
;;;130                return AT_COMMAND_OK;
;;;131            }
;;;132        }
;;;133        return AT_COMMAND_FAIL;
;;;134    }
000014  bd70              POP      {r4-r6,pc}
                  |L2.22|
000016  2500              MOVS     r5,#0                 ;125
000018  e01d              B        |L2.86|
                  |L2.26|
00001a  4811              LDR      r0,|L2.96|
00001c  eb0000c5          ADD      r0,r0,r5,LSL #3       ;126
000020  6840              LDR      r0,[r0,#4]            ;126
000022  6861              LDR      r1,[r4,#4]            ;126
000024  4288              CMP      r0,r1                 ;126
000026  d114              BNE      |L2.82|
000028  6820              LDR      r0,[r4,#0]            ;127
00002a  f7fffffe          BL       strlen
00002e  4606              MOV      r6,r0                 ;127
000030  4a0b              LDR      r2,|L2.96|
000032  f8520035          LDR      r0,[r2,r5,LSL #3]     ;127
000036  4632              MOV      r2,r6                 ;127
000038  6821              LDR      r1,[r4,#0]            ;127
00003a  f7fffffe          BL       strncmp
00003e  b940              CBNZ     r0,|L2.82|
000040  2000              MOVS     r0,#0                 ;128
000042  4907              LDR      r1,|L2.96|
000044  eb0101c5          ADD      r1,r1,r5,LSL #3       ;128
000048  6048              STR      r0,[r1,#4]            ;128
00004a  4905              LDR      r1,|L2.96|
00004c  f8410035          STR      r0,[r1,r5,LSL #3]     ;129
000050  e7e0              B        |L2.20|
                  |L2.82|
000052  1c68              ADDS     r0,r5,#1              ;125
000054  b2c5              UXTB     r5,r0                 ;125
                  |L2.86|
000056  2d14              CMP      r5,#0x14              ;125
000058  dbdf              BLT      |L2.26|
00005a  f04f30ff          MOV      r0,#0xffffffff        ;133
00005e  e7d9              B        |L2.20|
;;;135    
                          ENDP

                  |L2.96|
                          DCD      at_cmd_item_table

                          AREA ||i.at_command_init||, CODE, READONLY, ALIGN=2

                  at_command_init PROC
;;;65     
;;;66     at_command_status_t at_command_init(void)
000000  b508              PUSH     {r3,lr}
;;;67     {
;;;68         AT_COMMAND_LOG_INFO("[AT_COMMAND] at_command_init\r\n");
000002  a014              ADR      r0,|L3.84|
000004  f7fffffe          BL       __2printf
;;;69     
;;;70         if (0 == at_command_semaphore) {
000008  481a              LDR      r0,|L3.116|
00000a  6800              LDR      r0,[r0,#0]  ; at_command_semaphore
00000c  b960              CBNZ     r0,|L3.40|
;;;71             at_command_semaphore = (uint32_t)xSemaphoreCreateBinary();
00000e  2203              MOVS     r2,#3
000010  2100              MOVS     r1,#0
000012  2001              MOVS     r0,#1
000014  f7fffffe          BL       xQueueGenericCreate
000018  4916              LDR      r1,|L3.116|
00001a  6008              STR      r0,[r1,#0]  ; at_command_semaphore
;;;72             if (0 == at_command_semaphore) {
00001c  4608              MOV      r0,r1
00001e  6800              LDR      r0,[r0,#0]  ; at_command_semaphore
000020  b910              CBNZ     r0,|L3.40|
;;;73                 return AT_COMMAND_FAIL;
000022  f04f30ff          MOV      r0,#0xffffffff
                  |L3.38|
;;;74             }
;;;75         }
;;;76         if (at_command_timer_handle == NULL) {
;;;77             at_command_timer_handle = xTimerCreate("AT_CMD_Timer", 0xffff, pdFALSE, NULL, at_command_timeout_callback);
;;;78             if (at_command_timer_handle == NULL) {
;;;79                 return AT_COMMAND_FAIL;
;;;80             }
;;;81         }
;;;82         return AT_COMMAND_OK;
;;;83     }
000026  bd08              POP      {r3,pc}
                  |L3.40|
000028  4813              LDR      r0,|L3.120|
00002a  6800              LDR      r0,[r0,#0]            ;76  ; at_command_timer_handle
00002c  b980              CBNZ     r0,|L3.80|
00002e  4813              LDR      r0,|L3.124|
000030  2300              MOVS     r3,#0                 ;77
000032  461a              MOV      r2,r3                 ;77
000034  f64f71ff          MOV      r1,#0xffff            ;77
000038  9000              STR      r0,[sp,#0]            ;77
00003a  a011              ADR      r0,|L3.128|
00003c  f7fffffe          BL       xTimerCreate
000040  490d              LDR      r1,|L3.120|
000042  6008              STR      r0,[r1,#0]            ;77  ; at_command_timer_handle
000044  4608              MOV      r0,r1                 ;78
000046  6800              LDR      r0,[r0,#0]            ;78  ; at_command_timer_handle
000048  b910              CBNZ     r0,|L3.80|
00004a  f04f30ff          MOV      r0,#0xffffffff        ;79
00004e  e7ea              B        |L3.38|
                  |L3.80|
000050  2000              MOVS     r0,#0                 ;82
000052  e7e8              B        |L3.38|
;;;84     
                          ENDP

                  |L3.84|
000054  5b41545f          DCB      "[AT_COMMAND] at_command_init\r\n",0
000058  434f4d4d
00005c  414e445d
000060  2061745f
000064  636f6d6d
000068  616e645f
00006c  696e6974
000070  0d0a00  
000073  00                DCB      0
                  |L3.116|
                          DCD      at_command_semaphore
                  |L3.120|
                          DCD      at_command_timer_handle
                  |L3.124|
                          DCD      at_command_timeout_callback
                  |L3.128|
000080  41545f43          DCB      "AT_CMD_Timer",0
000084  4d445f54
000088  696d6572
00008c  00      
00008d  00                DCB      0
00008e  00                DCB      0
00008f  00                DCB      0

                          AREA ||i.at_command_parsing||, CODE, READONLY, ALIGN=1

                  at_command_parsing PROC
;;;232    
;;;233    static at_command_status_t at_command_parsing(uint8_t *buffer, uint16_t buffer_length, at_command_parse_t *parse_struct)
000000  b530              PUSH     {r4,r5,lr}
;;;234    {
000002  4603              MOV      r3,r0
;;;235        uint16_t i = 0;
000004  2400              MOVS     r4,#0
;;;236        if (buffer == NULL || parse_struct == NULL || buffer_length == 0) {
000006  b10b              CBZ      r3,|L4.12|
000008  b102              CBZ      r2,|L4.12|
00000a  b911              CBNZ     r1,|L4.18|
                  |L4.12|
;;;237            return AT_COMMAND_FAIL;
00000c  f04f30ff          MOV      r0,#0xffffffff
                  |L4.16|
;;;238        }
;;;239        if (buffer_length <= (AT_COMMAND_HEADER_LENGTH + AT_COMMAND_TAIL_LENGTH)) { //AT+T\r\n
;;;240            return AT_COMMAND_FAIL;
;;;241        }
;;;242        if (!(buffer[0] == AT_COMMAND_HEADER_A && buffer[1] == AT_COMMAND_HEADER_T && buffer[2] == AT_COMMAND_HEADER_PLUS)) {
;;;243            return AT_COMMAND_FAIL;
;;;244        }
;;;245        if (!(buffer[buffer_length - 2] == AT_COMMAND_TAIL_R && buffer[buffer_length - 1] == AT_COMMAND_TAIL_N)) {
;;;246            return AT_COMMAND_FAIL;
;;;247        }
;;;248        parse_struct->at_cmd_tatal_length = buffer_length;
;;;249        for (i = 0; i < parse_struct->at_cmd_tatal_length; i++) {
;;;250            if (buffer[i] == AT_COMMAND_EQUAL) {
;;;251                parse_struct->at_cmd_name_length = i;
;;;252                parse_struct->at_cmd_param_offset = i + 1;
;;;253                parse_struct->at_cmd_param_length = parse_struct->at_cmd_tatal_length - parse_struct->at_cmd_param_offset - AT_COMMAND_TAIL_LENGTH;
;;;254                break;
;;;255            }
;;;256        }
;;;257        if (i == parse_struct->at_cmd_tatal_length) {
;;;258            parse_struct->at_cmd_name_length = parse_struct->at_cmd_tatal_length;
;;;259            parse_struct->at_cmd_param_offset = 0;
;;;260            parse_struct->at_cmd_param_length = 0;
;;;261        }
;;;262        return AT_COMMAND_OK;
;;;263    }
000010  bd30              POP      {r4,r5,pc}
                  |L4.18|
000012  2905              CMP      r1,#5                 ;239
000014  dc02              BGT      |L4.28|
000016  f04f30ff          MOV      r0,#0xffffffff        ;240
00001a  e7f9              B        |L4.16|
                  |L4.28|
00001c  7818              LDRB     r0,[r3,#0]            ;242
00001e  2841              CMP      r0,#0x41              ;242
000020  d105              BNE      |L4.46|
000022  7858              LDRB     r0,[r3,#1]            ;242
000024  2854              CMP      r0,#0x54              ;242
000026  d102              BNE      |L4.46|
000028  7898              LDRB     r0,[r3,#2]            ;242
00002a  282b              CMP      r0,#0x2b              ;242
00002c  d002              BEQ      |L4.52|
                  |L4.46|
00002e  f04f30ff          MOV      r0,#0xffffffff        ;243
000032  e7ed              B        |L4.16|
                  |L4.52|
000034  1e88              SUBS     r0,r1,#2              ;245
000036  5c18              LDRB     r0,[r3,r0]            ;245
000038  280d              CMP      r0,#0xd               ;245
00003a  d103              BNE      |L4.68|
00003c  1e48              SUBS     r0,r1,#1              ;245
00003e  5c18              LDRB     r0,[r3,r0]            ;245
000040  280a              CMP      r0,#0xa               ;245
000042  d002              BEQ      |L4.74|
                  |L4.68|
000044  f04f30ff          MOV      r0,#0xffffffff        ;246
000048  e7e2              B        |L4.16|
                  |L4.74|
00004a  7111              STRB     r1,[r2,#4]            ;248
00004c  2400              MOVS     r4,#0                 ;249
00004e  e00d              B        |L4.108|
                  |L4.80|
000050  5d18              LDRB     r0,[r3,r4]            ;250
000052  283d              CMP      r0,#0x3d              ;250
000054  d108              BNE      |L4.104|
000056  7154              STRB     r4,[r2,#5]            ;251
000058  1c60              ADDS     r0,r4,#1              ;252
00005a  7190              STRB     r0,[r2,#6]            ;252
00005c  7910              LDRB     r0,[r2,#4]            ;253
00005e  7995              LDRB     r5,[r2,#6]            ;253
000060  1b40              SUBS     r0,r0,r5              ;253
000062  1e80              SUBS     r0,r0,#2              ;253
000064  71d0              STRB     r0,[r2,#7]            ;253
000066  e004              B        |L4.114|
                  |L4.104|
000068  1c60              ADDS     r0,r4,#1              ;249
00006a  b284              UXTH     r4,r0                 ;249
                  |L4.108|
00006c  7910              LDRB     r0,[r2,#4]            ;249
00006e  42a0              CMP      r0,r4                 ;249
000070  dcee              BGT      |L4.80|
                  |L4.114|
000072  bf00              NOP                            ;254
000074  7910              LDRB     r0,[r2,#4]            ;257
000076  42a0              CMP      r0,r4                 ;257
000078  d104              BNE      |L4.132|
00007a  7910              LDRB     r0,[r2,#4]            ;258
00007c  7150              STRB     r0,[r2,#5]            ;258
00007e  2000              MOVS     r0,#0                 ;259
000080  7190              STRB     r0,[r2,#6]            ;259
000082  71d0              STRB     r0,[r2,#7]            ;260
                  |L4.132|
000084  2000              MOVS     r0,#0                 ;262
000086  e7c3              B        |L4.16|
;;;264    
                          ENDP


                          AREA ||i.at_command_register_handler||, CODE, READONLY, ALIGN=2

                  at_command_register_handler PROC
;;;101    
;;;102    at_command_status_t at_command_register_handler(at_command_item_t *item)
000000  4601              MOV      r1,r0
;;;103    {
;;;104        uint8_t i = 0;
000002  2200              MOVS     r2,#0
;;;105        if (NULL == item || NULL == item->name || NULL == item->handler) {
000004  b119              CBZ      r1,|L5.14|
000006  6808              LDR      r0,[r1,#0]
000008  b108              CBZ      r0,|L5.14|
00000a  6848              LDR      r0,[r1,#4]
00000c  b910              CBNZ     r0,|L5.20|
                  |L5.14|
;;;106            return AT_COMMAND_INVALID_PARAM;
00000e  f06f0001          MVN      r0,#1
                  |L5.18|
;;;107        }
;;;108    
;;;109        for (i = 0; i < AT_COMMAND_ITEM_MAX_COUNT; i++) {
;;;110            if (at_cmd_item_table[i].handler == NULL) {
;;;111                at_cmd_item_table[i].handler = item->handler;
;;;112                at_cmd_item_table[i].name = item->name;
;;;113                return AT_COMMAND_OK;
;;;114            }
;;;115        }
;;;116        return AT_COMMAND_FAIL;
;;;117    }
000012  4770              BX       lr
                  |L5.20|
000014  2200              MOVS     r2,#0                 ;109
000016  e011              B        |L5.60|
                  |L5.24|
000018  480b              LDR      r0,|L5.72|
00001a  eb0000c2          ADD      r0,r0,r2,LSL #3       ;110
00001e  6840              LDR      r0,[r0,#4]            ;110
000020  b950              CBNZ     r0,|L5.56|
000022  4b09              LDR      r3,|L5.72|
000024  eb0303c2          ADD      r3,r3,r2,LSL #3       ;111
000028  6848              LDR      r0,[r1,#4]            ;111
00002a  6058              STR      r0,[r3,#4]            ;111
00002c  4b06              LDR      r3,|L5.72|
00002e  6808              LDR      r0,[r1,#0]            ;112
000030  f8430032          STR      r0,[r3,r2,LSL #3]     ;112
000034  2000              MOVS     r0,#0                 ;113
000036  e7ec              B        |L5.18|
                  |L5.56|
000038  1c50              ADDS     r0,r2,#1              ;109
00003a  b2c2              UXTB     r2,r0                 ;109
                  |L5.60|
00003c  2a14              CMP      r2,#0x14              ;109
00003e  dbeb              BLT      |L5.24|
000040  f04f30ff          MOV      r0,#0xffffffff        ;116
000044  e7e5              B        |L5.18|
;;;118    
                          ENDP

000046  0000              DCW      0x0000
                  |L5.72|
                          DCD      at_cmd_item_table

                          AREA ||i.at_command_send_response||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  at_command_send_response PROC
;;;180    
;;;181    void at_command_send_response(at_command_response_t *response)
000000  b510              PUSH     {r4,lr}
;;;182    {
000002  4604              MOV      r4,r0
;;;183        if (response == NULL) {
000004  b904              CBNZ     r4,|L6.8|
                  |L6.6|
;;;184            return;
;;;185        }
;;;186        AT_COMMAND_LOG_INFO("[AT_COMMAND] %s\r\n", response->buffer);
;;;187    }
000006  bd10              POP      {r4,pc}
                  |L6.8|
000008  4621              MOV      r1,r4                 ;186
00000a  a002              ADR      r0,|L6.20|
00000c  f7fffffe          BL       __2printf
000010  bf00              NOP      
000012  e7f8              B        |L6.6|
;;;188    
                          ENDP

                  |L6.20|
000014  5b41545f          DCB      "[AT_COMMAND] %s\r\n",0
000018  434f4d4d
00001c  414e445d
000020  2025730d
000024  0a00    
000026  00                DCB      0
000027  00                DCB      0

                          AREA ||i.at_command_timeout_callback||, CODE, READONLY, ALIGN=2

                  at_command_timeout_callback PROC
;;;215    
;;;216    static void at_command_timeout_callback(TimerHandle_t handle)
000000  b510              PUSH     {r4,lr}
;;;217    {
000002  4604              MOV      r4,r0
;;;218        if (handle != NULL && handle == at_command_timer_handle) {
000004  2c00              CMP      r4,#0
000006  d025              BEQ      |L7.84|
000008  4813              LDR      r0,|L7.88|
00000a  6800              LDR      r0,[r0,#0]  ; at_command_timer_handle
00000c  4284              CMP      r4,r0
00000e  d121              BNE      |L7.84|
;;;219            if (AT_COMAND_STATE_PARSING == g_at_command_state) {
000010  4812              LDR      r0,|L7.92|
000012  7800              LDRB     r0,[r0,#0]  ; g_at_command_state
000014  2801              CMP      r0,#1
000016  d116              BNE      |L7.70|
;;;220                memset((void *)&g_parse_context, 0, sizeof(at_command_parse_t));
000018  4811              LDR      r0,|L7.96|
00001a  2100              MOVS     r1,#0
00001c  6001              STR      r1,[r0,#0]  ; g_parse_context
00001e  6041              STR      r1,[r0,#4]  ; g_parse_context
;;;221                comClearRxFifo(COM1);
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       comClearRxFifo
;;;222                g_at_command_state = AT_COMMAND_STATE_IDLE;
000026  2000              MOVS     r0,#0
000028  490c              LDR      r1,|L7.92|
00002a  7008              STRB     r0,[r1,#0]
;;;223                memset(buffer, 0, AT_COMMAND_MAX_LENGTH);
00002c  2132              MOVS     r1,#0x32
00002e  480d              LDR      r0,|L7.100|
000030  f7fffffe          BL       __aeabi_memclr
;;;224                buffer_index = 0;
000034  2000              MOVS     r0,#0
000036  490c              LDR      r1,|L7.104|
000038  7008              STRB     r0,[r1,#0]
;;;225                is_timer_active = false;
00003a  490c              LDR      r1,|L7.108|
00003c  7008              STRB     r0,[r1,#0]
;;;226                AT_COMMAND_LOG_INFO("[AT_COMMAND] error\r\n");
00003e  a00c              ADR      r0,|L7.112|
000040  f7fffffe          BL       __2printf
000044  e006              B        |L7.84|
                  |L7.70|
;;;227            } else if (AT_COMMAND_STATE_EXECUTING == g_at_command_state) {
000046  4805              LDR      r0,|L7.92|
000048  7800              LDRB     r0,[r0,#0]  ; g_at_command_state
00004a  2803              CMP      r0,#3
00004c  d102              BNE      |L7.84|
;;;228                AT_COMMAND_LOG_INFO("[AT_COMMAND] execute timeout\r\n");
00004e  a00e              ADR      r0,|L7.136|
000050  f7fffffe          BL       __2printf
                  |L7.84|
;;;229            }
;;;230        }
;;;231    }
000054  bd10              POP      {r4,pc}
;;;232    
                          ENDP

000056  0000              DCW      0x0000
                  |L7.88|
                          DCD      at_command_timer_handle
                  |L7.92|
                          DCD      g_at_command_state
                  |L7.96|
                          DCD      g_parse_context
                  |L7.100|
                          DCD      buffer
                  |L7.104|
                          DCD      buffer_index
                  |L7.108|
                          DCD      is_timer_active
                  |L7.112|
000070  5b41545f          DCB      "[AT_COMMAND] error\r\n",0
000074  434f4d4d
000078  414e445d
00007c  20657272
000080  6f720d0a
000084  00      
000085  00                DCB      0
000086  00                DCB      0
000087  00                DCB      0
                  |L7.136|
000088  5b41545f          DCB      "[AT_COMMAND] execute timeout\r\n",0
00008c  434f4d4d
000090  414e445d
000094  20657865
000098  63757465
00009c  2074696d
0000a0  656f7574
0000a4  0d0a00  
0000a7  00                DCB      0

                          AREA ||i.at_command_timer_start||, CODE, READONLY, ALIGN=2

                  at_command_timer_start PROC
;;;46     
;;;47     static at_command_status_t at_command_timer_start(uint32_t timer_length)
000000  b5f8              PUSH     {r3-r7,lr}
;;;48     {
000002  4604              MOV      r4,r0
;;;49         uint32_t time = timer_length / portTICK_PERIOD_MS;
000004  4625              MOV      r5,r4
;;;50         /*if (xTimerIsTimerActive(at_command_timer_handle) != pdFALSE) {
;;;51             return AT_COMMAND_FAIL;
;;;52         }*/
;;;53         if (is_timer_active) {
000006  4814              LDR      r0,|L8.88|
000008  7800              LDRB     r0,[r0,#0]  ; is_timer_active
00000a  b110              CBZ      r0,|L8.18|
;;;54             return AT_COMMAND_FAIL;
00000c  f04f30ff          MOV      r0,#0xffffffff
                  |L8.16|
;;;55         }
;;;56         if (pdFALSE == xTimerChangePeriodFromISR(at_command_timer_handle, time, 0)) {
;;;57             return AT_COMMAND_FAIL;
;;;58         }
;;;59         if (pdFALSE == xTimerResetFromISR(at_command_timer_handle, 0)) {
;;;60             return AT_COMMAND_FAIL;
;;;61         }
;;;62         is_timer_active = true;
;;;63         return AT_COMMAND_OK;
;;;64     }
000010  bdf8              POP      {r3-r7,pc}
                  |L8.18|
000012  2000              MOVS     r0,#0                 ;56
000014  4603              MOV      r3,r0                 ;56
000016  462a              MOV      r2,r5                 ;56
000018  2109              MOVS     r1,#9                 ;56
00001a  9000              STR      r0,[sp,#0]            ;56
00001c  480f              LDR      r0,|L8.92|
00001e  6800              LDR      r0,[r0,#0]            ;56  ; at_command_timer_handle
000020  f7fffffe          BL       xTimerGenericCommand
000024  b910              CBNZ     r0,|L8.44|
000026  f04f30ff          MOV      r0,#0xffffffff        ;57
00002a  e7f1              B        |L8.16|
                  |L8.44|
00002c  f7fffffe          BL       xTaskGetTickCountFromISR
000030  4606              MOV      r6,r0                 ;59
000032  2000              MOVS     r0,#0                 ;59
000034  4603              MOV      r3,r0                 ;59
000036  4632              MOV      r2,r6                 ;59
000038  2107              MOVS     r1,#7                 ;59
00003a  9000              STR      r0,[sp,#0]            ;59
00003c  4807              LDR      r0,|L8.92|
00003e  6800              LDR      r0,[r0,#0]            ;59  ; at_command_timer_handle
000040  f7fffffe          BL       xTimerGenericCommand
000044  b910              CBNZ     r0,|L8.76|
000046  f04f30ff          MOV      r0,#0xffffffff        ;60
00004a  e7e1              B        |L8.16|
                  |L8.76|
00004c  2001              MOVS     r0,#1                 ;62
00004e  4902              LDR      r1,|L8.88|
000050  7008              STRB     r0,[r1,#0]            ;62
000052  2000              MOVS     r0,#0                 ;63
000054  e7dc              B        |L8.16|
;;;65     
                          ENDP

000056  0000              DCW      0x0000
                  |L8.88|
                          DCD      is_timer_active
                  |L8.92|
                          DCD      at_command_timer_handle

                          AREA ||i.at_command_timer_stop||, CODE, READONLY, ALIGN=2

                  at_command_timer_stop PROC
;;;34     
;;;35     static at_command_status_t at_command_timer_stop()
000000  b508              PUSH     {r3,lr}
;;;36     {
;;;37         if (!is_timer_active) {
000002  480c              LDR      r0,|L9.52|
000004  7800              LDRB     r0,[r0,#0]  ; is_timer_active
000006  b910              CBNZ     r0,|L9.14|
;;;38             return AT_COMMAND_FAIL;
000008  f04f30ff          MOV      r0,#0xffffffff
                  |L9.12|
;;;39         }
;;;40         if (pdFALSE == xTimerStop(at_command_timer_handle, 0)) {
;;;41             return AT_COMMAND_FAIL;
;;;42         }
;;;43         is_timer_active = false;
;;;44         return AT_COMMAND_OK;
;;;45     }
00000c  bd08              POP      {r3,pc}
                  |L9.14|
00000e  2000              MOVS     r0,#0                 ;40
000010  4603              MOV      r3,r0                 ;40
000012  4602              MOV      r2,r0                 ;40
000014  2103              MOVS     r1,#3                 ;40
000016  9000              STR      r0,[sp,#0]            ;40
000018  4807              LDR      r0,|L9.56|
00001a  6800              LDR      r0,[r0,#0]            ;40  ; at_command_timer_handle
00001c  f7fffffe          BL       xTimerGenericCommand
000020  b910              CBNZ     r0,|L9.40|
000022  f04f30ff          MOV      r0,#0xffffffff        ;41
000026  e7f1              B        |L9.12|
                  |L9.40|
000028  2000              MOVS     r0,#0                 ;43
00002a  4902              LDR      r1,|L9.52|
00002c  7008              STRB     r0,[r1,#0]            ;43
00002e  bf00              NOP                            ;44
000030  e7ec              B        |L9.12|
;;;46     
                          ENDP

000032  0000              DCW      0x0000
                  |L9.52|
                          DCD      is_timer_active
                  |L9.56|
                          DCD      at_command_timer_handle

                          AREA ||i.at_command_uart_rx_isr_handler||, CODE, READONLY, ALIGN=2

                  at_command_uart_rx_isr_handler PROC
;;;188    
;;;189    void at_command_uart_rx_isr_handler(uint8_t data)
000000  b538              PUSH     {r3-r5,lr}
;;;190    {
000002  4604              MOV      r4,r0
;;;191        BaseType_t pxHigherPriorityTaskWoken;
;;;192    
;;;193        at_command_timer_start(AT_COMMAND_PARSE_TIMEOUT_LENGTH);
000004  2064              MOVS     r0,#0x64
000006  f7fffffe          BL       at_command_timer_start
;;;194        buffer[buffer_index++] = data;
00000a  4824              LDR      r0,|L10.156|
00000c  7801              LDRB     r1,[r0,#0]  ; buffer_index
00000e  7800              LDRB     r0,[r0,#0]  ; buffer_index
000010  1c40              ADDS     r0,r0,#1
000012  4a22              LDR      r2,|L10.156|
000014  7010              STRB     r0,[r2,#0]
000016  4822              LDR      r0,|L10.160|
000018  5444              STRB     r4,[r0,r1]
;;;195        if (buffer_index > sizeof(buffer)) {
00001a  4610              MOV      r0,r2
00001c  7800              LDRB     r0,[r0,#0]  ; buffer_index
00001e  2832              CMP      r0,#0x32
000020  d90c              BLS      |L10.60|
;;;196            memset(buffer, 0, sizeof(buffer));
000022  2132              MOVS     r1,#0x32
000024  481e              LDR      r0,|L10.160|
000026  f7fffffe          BL       __aeabi_memclr
;;;197            buffer_index = 0;
00002a  2000              MOVS     r0,#0
00002c  491b              LDR      r1,|L10.156|
00002e  7008              STRB     r0,[r1,#0]
;;;198            comClearRxFifo(COM1);
000030  f7fffffe          BL       comClearRxFifo
;;;199            g_at_command_state = AT_COMMAND_STATE_IDLE;
000034  2000              MOVS     r0,#0
000036  491b              LDR      r1,|L10.164|
000038  7008              STRB     r0,[r1,#0]
                  |L10.58|
;;;200            return;
;;;201        }
;;;202        g_at_command_state = AT_COMAND_STATE_PARSING;
;;;203        if ((buffer_index > AT_COMMAND_TAIL_LENGTH) &&
;;;204                (buffer[buffer_index - 2] == AT_COMMAND_TAIL_R) &&
;;;205                (buffer[buffer_index - 1] == AT_COMMAND_TAIL_N)) {
;;;206            if (xTaskGetSchedulerState() == taskSCHEDULER_NOT_STARTED || 0 == at_command_semaphore) {
;;;207                return;
;;;208            }
;;;209            xSemaphoreGiveFromISR((SemaphoreHandle_t)at_command_semaphore, &pxHigherPriorityTaskWoken);
;;;210            portYIELD_FROM_ISR(pxHigherPriorityTaskWoken);
;;;211            memset(buffer, 0, sizeof(buffer));
;;;212            buffer_index = 0;
;;;213        }
;;;214    }
00003a  bd38              POP      {r3-r5,pc}
                  |L10.60|
00003c  2001              MOVS     r0,#1                 ;202
00003e  4919              LDR      r1,|L10.164|
000040  7008              STRB     r0,[r1,#0]            ;202
000042  4816              LDR      r0,|L10.156|
000044  7800              LDRB     r0,[r0,#0]            ;203  ; buffer_index
000046  2802              CMP      r0,#2                 ;203
000048  dd26              BLE      |L10.152|
00004a  4814              LDR      r0,|L10.156|
00004c  7800              LDRB     r0,[r0,#0]            ;204  ; buffer_index
00004e  1e80              SUBS     r0,r0,#2              ;204
000050  4913              LDR      r1,|L10.160|
000052  5c08              LDRB     r0,[r1,r0]            ;204
000054  280d              CMP      r0,#0xd               ;204
000056  d11f              BNE      |L10.152|
000058  4810              LDR      r0,|L10.156|
00005a  7800              LDRB     r0,[r0,#0]            ;205  ; buffer_index
00005c  1e40              SUBS     r0,r0,#1              ;205
00005e  5c08              LDRB     r0,[r1,r0]            ;205
000060  280a              CMP      r0,#0xa               ;205
000062  d119              BNE      |L10.152|
000064  f7fffffe          BL       xTaskGetSchedulerState
000068  2801              CMP      r0,#1                 ;206
00006a  d002              BEQ      |L10.114|
00006c  480e              LDR      r0,|L10.168|
00006e  6800              LDR      r0,[r0,#0]            ;206  ; at_command_semaphore
000070  b900              CBNZ     r0,|L10.116|
                  |L10.114|
000072  e7e2              B        |L10.58|
                  |L10.116|
000074  4669              MOV      r1,sp                 ;209
000076  480c              LDR      r0,|L10.168|
000078  6800              LDR      r0,[r0,#0]            ;209  ; at_command_semaphore
00007a  f7fffffe          BL       xQueueGiveFromISR
00007e  9800              LDR      r0,[sp,#0]            ;210
000080  b118              CBZ      r0,|L10.138|
000082  f04f5080          MOV      r0,#0x10000000        ;210
000086  4909              LDR      r1,|L10.172|
000088  6008              STR      r0,[r1,#0]            ;210
                  |L10.138|
00008a  2132              MOVS     r1,#0x32              ;211
00008c  4804              LDR      r0,|L10.160|
00008e  f7fffffe          BL       __aeabi_memclr
000092  2000              MOVS     r0,#0                 ;212
000094  4901              LDR      r1,|L10.156|
000096  7008              STRB     r0,[r1,#0]            ;212
                  |L10.152|
000098  bf00              NOP      
00009a  e7ce              B        |L10.58|
;;;215    
                          ENDP

                  |L10.156|
                          DCD      buffer_index
                  |L10.160|
                          DCD      buffer
                  |L10.164|
                          DCD      g_at_command_state
                  |L10.168|
                          DCD      at_command_semaphore
                  |L10.172|
                          DCD      0xe000ed04

                          AREA ||i.vTaskATCommand||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  vTaskATCommand PROC
;;;136    
;;;137    void vTaskATCommand(void *pvParameters)
000000  b09a              SUB      sp,sp,#0x68
;;;138    {
;;;139        uint8_t i = 0;
000002  2400              MOVS     r4,#0
;;;140        uint16_t read_length = 0;
000004  2600              MOVS     r6,#0
;;;141        uint16_t rx_fifo_available_length = 0;
000006  2500              MOVS     r5,#0
;;;142        at_command_response_t response = {0};
000008  2168              MOVS     r1,#0x68
00000a  4668              MOV      r0,sp
00000c  f7fffffe          BL       __aeabi_memclr4
;;;143        while (1) {
000010  e080              B        |L11.276|
                  |L11.18|
;;;144            xSemaphoreTake((SemaphoreHandle_t)at_command_semaphore, portMAX_DELAY);
000012  2300              MOVS     r3,#0
000014  1e5a              SUBS     r2,r3,#1
000016  4619              MOV      r1,r3
000018  483f              LDR      r0,|L11.280|
00001a  6800              LDR      r0,[r0,#0]  ; at_command_semaphore
00001c  f7fffffe          BL       xQueueGenericReceive
;;;145            rx_fifo_available_length = comGetRxFifoAvailableBufferLength(COM1);
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       comGetRxFifoAvailableBufferLength
000026  4605              MOV      r5,r0
;;;146            if (rx_fifo_available_length > 0) {
000028  2d00              CMP      r5,#0
00002a  dd73              BLE      |L11.276|
;;;147                if (g_parse_context.buffer == NULL) {
00002c  483b              LDR      r0,|L11.284|
00002e  6800              LDR      r0,[r0,#0]  ; g_parse_context
000030  b960              CBNZ     r0,|L11.76|
;;;148                    g_parse_context.buffer = (uint8_t *)pvPortMalloc(rx_fifo_available_length);
000032  4628              MOV      r0,r5
000034  f7fffffe          BL       pvPortMalloc
000038  4938              LDR      r1,|L11.284|
00003a  6008              STR      r0,[r1,#0]  ; g_parse_context
;;;149                    AT_COMMAND_ASSERT(g_parse_context.buffer != NULL);
00003c  4608              MOV      r0,r1
00003e  6800              LDR      r0,[r0,#0]  ; g_parse_context
000040  b100              CBZ      r0,|L11.68|
000042  e003              B        |L11.76|
                  |L11.68|
000044  2195              MOVS     r1,#0x95
000046  a036              ADR      r0,|L11.288|
000048  f7fffffe          BL       assert_failed
                  |L11.76|
;;;150                }
;;;151                read_length = comGetBuf(COM1, g_parse_context.buffer, rx_fifo_available_length);
00004c  4833              LDR      r0,|L11.284|
00004e  462a              MOV      r2,r5
000050  6801              LDR      r1,[r0,#0]  ; g_parse_context
000052  2000              MOVS     r0,#0
000054  f7fffffe          BL       comGetBuf
000058  4606              MOV      r6,r0
;;;152                AT_COMMAND_ASSERT(read_length == rx_fifo_available_length);
00005a  42ae              CMP      r6,r5
00005c  d100              BNE      |L11.96|
00005e  e003              B        |L11.104|
                  |L11.96|
000060  2198              MOVS     r1,#0x98
000062  a02f              ADR      r0,|L11.288|
000064  f7fffffe          BL       assert_failed
                  |L11.104|
;;;153                AT_COMMAND_LOG_INFO("[AT_COMMAND] %s", g_parse_context.buffer);
000068  482c              LDR      r0,|L11.284|
00006a  6801              LDR      r1,[r0,#0]  ; g_parse_context
00006c  a037              ADR      r0,|L11.332|
00006e  f7fffffe          BL       __2printf
;;;154                comClearRxFifo(COM1);
000072  2000              MOVS     r0,#0
000074  f7fffffe          BL       comClearRxFifo
;;;155                if (AT_COMMAND_OK == at_command_parsing(g_parse_context.buffer, rx_fifo_available_length, &g_parse_context)) {
000078  4928              LDR      r1,|L11.284|
00007a  460a              MOV      r2,r1
00007c  6808              LDR      r0,[r1,#0]  ; g_parse_context
00007e  4629              MOV      r1,r5
000080  f7fffffe          BL       at_command_parsing
000084  bb50              CBNZ     r0,|L11.220|
;;;156                    at_command_timer_stop();
000086  f7fffffe          BL       at_command_timer_stop
;;;157                    g_at_command_state = AT_COMAND_STATE_PARSE_DONE;
00008a  2002              MOVS     r0,#2
00008c  4933              LDR      r1,|L11.348|
00008e  7008              STRB     r0,[r1,#0]
;;;158                    for (i = 0; i < AT_COMMAND_ITEM_MAX_COUNT; i++) {
000090  2400              MOVS     r4,#0
000092  e020              B        |L11.214|
                  |L11.148|
;;;159                        if ((0 == strncmp((char *)g_parse_context.buffer, at_cmd_item_table[i].name, g_parse_context.at_cmd_name_length)) &&
000094  4b21              LDR      r3,|L11.284|
000096  795a              LDRB     r2,[r3,#5]  ; g_parse_context
000098  4b31              LDR      r3,|L11.352|
00009a  f8531034          LDR      r1,[r3,r4,LSL #3]
00009e  4b1f              LDR      r3,|L11.284|
0000a0  6818              LDR      r0,[r3,#0]  ; g_parse_context
0000a2  f7fffffe          BL       strncmp
0000a6  b9a0              CBNZ     r0,|L11.210|
;;;160                                (NULL != at_cmd_item_table[i].handler)) {
0000a8  482d              LDR      r0,|L11.352|
0000aa  eb0000c4          ADD      r0,r0,r4,LSL #3
0000ae  6840              LDR      r0,[r0,#4]
0000b0  b178              CBZ      r0,|L11.210|
;;;161                            g_at_command_state = AT_COMMAND_STATE_EXECUTING;
0000b2  2003              MOVS     r0,#3
0000b4  4929              LDR      r1,|L11.348|
0000b6  7008              STRB     r0,[r1,#0]
;;;162                            at_cmd_item_table[i].handler((void *)(g_parse_context.buffer + g_parse_context.at_cmd_param_offset), g_parse_context.at_cmd_param_length);
0000b8  4b18              LDR      r3,|L11.284|
0000ba  681b              LDR      r3,[r3,#0]  ; g_parse_context
0000bc  4f17              LDR      r7,|L11.284|
0000be  79bf              LDRB     r7,[r7,#6]  ; g_parse_context
0000c0  19d8              ADDS     r0,r3,r7
0000c2  4b16              LDR      r3,|L11.284|
0000c4  79d9              LDRB     r1,[r3,#7]  ; g_parse_context
0000c6  4b26              LDR      r3,|L11.352|
0000c8  eb0303c4          ADD      r3,r3,r4,LSL #3
0000cc  685a              LDR      r2,[r3,#4]
0000ce  4790              BLX      r2
;;;163                            break;
0000d0  e003              B        |L11.218|
                  |L11.210|
0000d2  1c60              ADDS     r0,r4,#1              ;158
0000d4  b2c4              UXTB     r4,r0                 ;158
                  |L11.214|
0000d6  2c14              CMP      r4,#0x14              ;158
0000d8  dbdc              BLT      |L11.148|
                  |L11.218|
0000da  e008              B        |L11.238|
                  |L11.220|
;;;164                        }
;;;165                    }
;;;166                } else {
;;;167                    at_command_timer_stop();
0000dc  f7fffffe          BL       at_command_timer_stop
;;;168                    strcpy(response.buffer, "Error, Unknown AT command");
0000e0  a120              ADR      r1,|L11.356|
0000e2  4668              MOV      r0,sp
0000e4  f7fffffe          BL       strcpy
;;;169                    at_command_send_response(&response);
0000e8  4668              MOV      r0,sp
0000ea  f7fffffe          BL       at_command_send_response
                  |L11.238|
;;;170                }
;;;171                if (g_parse_context.buffer) {
0000ee  480b              LDR      r0,|L11.284|
0000f0  6800              LDR      r0,[r0,#0]  ; g_parse_context
0000f2  b140              CBZ      r0,|L11.262|
;;;172                    memset(g_parse_context.buffer, 0, rx_fifo_available_length);
0000f4  4909              LDR      r1,|L11.284|
0000f6  6808              LDR      r0,[r1,#0]  ; g_parse_context
0000f8  4629              MOV      r1,r5
0000fa  f7fffffe          BL       __aeabi_memclr
;;;173                    vPortFree(g_parse_context.buffer);
0000fe  4907              LDR      r1,|L11.284|
000100  6808              LDR      r0,[r1,#0]  ; g_parse_context
000102  f7fffffe          BL       vPortFree
                  |L11.262|
;;;174                }
;;;175                memset((void *)&g_parse_context, 0, sizeof(at_command_parse_t));
000106  4805              LDR      r0,|L11.284|
000108  2100              MOVS     r1,#0
00010a  6001              STR      r1,[r0,#0]  ; g_parse_context
00010c  6041              STR      r1,[r0,#4]  ; g_parse_context
;;;176                g_at_command_state = AT_COMMAND_STATE_IDLE;
00010e  2000              MOVS     r0,#0
000110  4912              LDR      r1,|L11.348|
000112  7008              STRB     r0,[r1,#0]
                  |L11.276|
000114  e77d              B        |L11.18|
;;;177            }
;;;178        }
;;;179    }
;;;180    
                          ENDP

000116  0000              DCW      0x0000
                  |L11.280|
                          DCD      at_command_semaphore
                  |L11.284|
                          DCD      g_parse_context
                  |L11.288|
000120  2e2e5c2e          DCB      "..\\..\\Middleware\\at_command\\at_command.c",0
000124  2e5c4d69
000128  64646c65
00012c  77617265
000130  5c61745f
000134  636f6d6d
000138  616e645c
00013c  61745f63
000140  6f6d6d61
000144  6e642e63
000148  00      
000149  00                DCB      0
00014a  00                DCB      0
00014b  00                DCB      0
                  |L11.332|
00014c  5b41545f          DCB      "[AT_COMMAND] %s",0
000150  434f4d4d
000154  414e445d
000158  20257300
                  |L11.348|
                          DCD      g_at_command_state
                  |L11.352|
                          DCD      at_cmd_item_table
                  |L11.356|
000164  4572726f          DCB      "Error, Unknown AT command",0
000168  722c2055
00016c  6e6b6e6f
000170  776e2041
000174  5420636f
000178  6d6d616e
00017c  6400    
00017e  00                DCB      0
00017f  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  buffer
                          %        50

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  41542b42          DCB      "AT+BTSYSIT",0
000004  54535953
000008  495400  

                          AREA ||.data||, DATA, ALIGN=2

                  g_at_command_state
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  at_command_timer_handle
                          DCD      0x00000000
                  g_parse_context
                          DCD      0x00000000
00000c  00000000          DCB      0x00,0x00,0x00,0x00
                  at_command_semaphore
                          DCD      0x00000000
                  is_timer_active
000014  00                DCB      0x00
                  buffer_index
000015  000000            DCB      0x00,0x00,0x00
                  at_cmd_item_table
                          DCD      ||.conststring||
                          DCD      at_command_bt_system_it_handler
                          %        152

;*** Start embedded assembler ***

#line 1 "..\\..\\Middleware\\at_command\\at_command.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_at_command_c_ed24cf60____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_at_command_c_ed24cf60____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_at_command_c_ed24cf60____REVSH|
#line 128
|__asm___12_at_command_c_ed24cf60____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
