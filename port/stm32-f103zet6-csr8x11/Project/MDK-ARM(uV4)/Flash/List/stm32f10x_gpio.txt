; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\stm32f10x_gpio.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\stm32f10x_gpio.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\Middleware\blue_angel\inc -I..\..\Middleware\bt_callback_manager -I..\..\Middleware\blue_angel\btif -I..\..\Middleware\blue_angel\common -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\src\common -I..\..\Middleware\blue_angel\src\inc -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\platform\rtos -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\ut_manager\Cunit\Headers -I..\..\Middleware\ut_manager\Cunit\interface -I..\..\Middleware\blue_angel\platform\test -I..\..\Middleware\blue_angel\driver -I..\..\Middleware\blue_angel\src\core\hci -I..\..\User\bt\inc -I..\..\Middleware\bt_callback_manager -I..\..\Middleware\at_command -I..\..\Middleware\blue_angel\src\core\gap -I..\..\Middleware\blue_angel\src\core\l2cap -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=522 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DNDEBUG --omf_browse=.\flash\obj\stm32f10x_gpio.crf ..\..\Libraries\STM32F10x_StdPeriph_Driver\src\stm32f10x_gpio.c]
                          THUMB

                          AREA ||i.GPIO_AFIODeInit||, CODE, READONLY, ALIGN=1

                  GPIO_AFIODeInit PROC
;;;164      */
;;;165    void GPIO_AFIODeInit(void)
000000  b510              PUSH     {r4,lr}
;;;166    {
;;;167      RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, ENABLE);
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;168      RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, DISABLE);
00000a  2100              MOVS     r1,#0
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;169    }
000012  bd10              POP      {r4,pc}
;;;170    
                          ENDP


                          AREA ||i.GPIO_DeInit||, CODE, READONLY, ALIGN=2

                  GPIO_DeInit PROC
;;;113      */
;;;114    void GPIO_DeInit(GPIO_TypeDef* GPIOx)
000000  b510              PUSH     {r4,lr}
;;;115    {
000002  4604              MOV      r4,r0
;;;116      /* Check the parameters */
;;;117      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  4836              LDR      r0,|L2.224|
000006  4284              CMP      r4,r0
000008  d011              BEQ      |L2.46|
00000a  4836              LDR      r0,|L2.228|
00000c  4284              CMP      r4,r0
00000e  d00e              BEQ      |L2.46|
000010  4835              LDR      r0,|L2.232|
000012  4284              CMP      r4,r0
000014  d00b              BEQ      |L2.46|
000016  4835              LDR      r0,|L2.236|
000018  4284              CMP      r4,r0
00001a  d008              BEQ      |L2.46|
00001c  4834              LDR      r0,|L2.240|
00001e  4284              CMP      r4,r0
000020  d005              BEQ      |L2.46|
000022  4834              LDR      r0,|L2.244|
000024  4284              CMP      r4,r0
000026  d002              BEQ      |L2.46|
000028  4833              LDR      r0,|L2.248|
00002a  4284              CMP      r4,r0
00002c  d100              BNE      |L2.48|
                  |L2.46|
00002e  e003              B        |L2.56|
                  |L2.48|
000030  2175              MOVS     r1,#0x75
000032  a032              ADR      r0,|L2.252|
000034  f7fffffe          BL       assert_failed
                  |L2.56|
;;;118      
;;;119      if (GPIOx == GPIOA)
000038  4829              LDR      r0,|L2.224|
00003a  4284              CMP      r4,r0
00003c  d108              BNE      |L2.80|
;;;120      {
;;;121        RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, ENABLE);
00003e  2101              MOVS     r1,#1
000040  2004              MOVS     r0,#4
000042  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;122        RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, DISABLE);
000046  2100              MOVS     r1,#0
000048  2004              MOVS     r0,#4
00004a  f7fffffe          BL       RCC_APB2PeriphResetCmd
00004e  e046              B        |L2.222|
                  |L2.80|
;;;123      }
;;;124      else if (GPIOx == GPIOB)
000050  4824              LDR      r0,|L2.228|
000052  4284              CMP      r4,r0
000054  d108              BNE      |L2.104|
;;;125      {
;;;126        RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, ENABLE);
000056  2101              MOVS     r1,#1
000058  2008              MOVS     r0,#8
00005a  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;127        RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, DISABLE);
00005e  2100              MOVS     r1,#0
000060  2008              MOVS     r0,#8
000062  f7fffffe          BL       RCC_APB2PeriphResetCmd
000066  e03a              B        |L2.222|
                  |L2.104|
;;;128      }
;;;129      else if (GPIOx == GPIOC)
000068  481f              LDR      r0,|L2.232|
00006a  4284              CMP      r4,r0
00006c  d108              BNE      |L2.128|
;;;130      {
;;;131        RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, ENABLE);
00006e  2101              MOVS     r1,#1
000070  2010              MOVS     r0,#0x10
000072  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;132        RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, DISABLE);
000076  2100              MOVS     r1,#0
000078  2010              MOVS     r0,#0x10
00007a  f7fffffe          BL       RCC_APB2PeriphResetCmd
00007e  e02e              B        |L2.222|
                  |L2.128|
;;;133      }
;;;134      else if (GPIOx == GPIOD)
000080  481a              LDR      r0,|L2.236|
000082  4284              CMP      r4,r0
000084  d108              BNE      |L2.152|
;;;135      {
;;;136        RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, ENABLE);
000086  2101              MOVS     r1,#1
000088  2020              MOVS     r0,#0x20
00008a  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;137        RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, DISABLE);
00008e  2100              MOVS     r1,#0
000090  2020              MOVS     r0,#0x20
000092  f7fffffe          BL       RCC_APB2PeriphResetCmd
000096  e022              B        |L2.222|
                  |L2.152|
;;;138      }    
;;;139      else if (GPIOx == GPIOE)
000098  4815              LDR      r0,|L2.240|
00009a  4284              CMP      r4,r0
00009c  d108              BNE      |L2.176|
;;;140      {
;;;141        RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, ENABLE);
00009e  2101              MOVS     r1,#1
0000a0  2040              MOVS     r0,#0x40
0000a2  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;142        RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, DISABLE);
0000a6  2100              MOVS     r1,#0
0000a8  2040              MOVS     r0,#0x40
0000aa  f7fffffe          BL       RCC_APB2PeriphResetCmd
0000ae  e016              B        |L2.222|
                  |L2.176|
;;;143      } 
;;;144      else if (GPIOx == GPIOF)
0000b0  4810              LDR      r0,|L2.244|
0000b2  4284              CMP      r4,r0
0000b4  d108              BNE      |L2.200|
;;;145      {
;;;146        RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, ENABLE);
0000b6  2101              MOVS     r1,#1
0000b8  2080              MOVS     r0,#0x80
0000ba  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;147        RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, DISABLE);
0000be  2100              MOVS     r1,#0
0000c0  2080              MOVS     r0,#0x80
0000c2  f7fffffe          BL       RCC_APB2PeriphResetCmd
0000c6  e00a              B        |L2.222|
                  |L2.200|
;;;148      }
;;;149      else
;;;150      {
;;;151        if (GPIOx == GPIOG)
0000c8  480b              LDR      r0,|L2.248|
0000ca  4284              CMP      r4,r0
0000cc  d107              BNE      |L2.222|
;;;152        {
;;;153          RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, ENABLE);
0000ce  2101              MOVS     r1,#1
0000d0  1580              ASRS     r0,r0,#22
0000d2  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;154          RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, DISABLE);
0000d6  2100              MOVS     r1,#0
0000d8  15a0              ASRS     r0,r4,#22
0000da  f7fffffe          BL       RCC_APB2PeriphResetCmd
                  |L2.222|
;;;155        }
;;;156      }
;;;157    }
0000de  bd10              POP      {r4,pc}
;;;158    
                          ENDP

                  |L2.224|
                          DCD      0x40010800
                  |L2.228|
                          DCD      0x40010c00
                  |L2.232|
                          DCD      0x40011000
                  |L2.236|
                          DCD      0x40011400
                  |L2.240|
                          DCD      0x40011800
                  |L2.244|
                          DCD      0x40011c00
                  |L2.248|
                          DCD      0x40012000
                  |L2.252|
0000fc  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
000100  2e5c4c69
000104  62726172
000108  6965735c
00010c  53544d33
000110  32463130
000114  785f5374
000118  64506572
00011c  6970685f
000120  44726976
000124  65725c73
000128  72635c73
00012c  746d    
00012e  33326631          DCB      "32f10x_gpio.c",0
000132  30785f67
000136  70696f2e
00013a  6300    

                          AREA ||i.GPIO_ETH_MediaInterfaceConfig||, CODE, READONLY, ALIGN=2

                  GPIO_ETH_MediaInterfaceConfig PROC
;;;635      */
;;;636    void GPIO_ETH_MediaInterfaceConfig(uint32_t GPIO_ETH_MediaInterface) 
000000  b510              PUSH     {r4,lr}
;;;637    { 
000002  4604              MOV      r4,r0
;;;638      assert_param(IS_GPIO_ETH_MEDIA_INTERFACE(GPIO_ETH_MediaInterface)); 
000004  b10c              CBZ      r4,|L3.10|
000006  2c01              CMP      r4,#1
000008  d100              BNE      |L3.12|
                  |L3.10|
00000a  e004              B        |L3.22|
                  |L3.12|
00000c  f240217e          MOV      r1,#0x27e
000010  a002              ADR      r0,|L3.28|
000012  f7fffffe          BL       assert_failed
                  |L3.22|
;;;639    
;;;640      /* Configure MII_RMII selection bit */ 
;;;641      *(__IO uint32_t *) MAPR_MII_RMII_SEL_BB = GPIO_ETH_MediaInterface; 
000016  4811              LDR      r0,|L3.92|
000018  6004              STR      r4,[r0,#0]
;;;642    }
00001a  bd10              POP      {r4,pc}
;;;643      
                          ENDP

                  |L3.28|
00001c  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
000020  2e5c4c69
000024  62726172
000028  6965735c
00002c  53544d33
000030  32463130
000034  785f5374
000038  64506572
00003c  6970685f
000040  44726976
000044  65725c73
000048  72635c73
00004c  746d    
00004e  33326631          DCB      "32f10x_gpio.c",0
000052  30785f67
000056  70696f2e
00005a  6300    
                  |L3.92|
                          DCD      0x422000dc

                          AREA ||i.GPIO_EXTILineConfig||, CODE, READONLY, ALIGN=2

                  GPIO_EXTILineConfig PROC
;;;614      */
;;;615    void GPIO_EXTILineConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)
000000  b570              PUSH     {r4-r6,lr}
;;;616    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;617      uint32_t tmp = 0x00;
000006  2600              MOVS     r6,#0
;;;618      /* Check the parameters */
;;;619      assert_param(IS_GPIO_EXTI_PORT_SOURCE(GPIO_PortSource));
000008  b15d              CBZ      r5,|L4.34|
00000a  2d01              CMP      r5,#1
00000c  d009              BEQ      |L4.34|
00000e  2d02              CMP      r5,#2
000010  d007              BEQ      |L4.34|
000012  2d03              CMP      r5,#3
000014  d005              BEQ      |L4.34|
000016  2d04              CMP      r5,#4
000018  d003              BEQ      |L4.34|
00001a  2d05              CMP      r5,#5
00001c  d001              BEQ      |L4.34|
00001e  2d06              CMP      r5,#6
000020  d100              BNE      |L4.36|
                  |L4.34|
000022  e004              B        |L4.46|
                  |L4.36|
000024  f240216b          MOV      r1,#0x26b
000028  a021              ADR      r0,|L4.176|
00002a  f7fffffe          BL       assert_failed
                  |L4.46|
;;;620      assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
00002e  b1ec              CBZ      r4,|L4.108|
000030  2c01              CMP      r4,#1
000032  d01b              BEQ      |L4.108|
000034  2c02              CMP      r4,#2
000036  d019              BEQ      |L4.108|
000038  2c03              CMP      r4,#3
00003a  d017              BEQ      |L4.108|
00003c  2c04              CMP      r4,#4
00003e  d015              BEQ      |L4.108|
000040  2c05              CMP      r4,#5
000042  d013              BEQ      |L4.108|
000044  2c06              CMP      r4,#6
000046  d011              BEQ      |L4.108|
000048  2c07              CMP      r4,#7
00004a  d00f              BEQ      |L4.108|
00004c  2c08              CMP      r4,#8
00004e  d00d              BEQ      |L4.108|
000050  2c09              CMP      r4,#9
000052  d00b              BEQ      |L4.108|
000054  2c0a              CMP      r4,#0xa
000056  d009              BEQ      |L4.108|
000058  2c0b              CMP      r4,#0xb
00005a  d007              BEQ      |L4.108|
00005c  2c0c              CMP      r4,#0xc
00005e  d005              BEQ      |L4.108|
000060  2c0d              CMP      r4,#0xd
000062  d003              BEQ      |L4.108|
000064  2c0e              CMP      r4,#0xe
000066  d001              BEQ      |L4.108|
000068  2c0f              CMP      r4,#0xf
00006a  d100              BNE      |L4.110|
                  |L4.108|
00006c  e004              B        |L4.120|
                  |L4.110|
00006e  f44f711b          MOV      r1,#0x26c
000072  a00f              ADR      r0,|L4.176|
000074  f7fffffe          BL       assert_failed
                  |L4.120|
;;;621      
;;;622      tmp = ((uint32_t)0x0F) << (0x04 * (GPIO_PinSource & (uint8_t)0x03));
000078  07a0              LSLS     r0,r4,#30
00007a  0f01              LSRS     r1,r0,#28
00007c  200f              MOVS     r0,#0xf
00007e  fa00f601          LSL      r6,r0,r1
;;;623      AFIO->EXTICR[GPIO_PinSource >> 0x02] &= ~tmp;
000082  481b              LDR      r0,|L4.240|
000084  10a1              ASRS     r1,r4,#2
000086  f8500021          LDR      r0,[r0,r1,LSL #2]
00008a  43b0              BICS     r0,r0,r6
00008c  4918              LDR      r1,|L4.240|
00008e  10a2              ASRS     r2,r4,#2
000090  f8410022          STR      r0,[r1,r2,LSL #2]
;;;624      AFIO->EXTICR[GPIO_PinSource >> 0x02] |= (((uint32_t)GPIO_PortSource) << (0x04 * (GPIO_PinSource & (uint8_t)0x03)));
000094  4608              MOV      r0,r1
000096  10a1              ASRS     r1,r4,#2
000098  f8500021          LDR      r0,[r0,r1,LSL #2]
00009c  07a1              LSLS     r1,r4,#30
00009e  0f09              LSRS     r1,r1,#28
0000a0  fa05f101          LSL      r1,r5,r1
0000a4  4308              ORRS     r0,r0,r1
0000a6  4912              LDR      r1,|L4.240|
0000a8  10a2              ASRS     r2,r4,#2
0000aa  f8410022          STR      r0,[r1,r2,LSL #2]
;;;625    }
0000ae  bd70              POP      {r4-r6,pc}
;;;626    
                          ENDP

                  |L4.176|
0000b0  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
0000b4  2e5c4c69
0000b8  62726172
0000bc  6965735c
0000c0  53544d33
0000c4  32463130
0000c8  785f5374
0000cc  64506572
0000d0  6970685f
0000d4  44726976
0000d8  65725c73
0000dc  72635c73
0000e0  746d    
0000e2  33326631          DCB      "32f10x_gpio.c",0
0000e6  30785f67
0000ea  70696f2e
0000ee  6300    
                  |L4.240|
                          DCD      0x40010008

                          AREA ||i.GPIO_EventOutputCmd||, CODE, READONLY, ALIGN=2

                  GPIO_EventOutputCmd PROC
;;;488      */
;;;489    void GPIO_EventOutputCmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;490    {
000002  4604              MOV      r4,r0
;;;491      /* Check the parameters */
;;;492      assert_param(IS_FUNCTIONAL_STATE(NewState));
000004  b10c              CBZ      r4,|L5.10|
000006  2c01              CMP      r4,#1
000008  d100              BNE      |L5.12|
                  |L5.10|
00000a  e004              B        |L5.22|
                  |L5.12|
00000c  f44f71f6          MOV      r1,#0x1ec
000010  a002              ADR      r0,|L5.28|
000012  f7fffffe          BL       assert_failed
                  |L5.22|
;;;493      
;;;494      *(__IO uint32_t *) EVCR_EVOE_BB = (uint32_t)NewState;
000016  4811              LDR      r0,|L5.92|
000018  61c4              STR      r4,[r0,#0x1c]
;;;495    }
00001a  bd10              POP      {r4,pc}
;;;496    
                          ENDP

                  |L5.28|
00001c  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
000020  2e5c4c69
000024  62726172
000028  6965735c
00002c  53544d33
000030  32463130
000034  785f5374
000038  64506572
00003c  6970685f
000040  44726976
000044  65725c73
000048  72635c73
00004c  746d    
00004e  33326631          DCB      "32f10x_gpio.c",0
000052  30785f67
000056  70696f2e
00005a  6300    
                  |L5.92|
                          DCD      0x42200000

                          AREA ||i.GPIO_EventOutputConfig||, CODE, READONLY, ALIGN=2

                  GPIO_EventOutputConfig PROC
;;;467      */
;;;468    void GPIO_EventOutputConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)
000000  b570              PUSH     {r4-r6,lr}
;;;469    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;470      uint32_t tmpreg = 0x00;
000006  2600              MOVS     r6,#0
;;;471      /* Check the parameters */
;;;472      assert_param(IS_GPIO_EVENTOUT_PORT_SOURCE(GPIO_PortSource));
000008  b13d              CBZ      r5,|L6.26|
00000a  2d01              CMP      r5,#1
00000c  d005              BEQ      |L6.26|
00000e  2d02              CMP      r5,#2
000010  d003              BEQ      |L6.26|
000012  2d03              CMP      r5,#3
000014  d001              BEQ      |L6.26|
000016  2d04              CMP      r5,#4
000018  d100              BNE      |L6.28|
                  |L6.26|
00001a  e004              B        |L6.38|
                  |L6.28|
00001c  f44f71ec          MOV      r1,#0x1d8
000020  a019              ADR      r0,|L6.136|
000022  f7fffffe          BL       assert_failed
                  |L6.38|
;;;473      assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
000026  b1ec              CBZ      r4,|L6.100|
000028  2c01              CMP      r4,#1
00002a  d01b              BEQ      |L6.100|
00002c  2c02              CMP      r4,#2
00002e  d019              BEQ      |L6.100|
000030  2c03              CMP      r4,#3
000032  d017              BEQ      |L6.100|
000034  2c04              CMP      r4,#4
000036  d015              BEQ      |L6.100|
000038  2c05              CMP      r4,#5
00003a  d013              BEQ      |L6.100|
00003c  2c06              CMP      r4,#6
00003e  d011              BEQ      |L6.100|
000040  2c07              CMP      r4,#7
000042  d00f              BEQ      |L6.100|
000044  2c08              CMP      r4,#8
000046  d00d              BEQ      |L6.100|
000048  2c09              CMP      r4,#9
00004a  d00b              BEQ      |L6.100|
00004c  2c0a              CMP      r4,#0xa
00004e  d009              BEQ      |L6.100|
000050  2c0b              CMP      r4,#0xb
000052  d007              BEQ      |L6.100|
000054  2c0c              CMP      r4,#0xc
000056  d005              BEQ      |L6.100|
000058  2c0d              CMP      r4,#0xd
00005a  d003              BEQ      |L6.100|
00005c  2c0e              CMP      r4,#0xe
00005e  d001              BEQ      |L6.100|
000060  2c0f              CMP      r4,#0xf
000062  d100              BNE      |L6.102|
                  |L6.100|
000064  e004              B        |L6.112|
                  |L6.102|
000066  f24011d9          MOV      r1,#0x1d9
00006a  a007              ADR      r0,|L6.136|
00006c  f7fffffe          BL       assert_failed
                  |L6.112|
;;;474        
;;;475      tmpreg = AFIO->EVCR;
000070  4815              LDR      r0,|L6.200|
000072  6806              LDR      r6,[r0,#0]
;;;476      /* Clear the PORT[6:4] and PIN[3:0] bits */
;;;477      tmpreg &= EVCR_PORTPINCONFIG_MASK;
000074  f64f7080          MOV      r0,#0xff80
000078  4006              ANDS     r6,r6,r0
;;;478      tmpreg |= (uint32_t)GPIO_PortSource << 0x04;
00007a  ea461605          ORR      r6,r6,r5,LSL #4
;;;479      tmpreg |= GPIO_PinSource;
00007e  4326              ORRS     r6,r6,r4
;;;480      AFIO->EVCR = tmpreg;
000080  4811              LDR      r0,|L6.200|
000082  6006              STR      r6,[r0,#0]
;;;481    }
000084  bd70              POP      {r4-r6,pc}
;;;482    
                          ENDP

000086  0000              DCW      0x0000
                  |L6.136|
000088  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
00008c  2e5c4c69
000090  62726172
000094  6965735c
000098  53544d33
00009c  32463130
0000a0  785f5374
0000a4  64506572
0000a8  6970685f
0000ac  44726976
0000b0  65725c73
0000b4  72635c73
0000b8  746d    
0000ba  33326631          DCB      "32f10x_gpio.c",0
0000be  30785f67
0000c2  70696f2e
0000c6  6300    
                  |L6.200|
                          DCD      0x40010000

                          AREA ||i.GPIO_Init||, CODE, READONLY, ALIGN=2

                  GPIO_Init PROC
;;;178      */
;;;179    void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;180    {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;181      uint32_t currentmode = 0x00, currentpin = 0x00, pinpos = 0x00, pos = 0x00;
000008  f04f0900          MOV      r9,#0
00000c  46ca              MOV      r10,r9
00000e  2600              MOVS     r6,#0
000010  2700              MOVS     r7,#0
;;;182      uint32_t tmpreg = 0x00, pinmask = 0x00;
000012  46b0              MOV      r8,r6
000014  46b3              MOV      r11,r6
;;;183      /* Check the parameters */
;;;184      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000016  4859              LDR      r0,|L7.380|
000018  4285              CMP      r5,r0
00001a  d011              BEQ      |L7.64|
00001c  4858              LDR      r0,|L7.384|
00001e  4285              CMP      r5,r0
000020  d00e              BEQ      |L7.64|
000022  4858              LDR      r0,|L7.388|
000024  4285              CMP      r5,r0
000026  d00b              BEQ      |L7.64|
000028  4857              LDR      r0,|L7.392|
00002a  4285              CMP      r5,r0
00002c  d008              BEQ      |L7.64|
00002e  4857              LDR      r0,|L7.396|
000030  4285              CMP      r5,r0
000032  d005              BEQ      |L7.64|
000034  4856              LDR      r0,|L7.400|
000036  4285              CMP      r5,r0
000038  d002              BEQ      |L7.64|
00003a  4856              LDR      r0,|L7.404|
00003c  4285              CMP      r5,r0
00003e  d100              BNE      |L7.66|
                  |L7.64|
000040  e003              B        |L7.74|
                  |L7.66|
000042  21b8              MOVS     r1,#0xb8
000044  a054              ADR      r0,|L7.408|
000046  f7fffffe          BL       assert_failed
                  |L7.74|
;;;185      assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
00004a  78e0              LDRB     r0,[r4,#3]
00004c  b1a0              CBZ      r0,|L7.120|
00004e  78e0              LDRB     r0,[r4,#3]
000050  2804              CMP      r0,#4
000052  d011              BEQ      |L7.120|
000054  78e0              LDRB     r0,[r4,#3]
000056  2828              CMP      r0,#0x28
000058  d00e              BEQ      |L7.120|
00005a  78e0              LDRB     r0,[r4,#3]
00005c  2848              CMP      r0,#0x48
00005e  d00b              BEQ      |L7.120|
000060  78e0              LDRB     r0,[r4,#3]
000062  2814              CMP      r0,#0x14
000064  d008              BEQ      |L7.120|
000066  78e0              LDRB     r0,[r4,#3]
000068  2810              CMP      r0,#0x10
00006a  d005              BEQ      |L7.120|
00006c  78e0              LDRB     r0,[r4,#3]
00006e  281c              CMP      r0,#0x1c
000070  d002              BEQ      |L7.120|
000072  78e0              LDRB     r0,[r4,#3]
000074  2818              CMP      r0,#0x18
000076  d100              BNE      |L7.122|
                  |L7.120|
000078  e003              B        |L7.130|
                  |L7.122|
00007a  21b9              MOVS     r1,#0xb9
00007c  a046              ADR      r0,|L7.408|
00007e  f7fffffe          BL       assert_failed
                  |L7.130|
;;;186      assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
000082  2000              MOVS     r0,#0
000084  b910              CBNZ     r0,|L7.140|
000086  8820              LDRH     r0,[r4,#0]
000088  b100              CBZ      r0,|L7.140|
00008a  e003              B        |L7.148|
                  |L7.140|
00008c  21ba              MOVS     r1,#0xba
00008e  a042              ADR      r0,|L7.408|
000090  f7fffffe          BL       assert_failed
                  |L7.148|
;;;187      
;;;188    /*---------------------------- GPIO Mode Configuration -----------------------*/
;;;189      currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);
000094  78e0              LDRB     r0,[r4,#3]
000096  f000090f          AND      r9,r0,#0xf
;;;190      if ((((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x10)) != 0x00)
00009a  78e0              LDRB     r0,[r4,#3]
00009c  f0000010          AND      r0,r0,#0x10
0000a0  b180              CBZ      r0,|L7.196|
;;;191      { 
;;;192        /* Check the parameters */
;;;193        assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
0000a2  78a0              LDRB     r0,[r4,#2]
0000a4  2801              CMP      r0,#1
0000a6  d005              BEQ      |L7.180|
0000a8  78a0              LDRB     r0,[r4,#2]
0000aa  2802              CMP      r0,#2
0000ac  d002              BEQ      |L7.180|
0000ae  78a0              LDRB     r0,[r4,#2]
0000b0  2803              CMP      r0,#3
0000b2  d100              BNE      |L7.182|
                  |L7.180|
0000b4  e003              B        |L7.190|
                  |L7.182|
0000b6  21c1              MOVS     r1,#0xc1
0000b8  a037              ADR      r0,|L7.408|
0000ba  f7fffffe          BL       assert_failed
                  |L7.190|
;;;194        /* Output mode */
;;;195        currentmode |= (uint32_t)GPIO_InitStruct->GPIO_Speed;
0000be  78a0              LDRB     r0,[r4,#2]
0000c0  ea400909          ORR      r9,r0,r9
                  |L7.196|
;;;196      }
;;;197    /*---------------------------- GPIO CRL Configuration ------------------------*/
;;;198      /* Configure the eight low port pins */
;;;199      if (((uint32_t)GPIO_InitStruct->GPIO_Pin & ((uint32_t)0x00FF)) != 0x00)
0000c4  7820              LDRB     r0,[r4,#0]
0000c6  b338              CBZ      r0,|L7.280|
;;;200      {
;;;201        tmpreg = GPIOx->CRL;
0000c8  f8d58000          LDR      r8,[r5,#0]
;;;202        for (pinpos = 0x00; pinpos < 0x08; pinpos++)
0000cc  2600              MOVS     r6,#0
0000ce  e01f              B        |L7.272|
                  |L7.208|
;;;203        {
;;;204          pos = ((uint32_t)0x01) << pinpos;
0000d0  2001              MOVS     r0,#1
0000d2  fa00f706          LSL      r7,r0,r6
;;;205          /* Get the port pins position */
;;;206          currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
0000d6  8820              LDRH     r0,[r4,#0]
0000d8  ea000a07          AND      r10,r0,r7
;;;207          if (currentpin == pos)
0000dc  45ba              CMP      r10,r7
0000de  d116              BNE      |L7.270|
;;;208          {
;;;209            pos = pinpos << 2;
0000e0  00b7              LSLS     r7,r6,#2
;;;210            /* Clear the corresponding low control register bits */
;;;211            pinmask = ((uint32_t)0x0F) << pos;
0000e2  200f              MOVS     r0,#0xf
0000e4  fa00fb07          LSL      r11,r0,r7
;;;212            tmpreg &= ~pinmask;
0000e8  ea28080b          BIC      r8,r8,r11
;;;213            /* Write the mode configuration in the corresponding bits */
;;;214            tmpreg |= (currentmode << pos);
0000ec  fa09f007          LSL      r0,r9,r7
0000f0  ea400808          ORR      r8,r0,r8
;;;215            /* Reset the corresponding ODR bit */
;;;216            if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
0000f4  78e0              LDRB     r0,[r4,#3]
0000f6  2828              CMP      r0,#0x28
0000f8  d103              BNE      |L7.258|
;;;217            {
;;;218              GPIOx->BRR = (((uint32_t)0x01) << pinpos);
0000fa  2001              MOVS     r0,#1
0000fc  40b0              LSLS     r0,r0,r6
0000fe  6168              STR      r0,[r5,#0x14]
000100  e005              B        |L7.270|
                  |L7.258|
;;;219            }
;;;220            else
;;;221            {
;;;222              /* Set the corresponding ODR bit */
;;;223              if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
000102  78e0              LDRB     r0,[r4,#3]
000104  2848              CMP      r0,#0x48
000106  d102              BNE      |L7.270|
;;;224              {
;;;225                GPIOx->BSRR = (((uint32_t)0x01) << pinpos);
000108  2001              MOVS     r0,#1
00010a  40b0              LSLS     r0,r0,r6
00010c  6128              STR      r0,[r5,#0x10]
                  |L7.270|
00010e  1c76              ADDS     r6,r6,#1              ;202
                  |L7.272|
000110  2e08              CMP      r6,#8                 ;202
000112  d3dd              BCC      |L7.208|
;;;226              }
;;;227            }
;;;228          }
;;;229        }
;;;230        GPIOx->CRL = tmpreg;
000114  f8c58000          STR      r8,[r5,#0]
                  |L7.280|
;;;231      }
;;;232    /*---------------------------- GPIO CRH Configuration ------------------------*/
;;;233      /* Configure the eight high port pins */
;;;234      if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
000118  8820              LDRH     r0,[r4,#0]
00011a  28ff              CMP      r0,#0xff
00011c  dd2b              BLE      |L7.374|
;;;235      {
;;;236        tmpreg = GPIOx->CRH;
00011e  f8d58004          LDR      r8,[r5,#4]
;;;237        for (pinpos = 0x00; pinpos < 0x08; pinpos++)
000122  2600              MOVS     r6,#0
000124  e023              B        |L7.366|
                  |L7.294|
;;;238        {
;;;239          pos = (((uint32_t)0x01) << (pinpos + 0x08));
000126  f1060008          ADD      r0,r6,#8
00012a  2101              MOVS     r1,#1
00012c  fa01f700          LSL      r7,r1,r0
;;;240          /* Get the port pins position */
;;;241          currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
000130  8820              LDRH     r0,[r4,#0]
000132  ea000a07          AND      r10,r0,r7
;;;242          if (currentpin == pos)
000136  45ba              CMP      r10,r7
000138  d118              BNE      |L7.364|
;;;243          {
;;;244            pos = pinpos << 2;
00013a  00b7              LSLS     r7,r6,#2
;;;245            /* Clear the corresponding high control register bits */
;;;246            pinmask = ((uint32_t)0x0F) << pos;
00013c  200f              MOVS     r0,#0xf
00013e  fa00fb07          LSL      r11,r0,r7
;;;247            tmpreg &= ~pinmask;
000142  ea28080b          BIC      r8,r8,r11
;;;248            /* Write the mode configuration in the corresponding bits */
;;;249            tmpreg |= (currentmode << pos);
000146  fa09f007          LSL      r0,r9,r7
00014a  ea400808          ORR      r8,r0,r8
;;;250            /* Reset the corresponding ODR bit */
;;;251            if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
00014e  78e0              LDRB     r0,[r4,#3]
000150  2828              CMP      r0,#0x28
000152  d103              BNE      |L7.348|
;;;252            {
;;;253              GPIOx->BRR = (((uint32_t)0x01) << (pinpos + 0x08));
000154  f1060008          ADD      r0,r6,#8
000158  4081              LSLS     r1,r1,r0
00015a  6169              STR      r1,[r5,#0x14]
                  |L7.348|
;;;254            }
;;;255            /* Set the corresponding ODR bit */
;;;256            if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
00015c  78e0              LDRB     r0,[r4,#3]
00015e  2848              CMP      r0,#0x48
000160  d104              BNE      |L7.364|
;;;257            {
;;;258              GPIOx->BSRR = (((uint32_t)0x01) << (pinpos + 0x08));
000162  f1060008          ADD      r0,r6,#8
000166  2101              MOVS     r1,#1
000168  4081              LSLS     r1,r1,r0
00016a  6129              STR      r1,[r5,#0x10]
                  |L7.364|
00016c  1c76              ADDS     r6,r6,#1              ;237
                  |L7.366|
00016e  2e08              CMP      r6,#8                 ;237
000170  d3d9              BCC      |L7.294|
;;;259            }
;;;260          }
;;;261        }
;;;262        GPIOx->CRH = tmpreg;
000172  f8c58004          STR      r8,[r5,#4]
                  |L7.374|
;;;263      }
;;;264    }
000176  e8bd9ff0          POP      {r4-r12,pc}
;;;265    
                          ENDP

00017a  0000              DCW      0x0000
                  |L7.380|
                          DCD      0x40010800
                  |L7.384|
                          DCD      0x40010c00
                  |L7.388|
                          DCD      0x40011000
                  |L7.392|
                          DCD      0x40011400
                  |L7.396|
                          DCD      0x40011800
                  |L7.400|
                          DCD      0x40011c00
                  |L7.404|
                          DCD      0x40012000
                  |L7.408|
000198  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
00019c  2e5c4c69
0001a0  62726172
0001a4  6965735c
0001a8  53544d33
0001ac  32463130
0001b0  785f5374
0001b4  64506572
0001b8  6970685f
0001bc  44726976
0001c0  65725c73
0001c4  72635c73
0001c8  746d    
0001ca  33326631          DCB      "32f10x_gpio.c",0
0001ce  30785f67
0001d2  70696f2e
0001d6  6300    

                          AREA ||i.GPIO_PinLockConfig||, CODE, READONLY, ALIGN=2

                  GPIO_PinLockConfig PROC
;;;437      */
;;;438    void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
000000  b570              PUSH     {r4-r6,lr}
;;;439    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;440      uint32_t tmp = 0x00010000;
000006  f44f3680          MOV      r6,#0x10000
;;;441      
;;;442      /* Check the parameters */
;;;443      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
00000a  4815              LDR      r0,|L8.96|
00000c  4284              CMP      r4,r0
00000e  d011              BEQ      |L8.52|
000010  4814              LDR      r0,|L8.100|
000012  4284              CMP      r4,r0
000014  d00e              BEQ      |L8.52|
000016  4814              LDR      r0,|L8.104|
000018  4284              CMP      r4,r0
00001a  d00b              BEQ      |L8.52|
00001c  4813              LDR      r0,|L8.108|
00001e  4284              CMP      r4,r0
000020  d008              BEQ      |L8.52|
000022  4813              LDR      r0,|L8.112|
000024  4284              CMP      r4,r0
000026  d005              BEQ      |L8.52|
000028  4812              LDR      r0,|L8.116|
00002a  4284              CMP      r4,r0
00002c  d002              BEQ      |L8.52|
00002e  4812              LDR      r0,|L8.120|
000030  4284              CMP      r4,r0
000032  d100              BNE      |L8.54|
                  |L8.52|
000034  e004              B        |L8.64|
                  |L8.54|
000036  f24011bb          MOV      r1,#0x1bb
00003a  a010              ADR      r0,|L8.124|
00003c  f7fffffe          BL       assert_failed
                  |L8.64|
;;;444      assert_param(IS_GPIO_PIN(GPIO_Pin));
000040  2000              MOVS     r0,#0
000042  b908              CBNZ     r0,|L8.72|
000044  b105              CBZ      r5,|L8.72|
000046  e004              B        |L8.82|
                  |L8.72|
000048  f44f71de          MOV      r1,#0x1bc
00004c  a00b              ADR      r0,|L8.124|
00004e  f7fffffe          BL       assert_failed
                  |L8.82|
;;;445      
;;;446      tmp |= GPIO_Pin;
000052  432e              ORRS     r6,r6,r5
;;;447      /* Set LCKK bit */
;;;448      GPIOx->LCKR = tmp;
000054  61a6              STR      r6,[r4,#0x18]
;;;449      /* Reset LCKK bit */
;;;450      GPIOx->LCKR =  GPIO_Pin;
000056  61a5              STR      r5,[r4,#0x18]
;;;451      /* Set LCKK bit */
;;;452      GPIOx->LCKR = tmp;
000058  61a6              STR      r6,[r4,#0x18]
;;;453      /* Read LCKK bit*/
;;;454      tmp = GPIOx->LCKR;
00005a  69a6              LDR      r6,[r4,#0x18]
;;;455      /* Read LCKK bit*/
;;;456      tmp = GPIOx->LCKR;
00005c  69a6              LDR      r6,[r4,#0x18]
;;;457    }
00005e  bd70              POP      {r4-r6,pc}
;;;458    
                          ENDP

                  |L8.96|
                          DCD      0x40010800
                  |L8.100|
                          DCD      0x40010c00
                  |L8.104|
                          DCD      0x40011000
                  |L8.108|
                          DCD      0x40011400
                  |L8.112|
                          DCD      0x40011800
                  |L8.116|
                          DCD      0x40011c00
                  |L8.120|
                          DCD      0x40012000
                  |L8.124|
00007c  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
000080  2e5c4c69
000084  62726172
000088  6965735c
00008c  53544d33
000090  32463130
000094  785f5374
000098  64506572
00009c  6970685f
0000a0  44726976
0000a4  65725c73
0000a8  72635c73
0000ac  746d    
0000ae  33326631          DCB      "32f10x_gpio.c",0
0000b2  30785f67
0000b6  70696f2e
0000ba  6300    

                          AREA ||i.GPIO_PinRemapConfig||, CODE, READONLY, ALIGN=2

                  GPIO_PinRemapConfig PROC
;;;554      */
;;;555    void GPIO_PinRemapConfig(uint32_t GPIO_Remap, FunctionalState NewState)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;556    {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;557      uint32_t tmp = 0x00, tmp1 = 0x00, tmpreg = 0x00, tmpmask = 0x00;
000008  2700              MOVS     r7,#0
00000a  46b8              MOV      r8,r7
00000c  2500              MOVS     r5,#0
00000e  46a9              MOV      r9,r5
;;;558    
;;;559      /* Check the parameters */
;;;560      assert_param(IS_GPIO_REMAP(GPIO_Remap));
000010  2c01              CMP      r4,#1
000012  d07d              BEQ      |L9.272|
000014  2c02              CMP      r4,#2
000016  d07b              BEQ      |L9.272|
000018  2c04              CMP      r4,#4
00001a  d079              BEQ      |L9.272|
00001c  2c08              CMP      r4,#8
00001e  d077              BEQ      |L9.272|
000020  4869              LDR      r0,|L9.456|
000022  4284              CMP      r4,r0
000024  d07f              BEQ      |L9.294|
000026  4868              LDR      r0,|L9.456|
000028  3020              ADDS     r0,r0,#0x20
00002a  4284              CMP      r4,r0
00002c  d07b              BEQ      |L9.294|
00002e  4867              LDR      r0,|L9.460|
000030  4284              CMP      r4,r0
000032  d078              BEQ      |L9.294|
000034  4865              LDR      r0,|L9.460|
000036  3080              ADDS     r0,r0,#0x80
000038  4284              CMP      r4,r0
00003a  d074              BEQ      |L9.294|
00003c  4864              LDR      r0,|L9.464|
00003e  4284              CMP      r4,r0
000040  d071              BEQ      |L9.294|
000042  4864              LDR      r0,|L9.468|
000044  4284              CMP      r4,r0
000046  d06e              BEQ      |L9.294|
000048  4863              LDR      r0,|L9.472|
00004a  4284              CMP      r4,r0
00004c  d06b              BEQ      |L9.294|
00004e  4863              LDR      r0,|L9.476|
000050  4284              CMP      r4,r0
000052  d068              BEQ      |L9.294|
000054  4862              LDR      r0,|L9.480|
000056  4284              CMP      r4,r0
000058  d065              BEQ      |L9.294|
00005a  f5b45f80          CMP      r4,#0x1000
00005e  d062              BEQ      |L9.294|
000060  f5b41fea          CMP      r4,#0x1d4000
000064  d05f              BEQ      |L9.294|
000066  f5b41feb          CMP      r4,#0x1d6000
00006a  d05c              BEQ      |L9.294|
00006c  f5b44f00          CMP      r4,#0x8000
000070  d059              BEQ      |L9.294|
000072  485c              LDR      r0,|L9.484|
000074  4284              CMP      r4,r0
000076  d056              BEQ      |L9.294|
000078  1c40              ADDS     r0,r0,#1
00007a  4284              CMP      r4,r0
00007c  d053              BEQ      |L9.294|
00007e  1c80              ADDS     r0,r0,#2
000080  4284              CMP      r4,r0
000082  d050              BEQ      |L9.294|
000084  1d00              ADDS     r0,r0,#4
000086  4284              CMP      r4,r0
000088  d04d              BEQ      |L9.294|
00008a  4856              LDR      r0,|L9.484|
00008c  300f              ADDS     r0,r0,#0xf
00008e  4284              CMP      r4,r0
000090  d049              BEQ      |L9.294|
000092  f1b41f20          CMP      r4,#0x200020
000096  d046              BEQ      |L9.294|
000098  ea4f30f0          ROR      r0,r0,#15
00009c  4284              CMP      r4,r0
00009e  d042              BEQ      |L9.294|
0000a0  4851              LDR      r0,|L9.488|
0000a2  4284              CMP      r4,r0
0000a4  d03f              BEQ      |L9.294|
0000a6  4851              LDR      r0,|L9.492|
0000a8  4284              CMP      r4,r0
0000aa  d03c              BEQ      |L9.294|
0000ac  4850              LDR      r0,|L9.496|
0000ae  4284              CMP      r4,r0
0000b0  d039              BEQ      |L9.294|
0000b2  4850              LDR      r0,|L9.500|
0000b4  4284              CMP      r4,r0
0000b6  d036              BEQ      |L9.294|
0000b8  484f              LDR      r0,|L9.504|
0000ba  4284              CMP      r4,r0
0000bc  d033              BEQ      |L9.294|
0000be  f5b41f01          CMP      r4,#0x204000
0000c2  d030              BEQ      |L9.294|
0000c4  484d              LDR      r0,|L9.508|
0000c6  4284              CMP      r4,r0
0000c8  d02d              BEQ      |L9.294|
0000ca  1c40              ADDS     r0,r0,#1
0000cc  4284              CMP      r4,r0
0000ce  d02a              BEQ      |L9.294|
0000d0  1c80              ADDS     r0,r0,#2
0000d2  4284              CMP      r4,r0
0000d4  d027              BEQ      |L9.294|
0000d6  1d00              ADDS     r0,r0,#4
0000d8  4284              CMP      r4,r0
0000da  d024              BEQ      |L9.294|
0000dc  4847              LDR      r0,|L9.508|
0000de  300f              ADDS     r0,r0,#0xf
0000e0  4284              CMP      r4,r0
0000e2  d020              BEQ      |L9.294|
0000e4  4845              LDR      r0,|L9.508|
0000e6  301f              ADDS     r0,r0,#0x1f
0000e8  4284              CMP      r4,r0
0000ea  d01c              BEQ      |L9.294|
0000ec  4843              LDR      r0,|L9.508|
0000ee  303f              ADDS     r0,r0,#0x3f
0000f0  4284              CMP      r4,r0
0000f2  d018              BEQ      |L9.294|
0000f4  4841              LDR      r0,|L9.508|
0000f6  307f              ADDS     r0,r0,#0x7f
0000f8  4284              CMP      r4,r0
0000fa  d014              BEQ      |L9.294|
0000fc  483f              LDR      r0,|L9.508|
0000fe  30ff              ADDS     r0,r0,#0xff
000100  4284              CMP      r4,r0
000102  d010              BEQ      |L9.294|
000104  483e              LDR      r0,|L9.512|
000106  4284              CMP      r4,r0
000108  d00d              BEQ      |L9.294|
00010a  483e              LDR      r0,|L9.516|
00010c  4284              CMP      r4,r0
00010e  e000              B        |L9.274|
                  |L9.272|
000110  e009              B        |L9.294|
                  |L9.274|
000112  d008              BEQ      |L9.294|
000114  483c              LDR      r0,|L9.520|
000116  4284              CMP      r4,r0
000118  d005              BEQ      |L9.294|
00011a  483c              LDR      r0,|L9.524|
00011c  4284              CMP      r4,r0
00011e  d002              BEQ      |L9.294|
000120  483b              LDR      r0,|L9.528|
000122  4284              CMP      r4,r0
000124  d100              BNE      |L9.296|
                  |L9.294|
000126  e004              B        |L9.306|
                  |L9.296|
000128  f44f710c          MOV      r1,#0x230
00012c  a039              ADR      r0,|L9.532|
00012e  f7fffffe          BL       assert_failed
                  |L9.306|
;;;561      assert_param(IS_FUNCTIONAL_STATE(NewState));  
000132  b10e              CBZ      r6,|L9.312|
000134  2e01              CMP      r6,#1
000136  d100              BNE      |L9.314|
                  |L9.312|
000138  e004              B        |L9.324|
                  |L9.314|
00013a  f2402131          MOV      r1,#0x231
00013e  a035              ADR      r0,|L9.532|
000140  f7fffffe          BL       assert_failed
                  |L9.324|
;;;562      
;;;563      if((GPIO_Remap & 0x80000000) == 0x80000000)
000144  f0044000          AND      r0,r4,#0x80000000
000148  f1b04f00          CMP      r0,#0x80000000
00014c  d102              BNE      |L9.340|
;;;564      {
;;;565        tmpreg = AFIO->MAPR2;
00014e  4841              LDR      r0,|L9.596|
000150  69c5              LDR      r5,[r0,#0x1c]
000152  e001              B        |L9.344|
                  |L9.340|
;;;566      }
;;;567      else
;;;568      {
;;;569        tmpreg = AFIO->MAPR;
000154  483f              LDR      r0,|L9.596|
000156  6845              LDR      r5,[r0,#4]
                  |L9.344|
;;;570      }
;;;571    
;;;572      tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
000158  f3c44903          UBFX     r9,r4,#16,#4
;;;573      tmp = GPIO_Remap & LSB_MASK;
00015c  b2a7              UXTH     r7,r4
;;;574    
;;;575      if ((GPIO_Remap & (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK)) == (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK))
00015e  f4041040          AND      r0,r4,#0x300000
000162  f5b01f40          CMP      r0,#0x300000
000166  d108              BNE      |L9.378|
;;;576      {
;;;577        tmpreg &= DBGAFR_SWJCFG_MASK;
000168  f0256570          BIC      r5,r5,#0xf000000
;;;578        AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
00016c  4839              LDR      r0,|L9.596|
00016e  6840              LDR      r0,[r0,#4]
000170  f0206070          BIC      r0,r0,#0xf000000
000174  4937              LDR      r1,|L9.596|
000176  6048              STR      r0,[r1,#4]
000178  e013              B        |L9.418|
                  |L9.378|
;;;579      }
;;;580      else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
00017a  f4041080          AND      r0,r4,#0x100000
00017e  f5b01f80          CMP      r0,#0x100000
000182  d107              BNE      |L9.404|
;;;581      {
;;;582        tmp1 = ((uint32_t)0x03) << tmpmask;
000184  2003              MOVS     r0,#3
000186  fa00f809          LSL      r8,r0,r9
;;;583        tmpreg &= ~tmp1;
00018a  ea250508          BIC      r5,r5,r8
;;;584        tmpreg |= ~DBGAFR_SWJCFG_MASK;
00018e  f0456570          ORR      r5,r5,#0xf000000
000192  e006              B        |L9.418|
                  |L9.404|
;;;585      }
;;;586      else
;;;587      {
;;;588        tmpreg &= ~(tmp << ((GPIO_Remap >> 0x15)*0x10));
000194  0d60              LSRS     r0,r4,#21
000196  0100              LSLS     r0,r0,#4
000198  fa07f000          LSL      r0,r7,r0
00019c  4385              BICS     r5,r5,r0
;;;589        tmpreg |= ~DBGAFR_SWJCFG_MASK;
00019e  f0456570          ORR      r5,r5,#0xf000000
                  |L9.418|
;;;590      }
;;;591    
;;;592      if (NewState != DISABLE)
0001a2  b126              CBZ      r6,|L9.430|
;;;593      {
;;;594        tmpreg |= (tmp << ((GPIO_Remap >> 0x15)*0x10));
0001a4  0d60              LSRS     r0,r4,#21
0001a6  0101              LSLS     r1,r0,#4
0001a8  fa07f001          LSL      r0,r7,r1
0001ac  4305              ORRS     r5,r5,r0
                  |L9.430|
;;;595      }
;;;596    
;;;597      if((GPIO_Remap & 0x80000000) == 0x80000000)
0001ae  f0044000          AND      r0,r4,#0x80000000
0001b2  f1b04f00          CMP      r0,#0x80000000
0001b6  d102              BNE      |L9.446|
;;;598      {
;;;599        AFIO->MAPR2 = tmpreg;
0001b8  4826              LDR      r0,|L9.596|
0001ba  61c5              STR      r5,[r0,#0x1c]
0001bc  e001              B        |L9.450|
                  |L9.446|
;;;600      }
;;;601      else
;;;602      {
;;;603        AFIO->MAPR = tmpreg;
0001be  4825              LDR      r0,|L9.596|
0001c0  6045              STR      r5,[r0,#4]
                  |L9.450|
;;;604      }  
;;;605    }
0001c2  e8bd87f0          POP      {r4-r10,pc}
;;;606    
                          ENDP

0001c6  0000              DCW      0x0000
                  |L9.456|
                          DCD      0x00140010
                  |L9.460|
                          DCD      0x00160040
                  |L9.464|
                          DCD      0x00180100
                  |L9.468|
                          DCD      0x00180200
                  |L9.472|
                          DCD      0x00180300
                  |L9.476|
                          DCD      0x001a0800
                  |L9.480|
                          DCD      0x001a0c00
                  |L9.484|
                          DCD      0x00200001
                  |L9.488|
                          DCD      0x00300100
                  |L9.492|
                          DCD      0x00300200
                  |L9.496|
                          DCD      0x00300400
                  |L9.500|
                          DCD      0x00201100
                  |L9.504|
                          DCD      0x00202000
                  |L9.508|
                          DCD      0x80000001
                  |L9.512|
                          DCD      0x80000200
                  |L9.516|
                          DCD      0x80000400
                  |L9.520|
                          DCD      0x80000800
                  |L9.524|
                          DCD      0x80001000
                  |L9.528|
                          DCD      0x80002000
                  |L9.532|
000214  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
000218  2e5c4c69
00021c  62726172
000220  6965735c
000224  53544d33
000228  32463130
00022c  785f5374
000230  64506572
000234  6970685f
000238  44726976
00023c  65725c73
000240  72635c73
000244  746d    
000246  33326631          DCB      "32f10x_gpio.c",0
00024a  30785f67
00024e  70696f2e
000252  6300    
                  |L9.596|
                          DCD      0x40010000

                          AREA ||i.GPIO_ReadInputData||, CODE, READONLY, ALIGN=2

                  GPIO_ReadInputData PROC
;;;310      */
;;;311    uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
000000  b510              PUSH     {r4,lr}
;;;312    {
000002  4604              MOV      r4,r0
;;;313      /* Check the parameters */
;;;314      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  480e              LDR      r0,|L10.64|
000006  4284              CMP      r4,r0
000008  d011              BEQ      |L10.46|
00000a  480e              LDR      r0,|L10.68|
00000c  4284              CMP      r4,r0
00000e  d00e              BEQ      |L10.46|
000010  480d              LDR      r0,|L10.72|
000012  4284              CMP      r4,r0
000014  d00b              BEQ      |L10.46|
000016  480d              LDR      r0,|L10.76|
000018  4284              CMP      r4,r0
00001a  d008              BEQ      |L10.46|
00001c  480c              LDR      r0,|L10.80|
00001e  4284              CMP      r4,r0
000020  d005              BEQ      |L10.46|
000022  480c              LDR      r0,|L10.84|
000024  4284              CMP      r4,r0
000026  d002              BEQ      |L10.46|
000028  480b              LDR      r0,|L10.88|
00002a  4284              CMP      r4,r0
00002c  d100              BNE      |L10.48|
                  |L10.46|
00002e  e004              B        |L10.58|
                  |L10.48|
000030  f44f719d          MOV      r1,#0x13a
000034  a009              ADR      r0,|L10.92|
000036  f7fffffe          BL       assert_failed
                  |L10.58|
;;;315      
;;;316      return ((uint16_t)GPIOx->IDR);
00003a  68a0              LDR      r0,[r4,#8]
00003c  b280              UXTH     r0,r0
;;;317    }
00003e  bd10              POP      {r4,pc}
;;;318    
                          ENDP

                  |L10.64|
                          DCD      0x40010800
                  |L10.68|
                          DCD      0x40010c00
                  |L10.72|
                          DCD      0x40011000
                  |L10.76|
                          DCD      0x40011400
                  |L10.80|
                          DCD      0x40011800
                  |L10.84|
                          DCD      0x40011c00
                  |L10.88|
                          DCD      0x40012000
                  |L10.92|
00005c  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
000060  2e5c4c69
000064  62726172
000068  6965735c
00006c  53544d33
000070  32463130
000074  785f5374
000078  64506572
00007c  6970685f
000080  44726976
000084  65725c73
000088  72635c73
00008c  746d    
00008e  33326631          DCB      "32f10x_gpio.c",0
000092  30785f67
000096  70696f2e
00009a  6300    

                          AREA ||i.GPIO_ReadInputDataBit||, CODE, READONLY, ALIGN=2

                  GPIO_ReadInputDataBit PROC
;;;286      */
;;;287    uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
000000  b570              PUSH     {r4-r6,lr}
;;;288    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;289      uint8_t bitstatus = 0x00;
000006  2600              MOVS     r6,#0
;;;290      
;;;291      /* Check the parameters */
;;;292      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000008  4828              LDR      r0,|L11.172|
00000a  4285              CMP      r5,r0
00000c  d011              BEQ      |L11.50|
00000e  4828              LDR      r0,|L11.176|
000010  4285              CMP      r5,r0
000012  d00e              BEQ      |L11.50|
000014  4827              LDR      r0,|L11.180|
000016  4285              CMP      r5,r0
000018  d00b              BEQ      |L11.50|
00001a  4827              LDR      r0,|L11.184|
00001c  4285              CMP      r5,r0
00001e  d008              BEQ      |L11.50|
000020  4826              LDR      r0,|L11.188|
000022  4285              CMP      r5,r0
000024  d005              BEQ      |L11.50|
000026  4826              LDR      r0,|L11.192|
000028  4285              CMP      r5,r0
00002a  d002              BEQ      |L11.50|
00002c  4825              LDR      r0,|L11.196|
00002e  4285              CMP      r5,r0
000030  d100              BNE      |L11.52|
                  |L11.50|
000032  e004              B        |L11.62|
                  |L11.52|
000034  f44f7192          MOV      r1,#0x124
000038  a023              ADR      r0,|L11.200|
00003a  f7fffffe          BL       assert_failed
                  |L11.62|
;;;293      assert_param(IS_GET_GPIO_PIN(GPIO_Pin)); 
00003e  2c01              CMP      r4,#1
000040  d025              BEQ      |L11.142|
000042  2c02              CMP      r4,#2
000044  d023              BEQ      |L11.142|
000046  2c04              CMP      r4,#4
000048  d021              BEQ      |L11.142|
00004a  2c08              CMP      r4,#8
00004c  d01f              BEQ      |L11.142|
00004e  2c10              CMP      r4,#0x10
000050  d01d              BEQ      |L11.142|
000052  2c20              CMP      r4,#0x20
000054  d01b              BEQ      |L11.142|
000056  2c40              CMP      r4,#0x40
000058  d019              BEQ      |L11.142|
00005a  2c80              CMP      r4,#0x80
00005c  d017              BEQ      |L11.142|
00005e  f5b47f80          CMP      r4,#0x100
000062  d014              BEQ      |L11.142|
000064  f5b47f00          CMP      r4,#0x200
000068  d011              BEQ      |L11.142|
00006a  f5b46f80          CMP      r4,#0x400
00006e  d00e              BEQ      |L11.142|
000070  f5b46f00          CMP      r4,#0x800
000074  d00b              BEQ      |L11.142|
000076  f5b45f80          CMP      r4,#0x1000
00007a  d008              BEQ      |L11.142|
00007c  f5b45f00          CMP      r4,#0x2000
000080  d005              BEQ      |L11.142|
000082  f5b44f80          CMP      r4,#0x4000
000086  d002              BEQ      |L11.142|
000088  f5b44f00          CMP      r4,#0x8000
00008c  d100              BNE      |L11.144|
                  |L11.142|
00008e  e004              B        |L11.154|
                  |L11.144|
000090  f2401125          MOV      r1,#0x125
000094  a00c              ADR      r0,|L11.200|
000096  f7fffffe          BL       assert_failed
                  |L11.154|
;;;294      
;;;295      if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
00009a  68a8              LDR      r0,[r5,#8]
00009c  4020              ANDS     r0,r0,r4
00009e  b108              CBZ      r0,|L11.164|
;;;296      {
;;;297        bitstatus = (uint8_t)Bit_SET;
0000a0  2601              MOVS     r6,#1
0000a2  e000              B        |L11.166|
                  |L11.164|
;;;298      }
;;;299      else
;;;300      {
;;;301        bitstatus = (uint8_t)Bit_RESET;
0000a4  2600              MOVS     r6,#0
                  |L11.166|
;;;302      }
;;;303      return bitstatus;
0000a6  4630              MOV      r0,r6
;;;304    }
0000a8  bd70              POP      {r4-r6,pc}
;;;305    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L11.172|
                          DCD      0x40010800
                  |L11.176|
                          DCD      0x40010c00
                  |L11.180|
                          DCD      0x40011000
                  |L11.184|
                          DCD      0x40011400
                  |L11.188|
                          DCD      0x40011800
                  |L11.192|
                          DCD      0x40011c00
                  |L11.196|
                          DCD      0x40012000
                  |L11.200|
0000c8  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
0000cc  2e5c4c69
0000d0  62726172
0000d4  6965735c
0000d8  53544d33
0000dc  32463130
0000e0  785f5374
0000e4  64506572
0000e8  6970685f
0000ec  44726976
0000f0  65725c73
0000f4  72635c73
0000f8  746d    
0000fa  33326631          DCB      "32f10x_gpio.c",0
0000fe  30785f67
000102  70696f2e
000106  6300    

                          AREA ||i.GPIO_ReadOutputData||, CODE, READONLY, ALIGN=2

                  GPIO_ReadOutputData PROC
;;;348      */
;;;349    uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
000000  b510              PUSH     {r4,lr}
;;;350    {
000002  4604              MOV      r4,r0
;;;351      /* Check the parameters */
;;;352      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  480e              LDR      r0,|L12.64|
000006  4284              CMP      r4,r0
000008  d011              BEQ      |L12.46|
00000a  480e              LDR      r0,|L12.68|
00000c  4284              CMP      r4,r0
00000e  d00e              BEQ      |L12.46|
000010  480d              LDR      r0,|L12.72|
000012  4284              CMP      r4,r0
000014  d00b              BEQ      |L12.46|
000016  480d              LDR      r0,|L12.76|
000018  4284              CMP      r4,r0
00001a  d008              BEQ      |L12.46|
00001c  480c              LDR      r0,|L12.80|
00001e  4284              CMP      r4,r0
000020  d005              BEQ      |L12.46|
000022  480c              LDR      r0,|L12.84|
000024  4284              CMP      r4,r0
000026  d002              BEQ      |L12.46|
000028  480b              LDR      r0,|L12.88|
00002a  4284              CMP      r4,r0
00002c  d100              BNE      |L12.48|
                  |L12.46|
00002e  e004              B        |L12.58|
                  |L12.48|
000030  f44f71b0          MOV      r1,#0x160
000034  a009              ADR      r0,|L12.92|
000036  f7fffffe          BL       assert_failed
                  |L12.58|
;;;353        
;;;354      return ((uint16_t)GPIOx->ODR);
00003a  68e0              LDR      r0,[r4,#0xc]
00003c  b280              UXTH     r0,r0
;;;355    }
00003e  bd10              POP      {r4,pc}
;;;356    
                          ENDP

                  |L12.64|
                          DCD      0x40010800
                  |L12.68|
                          DCD      0x40010c00
                  |L12.72|
                          DCD      0x40011000
                  |L12.76|
                          DCD      0x40011400
                  |L12.80|
                          DCD      0x40011800
                  |L12.84|
                          DCD      0x40011c00
                  |L12.88|
                          DCD      0x40012000
                  |L12.92|
00005c  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
000060  2e5c4c69
000064  62726172
000068  6965735c
00006c  53544d33
000070  32463130
000074  785f5374
000078  64506572
00007c  6970685f
000080  44726976
000084  65725c73
000088  72635c73
00008c  746d    
00008e  33326631          DCB      "32f10x_gpio.c",0
000092  30785f67
000096  70696f2e
00009a  6300    

                          AREA ||i.GPIO_ReadOutputDataBit||, CODE, READONLY, ALIGN=2

                  GPIO_ReadOutputDataBit PROC
;;;325      */
;;;326    uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
000000  b570              PUSH     {r4-r6,lr}
;;;327    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;328      uint8_t bitstatus = 0x00;
000006  2600              MOVS     r6,#0
;;;329      /* Check the parameters */
;;;330      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000008  4828              LDR      r0,|L13.172|
00000a  4285              CMP      r5,r0
00000c  d011              BEQ      |L13.50|
00000e  4828              LDR      r0,|L13.176|
000010  4285              CMP      r5,r0
000012  d00e              BEQ      |L13.50|
000014  4827              LDR      r0,|L13.180|
000016  4285              CMP      r5,r0
000018  d00b              BEQ      |L13.50|
00001a  4827              LDR      r0,|L13.184|
00001c  4285              CMP      r5,r0
00001e  d008              BEQ      |L13.50|
000020  4826              LDR      r0,|L13.188|
000022  4285              CMP      r5,r0
000024  d005              BEQ      |L13.50|
000026  4826              LDR      r0,|L13.192|
000028  4285              CMP      r5,r0
00002a  d002              BEQ      |L13.50|
00002c  4825              LDR      r0,|L13.196|
00002e  4285              CMP      r5,r0
000030  d100              BNE      |L13.52|
                  |L13.50|
000032  e004              B        |L13.62|
                  |L13.52|
000034  f44f71a5          MOV      r1,#0x14a
000038  a023              ADR      r0,|L13.200|
00003a  f7fffffe          BL       assert_failed
                  |L13.62|
;;;331      assert_param(IS_GET_GPIO_PIN(GPIO_Pin)); 
00003e  2c01              CMP      r4,#1
000040  d025              BEQ      |L13.142|
000042  2c02              CMP      r4,#2
000044  d023              BEQ      |L13.142|
000046  2c04              CMP      r4,#4
000048  d021              BEQ      |L13.142|
00004a  2c08              CMP      r4,#8
00004c  d01f              BEQ      |L13.142|
00004e  2c10              CMP      r4,#0x10
000050  d01d              BEQ      |L13.142|
000052  2c20              CMP      r4,#0x20
000054  d01b              BEQ      |L13.142|
000056  2c40              CMP      r4,#0x40
000058  d019              BEQ      |L13.142|
00005a  2c80              CMP      r4,#0x80
00005c  d017              BEQ      |L13.142|
00005e  f5b47f80          CMP      r4,#0x100
000062  d014              BEQ      |L13.142|
000064  f5b47f00          CMP      r4,#0x200
000068  d011              BEQ      |L13.142|
00006a  f5b46f80          CMP      r4,#0x400
00006e  d00e              BEQ      |L13.142|
000070  f5b46f00          CMP      r4,#0x800
000074  d00b              BEQ      |L13.142|
000076  f5b45f80          CMP      r4,#0x1000
00007a  d008              BEQ      |L13.142|
00007c  f5b45f00          CMP      r4,#0x2000
000080  d005              BEQ      |L13.142|
000082  f5b44f80          CMP      r4,#0x4000
000086  d002              BEQ      |L13.142|
000088  f5b44f00          CMP      r4,#0x8000
00008c  d100              BNE      |L13.144|
                  |L13.142|
00008e  e004              B        |L13.154|
                  |L13.144|
000090  f240114b          MOV      r1,#0x14b
000094  a00c              ADR      r0,|L13.200|
000096  f7fffffe          BL       assert_failed
                  |L13.154|
;;;332      
;;;333      if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
00009a  68e8              LDR      r0,[r5,#0xc]
00009c  4020              ANDS     r0,r0,r4
00009e  b108              CBZ      r0,|L13.164|
;;;334      {
;;;335        bitstatus = (uint8_t)Bit_SET;
0000a0  2601              MOVS     r6,#1
0000a2  e000              B        |L13.166|
                  |L13.164|
;;;336      }
;;;337      else
;;;338      {
;;;339        bitstatus = (uint8_t)Bit_RESET;
0000a4  2600              MOVS     r6,#0
                  |L13.166|
;;;340      }
;;;341      return bitstatus;
0000a6  4630              MOV      r0,r6
;;;342    }
0000a8  bd70              POP      {r4-r6,pc}
;;;343    
                          ENDP

0000aa  0000              DCW      0x0000
                  |L13.172|
                          DCD      0x40010800
                  |L13.176|
                          DCD      0x40010c00
                  |L13.180|
                          DCD      0x40011000
                  |L13.184|
                          DCD      0x40011400
                  |L13.188|
                          DCD      0x40011800
                  |L13.192|
                          DCD      0x40011c00
                  |L13.196|
                          DCD      0x40012000
                  |L13.200|
0000c8  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
0000cc  2e5c4c69
0000d0  62726172
0000d4  6965735c
0000d8  53544d33
0000dc  32463130
0000e0  785f5374
0000e4  64506572
0000e8  6970685f
0000ec  44726976
0000f0  65725c73
0000f4  72635c73
0000f8  746d    
0000fa  33326631          DCB      "32f10x_gpio.c",0
0000fe  30785f67
000102  70696f2e
000106  6300    

                          AREA ||i.GPIO_ResetBits||, CODE, READONLY, ALIGN=2

                  GPIO_ResetBits PROC
;;;379      */
;;;380    void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
000000  b570              PUSH     {r4-r6,lr}
;;;381    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;382      /* Check the parameters */
;;;383      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000006  4813              LDR      r0,|L14.84|
000008  4284              CMP      r4,r0
00000a  d011              BEQ      |L14.48|
00000c  4812              LDR      r0,|L14.88|
00000e  4284              CMP      r4,r0
000010  d00e              BEQ      |L14.48|
000012  4812              LDR      r0,|L14.92|
000014  4284              CMP      r4,r0
000016  d00b              BEQ      |L14.48|
000018  4811              LDR      r0,|L14.96|
00001a  4284              CMP      r4,r0
00001c  d008              BEQ      |L14.48|
00001e  4811              LDR      r0,|L14.100|
000020  4284              CMP      r4,r0
000022  d005              BEQ      |L14.48|
000024  4810              LDR      r0,|L14.104|
000026  4284              CMP      r4,r0
000028  d002              BEQ      |L14.48|
00002a  4810              LDR      r0,|L14.108|
00002c  4284              CMP      r4,r0
00002e  d100              BNE      |L14.50|
                  |L14.48|
000030  e004              B        |L14.60|
                  |L14.50|
000032  f240117f          MOV      r1,#0x17f
000036  a00e              ADR      r0,|L14.112|
000038  f7fffffe          BL       assert_failed
                  |L14.60|
;;;384      assert_param(IS_GPIO_PIN(GPIO_Pin));
00003c  2000              MOVS     r0,#0
00003e  b908              CBNZ     r0,|L14.68|
000040  b105              CBZ      r5,|L14.68|
000042  e004              B        |L14.78|
                  |L14.68|
000044  f44f71c0          MOV      r1,#0x180
000048  a009              ADR      r0,|L14.112|
00004a  f7fffffe          BL       assert_failed
                  |L14.78|
;;;385      
;;;386      GPIOx->BRR = GPIO_Pin;
00004e  6165              STR      r5,[r4,#0x14]
;;;387    }
000050  bd70              POP      {r4-r6,pc}
;;;388    
                          ENDP

000052  0000              DCW      0x0000
                  |L14.84|
                          DCD      0x40010800
                  |L14.88|
                          DCD      0x40010c00
                  |L14.92|
                          DCD      0x40011000
                  |L14.96|
                          DCD      0x40011400
                  |L14.100|
                          DCD      0x40011800
                  |L14.104|
                          DCD      0x40011c00
                  |L14.108|
                          DCD      0x40012000
                  |L14.112|
000070  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
000074  2e5c4c69
000078  62726172
00007c  6965735c
000080  53544d33
000084  32463130
000088  785f5374
00008c  64506572
000090  6970685f
000094  44726976
000098  65725c73
00009c  72635c73
0000a0  746d    
0000a2  33326631          DCB      "32f10x_gpio.c",0
0000a6  30785f67
0000aa  70696f2e
0000ae  6300    

                          AREA ||i.GPIO_SetBits||, CODE, READONLY, ALIGN=2

                  GPIO_SetBits PROC
;;;363      */
;;;364    void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
000000  b570              PUSH     {r4-r6,lr}
;;;365    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;366      /* Check the parameters */
;;;367      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000006  4813              LDR      r0,|L15.84|
000008  4284              CMP      r4,r0
00000a  d011              BEQ      |L15.48|
00000c  4812              LDR      r0,|L15.88|
00000e  4284              CMP      r4,r0
000010  d00e              BEQ      |L15.48|
000012  4812              LDR      r0,|L15.92|
000014  4284              CMP      r4,r0
000016  d00b              BEQ      |L15.48|
000018  4811              LDR      r0,|L15.96|
00001a  4284              CMP      r4,r0
00001c  d008              BEQ      |L15.48|
00001e  4811              LDR      r0,|L15.100|
000020  4284              CMP      r4,r0
000022  d005              BEQ      |L15.48|
000024  4810              LDR      r0,|L15.104|
000026  4284              CMP      r4,r0
000028  d002              BEQ      |L15.48|
00002a  4810              LDR      r0,|L15.108|
00002c  4284              CMP      r4,r0
00002e  d100              BNE      |L15.50|
                  |L15.48|
000030  e004              B        |L15.60|
                  |L15.50|
000032  f240116f          MOV      r1,#0x16f
000036  a00e              ADR      r0,|L15.112|
000038  f7fffffe          BL       assert_failed
                  |L15.60|
;;;368      assert_param(IS_GPIO_PIN(GPIO_Pin));
00003c  2000              MOVS     r0,#0
00003e  b908              CBNZ     r0,|L15.68|
000040  b105              CBZ      r5,|L15.68|
000042  e004              B        |L15.78|
                  |L15.68|
000044  f44f71b8          MOV      r1,#0x170
000048  a009              ADR      r0,|L15.112|
00004a  f7fffffe          BL       assert_failed
                  |L15.78|
;;;369      
;;;370      GPIOx->BSRR = GPIO_Pin;
00004e  6125              STR      r5,[r4,#0x10]
;;;371    }
000050  bd70              POP      {r4-r6,pc}
;;;372    
                          ENDP

000052  0000              DCW      0x0000
                  |L15.84|
                          DCD      0x40010800
                  |L15.88|
                          DCD      0x40010c00
                  |L15.92|
                          DCD      0x40011000
                  |L15.96|
                          DCD      0x40011400
                  |L15.100|
                          DCD      0x40011800
                  |L15.104|
                          DCD      0x40011c00
                  |L15.108|
                          DCD      0x40012000
                  |L15.112|
000070  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
000074  2e5c4c69
000078  62726172
00007c  6965735c
000080  53544d33
000084  32463130
000088  785f5374
00008c  64506572
000090  6970685f
000094  44726976
000098  65725c73
00009c  72635c73
0000a0  746d    
0000a2  33326631          DCB      "32f10x_gpio.c",0
0000a6  30785f67
0000aa  70696f2e
0000ae  6300    

                          AREA ||i.GPIO_StructInit||, CODE, READONLY, ALIGN=1

                  GPIO_StructInit PROC
;;;271      */
;;;272    void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
000000  f64f71ff          MOV      r1,#0xffff
;;;273    {
;;;274      /* Reset GPIO init structure parameters values */
;;;275      GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
000004  8001              STRH     r1,[r0,#0]
;;;276      GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
000006  2102              MOVS     r1,#2
000008  7081              STRB     r1,[r0,#2]
;;;277      GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN_FLOATING;
00000a  2104              MOVS     r1,#4
00000c  70c1              STRB     r1,[r0,#3]
;;;278    }
00000e  4770              BX       lr
;;;279    
                          ENDP


                          AREA ||i.GPIO_Write||, CODE, READONLY, ALIGN=2

                  GPIO_Write PROC
;;;422      */
;;;423    void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
000000  b570              PUSH     {r4-r6,lr}
;;;424    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;425      /* Check the parameters */
;;;426      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000006  480e              LDR      r0,|L17.64|
000008  4284              CMP      r4,r0
00000a  d011              BEQ      |L17.48|
00000c  480d              LDR      r0,|L17.68|
00000e  4284              CMP      r4,r0
000010  d00e              BEQ      |L17.48|
000012  480d              LDR      r0,|L17.72|
000014  4284              CMP      r4,r0
000016  d00b              BEQ      |L17.48|
000018  480c              LDR      r0,|L17.76|
00001a  4284              CMP      r4,r0
00001c  d008              BEQ      |L17.48|
00001e  480c              LDR      r0,|L17.80|
000020  4284              CMP      r4,r0
000022  d005              BEQ      |L17.48|
000024  480b              LDR      r0,|L17.84|
000026  4284              CMP      r4,r0
000028  d002              BEQ      |L17.48|
00002a  480b              LDR      r0,|L17.88|
00002c  4284              CMP      r4,r0
00002e  d100              BNE      |L17.50|
                  |L17.48|
000030  e004              B        |L17.60|
                  |L17.50|
000032  f44f71d5          MOV      r1,#0x1aa
000036  a009              ADR      r0,|L17.92|
000038  f7fffffe          BL       assert_failed
                  |L17.60|
;;;427      
;;;428      GPIOx->ODR = PortVal;
00003c  60e5              STR      r5,[r4,#0xc]
;;;429    }
00003e  bd70              POP      {r4-r6,pc}
;;;430    
                          ENDP

                  |L17.64|
                          DCD      0x40010800
                  |L17.68|
                          DCD      0x40010c00
                  |L17.72|
                          DCD      0x40011000
                  |L17.76|
                          DCD      0x40011400
                  |L17.80|
                          DCD      0x40011800
                  |L17.84|
                          DCD      0x40011c00
                  |L17.88|
                          DCD      0x40012000
                  |L17.92|
00005c  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
000060  2e5c4c69
000064  62726172
000068  6965735c
00006c  53544d33
000070  32463130
000074  785f5374
000078  64506572
00007c  6970685f
000080  44726976
000084  65725c73
000088  72635c73
00008c  746d    
00008e  33326631          DCB      "32f10x_gpio.c",0
000092  30785f67
000096  70696f2e
00009a  6300    

                          AREA ||i.GPIO_WriteBit||, CODE, READONLY, ALIGN=2

                  GPIO_WriteBit PROC
;;;399      */
;;;400    void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
000000  b570              PUSH     {r4-r6,lr}
;;;401    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
000006  4616              MOV      r6,r2
;;;402      /* Check the parameters */
;;;403      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000008  482b              LDR      r0,|L18.184|
00000a  4285              CMP      r5,r0
00000c  d011              BEQ      |L18.50|
00000e  482b              LDR      r0,|L18.188|
000010  4285              CMP      r5,r0
000012  d00e              BEQ      |L18.50|
000014  482a              LDR      r0,|L18.192|
000016  4285              CMP      r5,r0
000018  d00b              BEQ      |L18.50|
00001a  482a              LDR      r0,|L18.196|
00001c  4285              CMP      r5,r0
00001e  d008              BEQ      |L18.50|
000020  4829              LDR      r0,|L18.200|
000022  4285              CMP      r5,r0
000024  d005              BEQ      |L18.50|
000026  4829              LDR      r0,|L18.204|
000028  4285              CMP      r5,r0
00002a  d002              BEQ      |L18.50|
00002c  4828              LDR      r0,|L18.208|
00002e  4285              CMP      r5,r0
000030  d100              BNE      |L18.52|
                  |L18.50|
000032  e004              B        |L18.62|
                  |L18.52|
000034  f2401193          MOV      r1,#0x193
000038  a026              ADR      r0,|L18.212|
00003a  f7fffffe          BL       assert_failed
                  |L18.62|
;;;404      assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
00003e  2c01              CMP      r4,#1
000040  d025              BEQ      |L18.142|
000042  2c02              CMP      r4,#2
000044  d023              BEQ      |L18.142|
000046  2c04              CMP      r4,#4
000048  d021              BEQ      |L18.142|
00004a  2c08              CMP      r4,#8
00004c  d01f              BEQ      |L18.142|
00004e  2c10              CMP      r4,#0x10
000050  d01d              BEQ      |L18.142|
000052  2c20              CMP      r4,#0x20
000054  d01b              BEQ      |L18.142|
000056  2c40              CMP      r4,#0x40
000058  d019              BEQ      |L18.142|
00005a  2c80              CMP      r4,#0x80
00005c  d017              BEQ      |L18.142|
00005e  f5b47f80          CMP      r4,#0x100
000062  d014              BEQ      |L18.142|
000064  f5b47f00          CMP      r4,#0x200
000068  d011              BEQ      |L18.142|
00006a  f5b46f80          CMP      r4,#0x400
00006e  d00e              BEQ      |L18.142|
000070  f5b46f00          CMP      r4,#0x800
000074  d00b              BEQ      |L18.142|
000076  f5b45f80          CMP      r4,#0x1000
00007a  d008              BEQ      |L18.142|
00007c  f5b45f00          CMP      r4,#0x2000
000080  d005              BEQ      |L18.142|
000082  f5b44f80          CMP      r4,#0x4000
000086  d002              BEQ      |L18.142|
000088  f5b44f00          CMP      r4,#0x8000
00008c  d100              BNE      |L18.144|
                  |L18.142|
00008e  e004              B        |L18.154|
                  |L18.144|
000090  f44f71ca          MOV      r1,#0x194
000094  a00f              ADR      r0,|L18.212|
000096  f7fffffe          BL       assert_failed
                  |L18.154|
;;;405      assert_param(IS_GPIO_BIT_ACTION(BitVal)); 
00009a  b10e              CBZ      r6,|L18.160|
00009c  2e01              CMP      r6,#1
00009e  d100              BNE      |L18.162|
                  |L18.160|
0000a0  e004              B        |L18.172|
                  |L18.162|
0000a2  f2401195          MOV      r1,#0x195
0000a6  a00b              ADR      r0,|L18.212|
0000a8  f7fffffe          BL       assert_failed
                  |L18.172|
;;;406      
;;;407      if (BitVal != Bit_RESET)
0000ac  b10e              CBZ      r6,|L18.178|
;;;408      {
;;;409        GPIOx->BSRR = GPIO_Pin;
0000ae  612c              STR      r4,[r5,#0x10]
0000b0  e000              B        |L18.180|
                  |L18.178|
;;;410      }
;;;411      else
;;;412      {
;;;413        GPIOx->BRR = GPIO_Pin;
0000b2  616c              STR      r4,[r5,#0x14]
                  |L18.180|
;;;414      }
;;;415    }
0000b4  bd70              POP      {r4-r6,pc}
;;;416    
                          ENDP

0000b6  0000              DCW      0x0000
                  |L18.184|
                          DCD      0x40010800
                  |L18.188|
                          DCD      0x40010c00
                  |L18.192|
                          DCD      0x40011000
                  |L18.196|
                          DCD      0x40011400
                  |L18.200|
                          DCD      0x40011800
                  |L18.204|
                          DCD      0x40011c00
                  |L18.208|
                          DCD      0x40012000
                  |L18.212|
0000d4  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm"
0000d8  2e5c4c69
0000dc  62726172
0000e0  6965735c
0000e4  53544d33
0000e8  32463130
0000ec  785f5374
0000f0  64506572
0000f4  6970685f
0000f8  44726976
0000fc  65725c73
000100  72635c73
000104  746d    
000106  33326631          DCB      "32f10x_gpio.c",0
00010a  30785f67
00010e  70696f2e
000112  6300    

;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\stm32f10x_gpio.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f10x_gpio_c_f8e8e39a____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f10x_gpio_c_f8e8e39a____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f10x_gpio_c_f8e8e39a____REVSH|
#line 128
|__asm___16_stm32f10x_gpio_c_f8e8e39a____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
