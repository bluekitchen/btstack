; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\testdb.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\testdb.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\Middleware\blue_angel\inc -I..\..\Middleware\bt_callback_manager -I..\..\Middleware\blue_angel\btif -I..\..\Middleware\blue_angel\common -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\src\common -I..\..\Middleware\blue_angel\src\inc -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\platform\rtos -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\ut_manager\Cunit\Headers -I..\..\Middleware\ut_manager\Cunit\interface -I..\..\Middleware\blue_angel\platform\test -I..\..\Middleware\blue_angel\driver -I..\..\Middleware\blue_angel\src\core\hci -I..\..\User\bt\inc -I..\..\Middleware\bt_callback_manager -I..\..\Middleware\at_command -I..\..\Middleware\blue_angel\src\core\gap -I..\..\Middleware\blue_angel\src\core\l2cap -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=522 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DNDEBUG --omf_browse=.\flash\obj\testdb.crf ..\..\Middleware\ut_manager\Cunit\Sources\Framework\TestDB.c]
                          THUMB

                          AREA ||i.CU_add_suite||, CODE, READONLY, ALIGN=1

                  CU_add_suite PROC
;;;180    /*------------------------------------------------------------------------*/
;;;181    CU_pSuite CU_add_suite(const char* strName, CU_InitializeFunc pInit, CU_CleanupFunc pClean)
000000  b5f8              PUSH     {r3-r7,lr}
;;;182    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;183      return CU_add_suite_with_setup_and_teardown(strName, pInit, pClean, NULL, NULL);
000008  2000              MOVS     r0,#0
00000a  4603              MOV      r3,r0
00000c  4632              MOV      r2,r6
00000e  4629              MOV      r1,r5
000010  9000              STR      r0,[sp,#0]
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       CU_add_suite_with_setup_and_teardown
;;;184    }
000018  bdf8              POP      {r3-r7,pc}
;;;185    
                          ENDP


                          AREA ||i.CU_add_suite_with_setup_and_teardown||, CODE, READONLY, ALIGN=2

                  CU_add_suite_with_setup_and_teardown PROC
;;;149    /*------------------------------------------------------------------------*/
;;;150    CU_pSuite CU_add_suite_with_setup_and_teardown(const char* strName, CU_InitializeFunc pInit, CU_CleanupFunc pClean, CU_SetUpFunc pSetup, CU_TearDownFunc pTear)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;151    {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
00000c  f8dd9028          LDR      r9,[sp,#0x28]
;;;152      CU_pSuite pRetValue = NULL;
000010  2500              MOVS     r5,#0
;;;153      CU_ErrorCode error = CUE_SUCCESS;
000012  46aa              MOV      r10,r5
;;;154    
;;;155      assert(CU_FALSE == CU_is_test_running());
;;;156    
;;;157      if (NULL == f_pTestRegistry) {
000014  4815              LDR      r0,|L2.108|
000016  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000018  b910              CBNZ     r0,|L2.32|
;;;158        error = CUE_NOREGISTRY;
00001a  f04f0a0a          MOV      r10,#0xa
00001e  e01e              B        |L2.94|
                  |L2.32|
;;;159      }
;;;160      else if (NULL == strName) {
000020  b914              CBNZ     r4,|L2.40|
;;;161        error = CUE_NO_SUITENAME;
000022  f04f0a15          MOV      r10,#0x15
000026  e01a              B        |L2.94|
                  |L2.40|
;;;162      }
;;;163      else {
;;;164        pRetValue = create_suite(strName, pInit, pClean, pSetup, pTear);
000028  4643              MOV      r3,r8
00002a  463a              MOV      r2,r7
00002c  4631              MOV      r1,r6
00002e  4620              MOV      r0,r4
000030  f8cd9000          STR      r9,[sp,#0]
000034  f7fffffe          BL       create_suite
000038  4605              MOV      r5,r0
;;;165        if (NULL == pRetValue) {
00003a  b915              CBNZ     r5,|L2.66|
;;;166          error = CUE_NOMEMORY;
00003c  f04f0a01          MOV      r10,#1
000040  e00d              B        |L2.94|
                  |L2.66|
;;;167        }
;;;168        else {
;;;169          if (CU_TRUE == suite_exists(f_pTestRegistry, strName)) {
000042  4621              MOV      r1,r4
000044  4809              LDR      r0,|L2.108|
000046  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000048  f7fffffe          BL       suite_exists
00004c  2801              CMP      r0,#1
00004e  d101              BNE      |L2.84|
;;;170            error = CUE_DUP_SUITE;
000050  f04f0a18          MOV      r10,#0x18
                  |L2.84|
;;;171          }
;;;172          insert_suite(f_pTestRegistry, pRetValue);
000054  4629              MOV      r1,r5
000056  4805              LDR      r0,|L2.108|
000058  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
00005a  f7fffffe          BL       insert_suite
                  |L2.94|
;;;173        }
;;;174      }
;;;175    
;;;176      CU_set_error(error);
00005e  4650              MOV      r0,r10
000060  f7fffffe          BL       CU_set_error
;;;177      return pRetValue;
000064  4628              MOV      r0,r5
;;;178    }
000066  e8bd8ff8          POP      {r3-r11,pc}
;;;179    
                          ENDP

00006a  0000              DCW      0x0000
                  |L2.108|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_add_test||, CODE, READONLY, ALIGN=2

                  CU_add_test PROC
;;;350    /*------------------------------------------------------------------------*/
;;;351    CU_pTest CU_add_test(CU_pSuite pSuite, const char* strName, CU_TestFunc pTestFunc)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;352    {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;353      CU_pTest pRetValue = NULL;
00000a  2600              MOVS     r6,#0
;;;354      CU_ErrorCode error = CUE_SUCCESS;
00000c  46b0              MOV      r8,r6
;;;355    
;;;356      assert(CU_FALSE == CU_is_test_running());
;;;357    
;;;358      if (NULL == f_pTestRegistry) {
00000e  481a              LDR      r0,|L3.120|
000010  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000012  b910              CBNZ     r0,|L3.26|
;;;359        error = CUE_NOREGISTRY;
000014  f04f080a          MOV      r8,#0xa
000018  e027              B        |L3.106|
                  |L3.26|
;;;360      }
;;;361      else if (NULL == pSuite) {
00001a  b917              CBNZ     r7,|L3.34|
;;;362        error = CUE_NOSUITE;
00001c  f04f0814          MOV      r8,#0x14
000020  e023              B        |L3.106|
                  |L3.34|
;;;363      }
;;;364      else if (NULL == strName) {
000022  b914              CBNZ     r4,|L3.42|
;;;365        error = CUE_NO_TESTNAME;
000024  f04f081f          MOV      r8,#0x1f
000028  e01f              B        |L3.106|
                  |L3.42|
;;;366      }
;;;367       else if(NULL == pTestFunc) {
00002a  b915              CBNZ     r5,|L3.50|
;;;368        error = CUE_NOTEST;
00002c  f04f081e          MOV      r8,#0x1e
000030  e01b              B        |L3.106|
                  |L3.50|
;;;369      }
;;;370      else {
;;;371        pRetValue = create_test(strName, pTestFunc);
000032  4629              MOV      r1,r5
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       create_test
00003a  4606              MOV      r6,r0
;;;372        if (NULL == pRetValue) {
00003c  b916              CBNZ     r6,|L3.68|
;;;373          error = CUE_NOMEMORY;
00003e  f04f0801          MOV      r8,#1
000042  e012              B        |L3.106|
                  |L3.68|
;;;374        }
;;;375        else {
;;;376          f_pTestRegistry->uiNumberOfTests++;
000044  480c              LDR      r0,|L3.120|
000046  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000048  6840              LDR      r0,[r0,#4]
00004a  1c40              ADDS     r0,r0,#1
00004c  490a              LDR      r1,|L3.120|
00004e  6809              LDR      r1,[r1,#0]  ; f_pTestRegistry
000050  6048              STR      r0,[r1,#4]
;;;377          if (CU_TRUE == test_exists(pSuite, strName)) {
000052  4621              MOV      r1,r4
000054  4638              MOV      r0,r7
000056  f7fffffe          BL       test_exists
00005a  2801              CMP      r0,#1
00005c  d101              BNE      |L3.98|
;;;378            error = CUE_DUP_TEST;
00005e  f04f0820          MOV      r8,#0x20
                  |L3.98|
;;;379          }
;;;380          insert_test(pSuite, pRetValue);
000062  4631              MOV      r1,r6
000064  4638              MOV      r0,r7
000066  f7fffffe          BL       insert_test
                  |L3.106|
;;;381        }
;;;382      }
;;;383    
;;;384      CU_set_error(error);
00006a  4640              MOV      r0,r8
00006c  f7fffffe          BL       CU_set_error
;;;385      return pRetValue;
000070  4630              MOV      r0,r6
;;;386    }
000072  e8bd81f0          POP      {r4-r8,pc}
;;;387    
                          ENDP

000076  0000              DCW      0x0000
                  |L3.120|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_cleanup_registry||, CODE, READONLY, ALIGN=2

                  CU_cleanup_registry PROC
;;;120    /*------------------------------------------------------------------------*/
;;;121    void CU_cleanup_registry(void)
000000  b510              PUSH     {r4,lr}
;;;122    {
;;;123      assert(CU_FALSE == CU_is_test_running());
;;;124    
;;;125      CU_set_error(CUE_SUCCESS);
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       CU_set_error
;;;126      CU_destroy_existing_registry(&f_pTestRegistry);  /* supposed to handle NULL ok */
000008  4802              LDR      r0,|L4.20|
00000a  f7fffffe          BL       CU_destroy_existing_registry
;;;127      CU_clear_previous_results();
00000e  f7fffffe          BL       CU_clear_previous_results
;;;128      CU_CREATE_MEMORY_REPORT(NULL);
;;;129    }
000012  bd10              POP      {r4,pc}
;;;130    
                          ENDP

                  |L4.20|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_create_new_registry||, CODE, READONLY, ALIGN=1

                  CU_create_new_registry PROC
;;;931     *=================================================================*/
;;;932    CU_pTestRegistry CU_create_new_registry(void)
000000  b510              PUSH     {r4,lr}
;;;933    {
;;;934      CU_pTestRegistry pRegistry = (CU_pTestRegistry)CU_MALLOC(sizeof(CU_TestRegistry));
000002  200c              MOVS     r0,#0xc
000004  f7fffffe          BL       malloc
000008  4604              MOV      r4,r0
;;;935      if (NULL != pRegistry) {
00000a  b11c              CBZ      r4,|L5.20|
;;;936        pRegistry->pSuite = NULL;
00000c  2000              MOVS     r0,#0
00000e  60a0              STR      r0,[r4,#8]
;;;937        pRegistry->uiNumberOfSuites = 0;
000010  6020              STR      r0,[r4,#0]
;;;938        pRegistry->uiNumberOfTests = 0;
000012  6060              STR      r0,[r4,#4]
                  |L5.20|
;;;939      }
;;;940    
;;;941      return pRegistry;
000014  4620              MOV      r0,r4
;;;942    }
000016  bd10              POP      {r4,pc}
;;;943    
                          ENDP


                          AREA ||i.CU_destroy_existing_registry||, CODE, READONLY, ALIGN=1

                  CU_destroy_existing_registry PROC
;;;944    /*------------------------------------------------------------------------*/
;;;945    void CU_destroy_existing_registry(CU_pTestRegistry* ppRegistry)
000000  b510              PUSH     {r4,lr}
;;;946    {
000002  4604              MOV      r4,r0
;;;947      assert(NULL != ppRegistry);
;;;948    
;;;949      /* Note - CU_cleanup_registry counts on being able to pass NULL */
;;;950    
;;;951      if (NULL != *ppRegistry) {
000004  6820              LDR      r0,[r4,#0]
000006  b110              CBZ      r0,|L6.14|
;;;952        cleanup_test_registry(*ppRegistry);
000008  6820              LDR      r0,[r4,#0]
00000a  f7fffffe          BL       cleanup_test_registry
                  |L6.14|
;;;953      }
;;;954      CU_FREE(*ppRegistry);
00000e  6820              LDR      r0,[r4,#0]
000010  f7fffffe          BL       free
;;;955      *ppRegistry = NULL;
000014  2000              MOVS     r0,#0
000016  6020              STR      r0,[r4,#0]
;;;956    }
000018  bd10              POP      {r4,pc}
;;;957    
                          ENDP


                          AREA ||i.CU_get_registry||, CODE, READONLY, ALIGN=2

                  CU_get_registry PROC
;;;131    /*------------------------------------------------------------------------*/
;;;132    CU_pTestRegistry CU_get_registry(void)
000000  4801              LDR      r0,|L7.8|
;;;133    {
;;;134      return f_pTestRegistry;
000002  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
;;;135    }
000004  4770              BX       lr
;;;136    
                          ENDP

000006  0000              DCW      0x0000
                  |L7.8|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_get_suite||, CODE, READONLY, ALIGN=2

                  CU_get_suite PROC
;;;255    /*------------------------------------------------------------------------*/
;;;256    CU_pSuite CU_get_suite(const char *strName)
000000  b570              PUSH     {r4-r6,lr}
;;;257    {
000002  4604              MOV      r4,r0
;;;258      CU_pSuite result = NULL;
000004  2500              MOVS     r5,#0
;;;259      CU_ErrorCode error = CUE_SUCCESS;
000006  2600              MOVS     r6,#0
;;;260    
;;;261      if (NULL == f_pTestRegistry) {
000008  4809              LDR      r0,|L8.48|
00000a  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
00000c  b908              CBNZ     r0,|L8.18|
;;;262        error = CUE_NOREGISTRY;
00000e  260a              MOVS     r6,#0xa
000010  e008              B        |L8.36|
                  |L8.18|
;;;263      }
;;;264      else if (NULL == strName) {
000012  b90c              CBNZ     r4,|L8.24|
;;;265        error = CUE_NO_SUITENAME;
000014  2615              MOVS     r6,#0x15
000016  e005              B        |L8.36|
                  |L8.24|
;;;266      }
;;;267      else {
;;;268        result = CU_get_suite_by_name(strName, f_pTestRegistry);
000018  4805              LDR      r0,|L8.48|
00001a  6801              LDR      r1,[r0,#0]  ; f_pTestRegistry
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       CU_get_suite_by_name
000022  4605              MOV      r5,r0
                  |L8.36|
;;;269      }
;;;270    
;;;271      CU_set_error(error);
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       CU_set_error
;;;272      return result;
00002a  4628              MOV      r0,r5
;;;273    }
00002c  bd70              POP      {r4-r6,pc}
;;;274    
                          ENDP

00002e  0000              DCW      0x0000
                  |L8.48|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_get_suite_at_pos||, CODE, READONLY, ALIGN=2

                  CU_get_suite_at_pos PROC
;;;275    /*------------------------------------------------------------------------*/
;;;276    CU_pSuite CU_get_suite_at_pos(unsigned int pos)
000000  b570              PUSH     {r4-r6,lr}
;;;277    {
000002  4604              MOV      r4,r0
;;;278      CU_pSuite result = NULL;
000004  2500              MOVS     r5,#0
;;;279      CU_ErrorCode error = CUE_SUCCESS;
000006  2600              MOVS     r6,#0
;;;280    
;;;281      if (NULL == f_pTestRegistry) {
000008  4807              LDR      r0,|L9.40|
00000a  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
00000c  b908              CBNZ     r0,|L9.18|
;;;282        error = CUE_NOREGISTRY;
00000e  260a              MOVS     r6,#0xa
000010  e005              B        |L9.30|
                  |L9.18|
;;;283      }
;;;284      else {
;;;285        result = CU_get_suite_by_index(pos, f_pTestRegistry);
000012  4805              LDR      r0,|L9.40|
000014  6801              LDR      r1,[r0,#0]  ; f_pTestRegistry
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       CU_get_suite_by_index
00001c  4605              MOV      r5,r0
                  |L9.30|
;;;286      }
;;;287    
;;;288      CU_set_error(error);
00001e  4630              MOV      r0,r6
000020  f7fffffe          BL       CU_set_error
;;;289      return result;
000024  4628              MOV      r0,r5
;;;290    }
000026  bd70              POP      {r4-r6,pc}
;;;291    
                          ENDP

                  |L9.40|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_get_suite_by_index||, CODE, READONLY, ALIGN=2

                  CU_get_suite_by_index PROC
;;;979    /*------------------------------------------------------------------------*/
;;;980    CU_pSuite CU_get_suite_by_index(unsigned int index, CU_pTestRegistry pRegistry)
000000  b510              PUSH     {r4,lr}
;;;981    {
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;982      CU_pSuite result = NULL;
000006  2000              MOVS     r0,#0
;;;983      unsigned int i;
;;;984    
;;;985      assert(NULL != pRegistry);
;;;986    
;;;987      if ((index > 0) && (index <= f_pTestRegistry->uiNumberOfSuites)) {
000008  b16a              CBZ      r2,|L10.38|
00000a  4c07              LDR      r4,|L10.40|
00000c  6824              LDR      r4,[r4,#0]  ; f_pTestRegistry
00000e  6824              LDR      r4,[r4,#0]
000010  4294              CMP      r4,r2
000012  d308              BCC      |L10.38|
;;;988        result = f_pTestRegistry->pSuite;
000014  4c04              LDR      r4,|L10.40|
000016  6824              LDR      r4,[r4,#0]  ; f_pTestRegistry
000018  68a0              LDR      r0,[r4,#8]
;;;989        for (i=1 ; i<index ; ++i) {
00001a  2101              MOVS     r1,#1
00001c  e001              B        |L10.34|
                  |L10.30|
;;;990          result = result->pNext;
00001e  6a00              LDR      r0,[r0,#0x20]
000020  1c49              ADDS     r1,r1,#1              ;989
                  |L10.34|
000022  4291              CMP      r1,r2                 ;989
000024  d3fb              BCC      |L10.30|
                  |L10.38|
;;;991        }
;;;992      }
;;;993    
;;;994      return result;
;;;995    }
000026  bd10              POP      {r4,pc}
;;;996    
                          ENDP

                  |L10.40|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_get_suite_by_name||, CODE, READONLY, ALIGN=1

                  CU_get_suite_by_name PROC
;;;958    /*------------------------------------------------------------------------*/
;;;959    CU_pSuite CU_get_suite_by_name(const char* szSuiteName, CU_pTestRegistry pRegistry)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;960    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;961      CU_pSuite pSuite = NULL;
000008  2700              MOVS     r7,#0
;;;962      CU_pSuite pCur = NULL;
00000a  2400              MOVS     r4,#0
;;;963    
;;;964      assert(NULL != pRegistry);
;;;965      assert(NULL != szSuiteName);
;;;966    
;;;967      pCur = pRegistry->pSuite;
00000c  68b4              LDR      r4,[r6,#8]
;;;968      while (NULL != pCur)  {
00000e  e009              B        |L11.36|
                  |L11.16|
;;;969        if ((NULL != pCur->pName) && (0 == CU_compare_strings(pCur->pName, szSuiteName))) {
000010  6820              LDR      r0,[r4,#0]
000012  b130              CBZ      r0,|L11.34|
000014  4629              MOV      r1,r5
000016  6820              LDR      r0,[r4,#0]
000018  f7fffffe          BL       CU_compare_strings
00001c  b908              CBNZ     r0,|L11.34|
;;;970          pSuite = pCur;
00001e  4627              MOV      r7,r4
;;;971          break;
000020  e002              B        |L11.40|
                  |L11.34|
;;;972        }
;;;973        pCur = pCur->pNext;
000022  6a24              LDR      r4,[r4,#0x20]
                  |L11.36|
000024  2c00              CMP      r4,#0                 ;968
000026  d1f3              BNE      |L11.16|
                  |L11.40|
000028  bf00              NOP                            ;971
;;;974      }
;;;975    
;;;976      return pSuite;
00002a  4638              MOV      r0,r7
;;;977    }
00002c  e8bd81f0          POP      {r4-r8,pc}
;;;978    
                          ENDP


                          AREA ||i.CU_get_suite_pos||, CODE, READONLY, ALIGN=2

                  CU_get_suite_pos PROC
;;;292    /*------------------------------------------------------------------------*/
;;;293    unsigned int CU_get_suite_pos(CU_pSuite pSuite)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;294    {
000004  4605              MOV      r5,r0
;;;295      unsigned int result = 0;
000006  2600              MOVS     r6,#0
;;;296      CU_ErrorCode error = CUE_SUCCESS;
000008  2700              MOVS     r7,#0
;;;297      CU_pSuite pCurrentSuite = NULL;
00000a  2400              MOVS     r4,#0
;;;298    
;;;299      if (NULL == f_pTestRegistry) {
00000c  480c              LDR      r0,|L12.64|
00000e  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000010  b908              CBNZ     r0,|L12.22|
;;;300        error = CUE_NOREGISTRY;
000012  270a              MOVS     r7,#0xa
000014  e00e              B        |L12.52|
                  |L12.22|
;;;301      }
;;;302      else if (NULL == pSuite) {
000016  b90d              CBNZ     r5,|L12.28|
;;;303        error = CUE_NOSUITE;
000018  2714              MOVS     r7,#0x14
00001a  e00b              B        |L12.52|
                  |L12.28|
;;;304      }
;;;305      else {
;;;306        pCurrentSuite = f_pTestRegistry->pSuite;
00001c  4808              LDR      r0,|L12.64|
00001e  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000020  6884              LDR      r4,[r0,#8]
;;;307        result = 1;
000022  2601              MOVS     r6,#1
;;;308        while ((NULL != pCurrentSuite) && (pCurrentSuite != pSuite)) {
000024  e001              B        |L12.42|
                  |L12.38|
;;;309          ++result;
000026  1c76              ADDS     r6,r6,#1
;;;310          pCurrentSuite = pCurrentSuite->pNext;
000028  6a24              LDR      r4,[r4,#0x20]
                  |L12.42|
00002a  b10c              CBZ      r4,|L12.48|
00002c  42ac              CMP      r4,r5                 ;308
00002e  d1fa              BNE      |L12.38|
                  |L12.48|
;;;311        }
;;;312        if (pCurrentSuite == NULL) {
000030  b904              CBNZ     r4,|L12.52|
;;;313          result = 0;
000032  2600              MOVS     r6,#0
                  |L12.52|
;;;314        }
;;;315      }
;;;316    
;;;317      CU_set_error(error);
000034  4638              MOV      r0,r7
000036  f7fffffe          BL       CU_set_error
;;;318      return result;
00003a  4630              MOV      r0,r6
;;;319    }
00003c  e8bd81f0          POP      {r4-r8,pc}
;;;320    
                          ENDP

                  |L12.64|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_get_suite_pos_by_name||, CODE, READONLY, ALIGN=2

                  CU_get_suite_pos_by_name PROC
;;;321    /*------------------------------------------------------------------------*/
;;;322    unsigned int CU_get_suite_pos_by_name(const char *strName)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;323    {
000004  4605              MOV      r5,r0
;;;324      unsigned int result = 0;
000006  2600              MOVS     r6,#0
;;;325      CU_ErrorCode error = CUE_SUCCESS;
000008  2700              MOVS     r7,#0
;;;326      CU_pSuite pCurrentSuite = NULL;
00000a  2400              MOVS     r4,#0
;;;327    
;;;328      if (NULL == f_pTestRegistry) {
00000c  480e              LDR      r0,|L13.72|
00000e  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000010  b908              CBNZ     r0,|L13.22|
;;;329        error = CUE_NOREGISTRY;
000012  270a              MOVS     r7,#0xa
000014  e012              B        |L13.60|
                  |L13.22|
;;;330      }
;;;331      else if (NULL == strName) {
000016  b90d              CBNZ     r5,|L13.28|
;;;332        error = CUE_NO_SUITENAME;
000018  2715              MOVS     r7,#0x15
00001a  e00f              B        |L13.60|
                  |L13.28|
;;;333      }
;;;334      else {
;;;335        pCurrentSuite = f_pTestRegistry->pSuite;
00001c  480a              LDR      r0,|L13.72|
00001e  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000020  6884              LDR      r4,[r0,#8]
;;;336        result = 1;
000022  2601              MOVS     r6,#1
;;;337        while ((NULL != pCurrentSuite) && (0 != strcmp(pCurrentSuite->pName, strName))) {
000024  e001              B        |L13.42|
                  |L13.38|
;;;338          ++result;
000026  1c76              ADDS     r6,r6,#1
;;;339          pCurrentSuite = pCurrentSuite->pNext;
000028  6a24              LDR      r4,[r4,#0x20]
                  |L13.42|
00002a  b12c              CBZ      r4,|L13.56|
00002c  4629              MOV      r1,r5                 ;337
00002e  6820              LDR      r0,[r4,#0]            ;337
000030  f7fffffe          BL       strcmp
000034  2800              CMP      r0,#0                 ;337
000036  d1f6              BNE      |L13.38|
                  |L13.56|
;;;340        }
;;;341        if (pCurrentSuite == NULL) {
000038  b904              CBNZ     r4,|L13.60|
;;;342          result = 0;
00003a  2600              MOVS     r6,#0
                  |L13.60|
;;;343        }
;;;344      }
;;;345    
;;;346      CU_set_error(error);
00003c  4638              MOV      r0,r7
00003e  f7fffffe          BL       CU_set_error
;;;347      return result;
000042  4630              MOV      r0,r6
;;;348    }
000044  e8bd81f0          POP      {r4-r8,pc}
;;;349    
                          ENDP

                  |L13.72|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_get_test||, CODE, READONLY, ALIGN=2

                  CU_get_test PROC
;;;441    /*------------------------------------------------------------------------*/
;;;442    CU_pTest CU_get_test(CU_pSuite pSuite, const char *strName)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;443    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;444      CU_pTest result = NULL;
000008  2600              MOVS     r6,#0
;;;445      CU_ErrorCode error = CUE_SUCCESS;
00000a  2700              MOVS     r7,#0
;;;446    
;;;447      if (NULL == f_pTestRegistry) {
00000c  480a              LDR      r0,|L14.56|
00000e  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000010  b908              CBNZ     r0,|L14.22|
;;;448        error = CUE_NOREGISTRY;
000012  270a              MOVS     r7,#0xa
000014  e00a              B        |L14.44|
                  |L14.22|
;;;449      }
;;;450      else if (NULL == pSuite) {
000016  b90c              CBNZ     r4,|L14.28|
;;;451        error = CUE_NOSUITE;
000018  2714              MOVS     r7,#0x14
00001a  e007              B        |L14.44|
                  |L14.28|
;;;452      }
;;;453      else if (NULL == strName) {
00001c  b90d              CBNZ     r5,|L14.34|
;;;454        error = CUE_NO_SUITENAME;
00001e  2715              MOVS     r7,#0x15
000020  e004              B        |L14.44|
                  |L14.34|
;;;455      }
;;;456      else {
;;;457        result = CU_get_test_by_name(strName, pSuite);
000022  4621              MOV      r1,r4
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       CU_get_test_by_name
00002a  4606              MOV      r6,r0
                  |L14.44|
;;;458      }
;;;459    
;;;460      CU_set_error(error);
00002c  4638              MOV      r0,r7
00002e  f7fffffe          BL       CU_set_error
;;;461      return result;
000032  4630              MOV      r0,r6
;;;462    }
000034  e8bd81f0          POP      {r4-r8,pc}
;;;463    
                          ENDP

                  |L14.56|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_get_test_at_pos||, CODE, READONLY, ALIGN=2

                  CU_get_test_at_pos PROC
;;;464    /*------------------------------------------------------------------------*/
;;;465    CU_pTest CU_get_test_at_pos(CU_pSuite pSuite, unsigned int pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;466    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;467      CU_pTest result = NULL;
000008  2600              MOVS     r6,#0
;;;468      CU_ErrorCode error = CUE_SUCCESS;
00000a  2700              MOVS     r7,#0
;;;469    
;;;470      if (NULL == f_pTestRegistry) {
00000c  4809              LDR      r0,|L15.52|
00000e  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000010  b908              CBNZ     r0,|L15.22|
;;;471        error = CUE_NOREGISTRY;
000012  270a              MOVS     r7,#0xa
000014  e007              B        |L15.38|
                  |L15.22|
;;;472      }
;;;473      else if (NULL == pSuite) {
000016  b90c              CBNZ     r4,|L15.28|
;;;474        error = CUE_NOSUITE;
000018  2714              MOVS     r7,#0x14
00001a  e004              B        |L15.38|
                  |L15.28|
;;;475      }
;;;476      else {
;;;477        result = CU_get_test_by_index(pos, pSuite);
00001c  4621              MOV      r1,r4
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       CU_get_test_by_index
000024  4606              MOV      r6,r0
                  |L15.38|
;;;478      }
;;;479    
;;;480      CU_set_error(error);
000026  4638              MOV      r0,r7
000028  f7fffffe          BL       CU_set_error
;;;481      return result;
00002c  4630              MOV      r0,r6
;;;482    }
00002e  e8bd81f0          POP      {r4-r8,pc}
;;;483    
                          ENDP

000032  0000              DCW      0x0000
                  |L15.52|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_get_test_by_index||, CODE, READONLY, ALIGN=1

                  CU_get_test_by_index PROC
;;;1018   /*------------------------------------------------------------------------*/
;;;1019   CU_pTest CU_get_test_by_index(unsigned int index, CU_pSuite pSuite)
000000  b510              PUSH     {r4,lr}
;;;1020   {
000002  4602              MOV      r2,r0
;;;1021     CU_pTest result = NULL;
000004  2000              MOVS     r0,#0
;;;1022     unsigned int i;
;;;1023   
;;;1024     assert(NULL != pSuite);
;;;1025   
;;;1026     if ((index > 0) && (index <= pSuite->uiNumberOfTests)) {
000006  b14a              CBZ      r2,|L16.28|
000008  69cc              LDR      r4,[r1,#0x1c]
00000a  4294              CMP      r4,r2
00000c  d306              BCC      |L16.28|
;;;1027       result = pSuite->pTest;
00000e  6888              LDR      r0,[r1,#8]
;;;1028       for (i=1 ; i<index ; ++i) {
000010  2301              MOVS     r3,#1
000012  e001              B        |L16.24|
                  |L16.20|
;;;1029         result = result->pNext;
000014  6900              LDR      r0,[r0,#0x10]
000016  1c5b              ADDS     r3,r3,#1              ;1028
                  |L16.24|
000018  4293              CMP      r3,r2                 ;1028
00001a  d3fb              BCC      |L16.20|
                  |L16.28|
;;;1030       }
;;;1031     }
;;;1032   
;;;1033     return result;
;;;1034   }
00001c  bd10              POP      {r4,pc}
;;;1035   /** @} */
                          ENDP


                          AREA ||i.CU_get_test_by_name||, CODE, READONLY, ALIGN=1

                  CU_get_test_by_name PROC
;;;997    /*------------------------------------------------------------------------*/
;;;998    CU_pTest CU_get_test_by_name(const char* szTestName, CU_pSuite pSuite)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;999    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;1000     CU_pTest pTest = NULL;
000008  2700              MOVS     r7,#0
;;;1001     CU_pTest pCur = NULL;
00000a  2400              MOVS     r4,#0
;;;1002   
;;;1003     assert(NULL != pSuite);
;;;1004     assert(NULL != szTestName);
;;;1005   
;;;1006     pCur = pSuite->pTest;
00000c  68b4              LDR      r4,[r6,#8]
;;;1007     while (NULL != pCur) {
00000e  e009              B        |L17.36|
                  |L17.16|
;;;1008       if ((NULL != pCur->pName) && (0 == CU_compare_strings(pCur->pName, szTestName))) {
000010  6820              LDR      r0,[r4,#0]
000012  b130              CBZ      r0,|L17.34|
000014  4629              MOV      r1,r5
000016  6820              LDR      r0,[r4,#0]
000018  f7fffffe          BL       CU_compare_strings
00001c  b908              CBNZ     r0,|L17.34|
;;;1009         pTest = pCur;
00001e  4627              MOV      r7,r4
;;;1010         break;
000020  e002              B        |L17.40|
                  |L17.34|
;;;1011       }
;;;1012       pCur = pCur->pNext;
000022  6924              LDR      r4,[r4,#0x10]
                  |L17.36|
000024  2c00              CMP      r4,#0                 ;1007
000026  d1f3              BNE      |L17.16|
                  |L17.40|
000028  bf00              NOP                            ;1010
;;;1013     }
;;;1014   
;;;1015     return pTest;
00002a  4638              MOV      r0,r7
;;;1016   }
00002c  e8bd81f0          POP      {r4-r8,pc}
;;;1017   
                          ENDP


                          AREA ||i.CU_get_test_pos||, CODE, READONLY, ALIGN=2

                  CU_get_test_pos PROC
;;;484    /*------------------------------------------------------------------------*/
;;;485    unsigned int CU_get_test_pos(CU_pSuite pSuite, CU_pTest pTest)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;486    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;487      unsigned int result = 0;
000008  2700              MOVS     r7,#0
;;;488      CU_ErrorCode error = CUE_SUCCESS;
00000a  46b8              MOV      r8,r7
;;;489      CU_pTest pCurrentTest = NULL;
00000c  2400              MOVS     r4,#0
;;;490    
;;;491      if (NULL == f_pTestRegistry) {
00000e  480f              LDR      r0,|L18.76|
000010  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000012  b910              CBNZ     r0,|L18.26|
;;;492        error = CUE_NOREGISTRY;
000014  f04f080a          MOV      r8,#0xa
000018  e011              B        |L18.62|
                  |L18.26|
;;;493      }
;;;494      else if (NULL == pSuite) {
00001a  b915              CBNZ     r5,|L18.34|
;;;495        error = CUE_NOSUITE;
00001c  f04f0814          MOV      r8,#0x14
000020  e00d              B        |L18.62|
                  |L18.34|
;;;496      }
;;;497      else if (NULL == pTest) {
000022  b916              CBNZ     r6,|L18.42|
;;;498        error = CUE_NOTEST;
000024  f04f081e          MOV      r8,#0x1e
000028  e009              B        |L18.62|
                  |L18.42|
;;;499      }
;;;500      else {
;;;501        pCurrentTest = pSuite->pTest;
00002a  68ac              LDR      r4,[r5,#8]
;;;502        result = 1;
00002c  2701              MOVS     r7,#1
;;;503        while ((NULL != pCurrentTest) && (pCurrentTest != pTest)) {
00002e  e001              B        |L18.52|
                  |L18.48|
;;;504          ++result;
000030  1c7f              ADDS     r7,r7,#1
;;;505          pCurrentTest = pCurrentTest->pNext;
000032  6924              LDR      r4,[r4,#0x10]
                  |L18.52|
000034  b10c              CBZ      r4,|L18.58|
000036  42b4              CMP      r4,r6                 ;503
000038  d1fa              BNE      |L18.48|
                  |L18.58|
;;;506        }
;;;507        if (pCurrentTest == NULL) {
00003a  b904              CBNZ     r4,|L18.62|
;;;508          result = 0;
00003c  2700              MOVS     r7,#0
                  |L18.62|
;;;509        }
;;;510      }
;;;511    
;;;512      CU_set_error(error);
00003e  4640              MOV      r0,r8
000040  f7fffffe          BL       CU_set_error
;;;513      return result;
000044  4638              MOV      r0,r7
;;;514    }
000046  e8bd81f0          POP      {r4-r8,pc}
;;;515    
                          ENDP

00004a  0000              DCW      0x0000
                  |L18.76|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_get_test_pos_by_name||, CODE, READONLY, ALIGN=2

                  CU_get_test_pos_by_name PROC
;;;516    /*------------------------------------------------------------------------*/
;;;517    unsigned int CU_get_test_pos_by_name(CU_pSuite pSuite, const char *strName)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;518    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;519      unsigned int result = 0;
000008  2700              MOVS     r7,#0
;;;520      CU_ErrorCode error = CUE_SUCCESS;
00000a  46b8              MOV      r8,r7
;;;521      CU_pTest pCurrentTest = NULL;
00000c  2400              MOVS     r4,#0
;;;522    
;;;523      if (NULL == f_pTestRegistry) {
00000e  4811              LDR      r0,|L19.84|
000010  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000012  b910              CBNZ     r0,|L19.26|
;;;524        error = CUE_NOREGISTRY;
000014  f04f080a          MOV      r8,#0xa
000018  e015              B        |L19.70|
                  |L19.26|
;;;525      }
;;;526      else if (NULL == pSuite) {
00001a  b915              CBNZ     r5,|L19.34|
;;;527        error = CUE_NOSUITE;
00001c  f04f0814          MOV      r8,#0x14
000020  e011              B        |L19.70|
                  |L19.34|
;;;528      }
;;;529      else if (NULL == strName) {
000022  b916              CBNZ     r6,|L19.42|
;;;530        error = CUE_NO_TESTNAME;
000024  f04f081f          MOV      r8,#0x1f
000028  e00d              B        |L19.70|
                  |L19.42|
;;;531      }
;;;532      else {
;;;533        pCurrentTest = pSuite->pTest;
00002a  68ac              LDR      r4,[r5,#8]
;;;534        result = 1;
00002c  2701              MOVS     r7,#1
;;;535        while ((NULL != pCurrentTest) && (0 != strcmp(pCurrentTest->pName, strName))) {
00002e  e001              B        |L19.52|
                  |L19.48|
;;;536          ++result;
000030  1c7f              ADDS     r7,r7,#1
;;;537          pCurrentTest = pCurrentTest->pNext;
000032  6924              LDR      r4,[r4,#0x10]
                  |L19.52|
000034  b12c              CBZ      r4,|L19.66|
000036  4631              MOV      r1,r6                 ;535
000038  6820              LDR      r0,[r4,#0]            ;535
00003a  f7fffffe          BL       strcmp
00003e  2800              CMP      r0,#0                 ;535
000040  d1f6              BNE      |L19.48|
                  |L19.66|
;;;538        }
;;;539        if (pCurrentTest == NULL) {
000042  b904              CBNZ     r4,|L19.70|
;;;540          result = 0;
000044  2700              MOVS     r7,#0
                  |L19.70|
;;;541        }
;;;542      }
;;;543    
;;;544      CU_set_error(error);
000046  4640              MOV      r0,r8
000048  f7fffffe          BL       CU_set_error
;;;545      return result;
00004c  4638              MOV      r0,r7
;;;546    }
00004e  e8bd81f0          POP      {r4-r8,pc}
;;;547    
                          ENDP

000052  0000              DCW      0x0000
                  |L19.84|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_initialize_registry||, CODE, READONLY, ALIGN=2

                  CU_initialize_registry PROC
;;;93      *=================================================================*/
;;;94     CU_ErrorCode CU_initialize_registry(void)
000000  b510              PUSH     {r4,lr}
;;;95     {
;;;96       CU_ErrorCode result;
;;;97     
;;;98       assert(CU_FALSE == CU_is_test_running());
;;;99     
;;;100      CU_set_error(result = CUE_SUCCESS);
000002  2100              MOVS     r1,#0
000004  460c              MOV      r4,r1
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       CU_set_error
;;;101    
;;;102      if (NULL != f_pTestRegistry) {
00000c  4809              LDR      r0,|L20.52|
00000e  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000010  b108              CBZ      r0,|L20.22|
;;;103        CU_cleanup_registry();
000012  f7fffffe          BL       CU_cleanup_registry
                  |L20.22|
;;;104      }
;;;105    
;;;106      f_pTestRegistry = CU_create_new_registry();
000016  f7fffffe          BL       CU_create_new_registry
00001a  4906              LDR      r1,|L20.52|
00001c  6008              STR      r0,[r1,#0]  ; f_pTestRegistry
;;;107      if (NULL == f_pTestRegistry) {
00001e  4608              MOV      r0,r1
000020  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000022  b920              CBNZ     r0,|L20.46|
;;;108        CU_set_error(result = CUE_NOMEMORY);
000024  2101              MOVS     r1,#1
000026  460c              MOV      r4,r1
000028  4608              MOV      r0,r1
00002a  f7fffffe          BL       CU_set_error
                  |L20.46|
;;;109      }
;;;110    
;;;111      return result;
00002e  4620              MOV      r0,r4
;;;112    }
000030  bd10              POP      {r4,pc}
;;;113    
                          ENDP

000032  0000              DCW      0x0000
                  |L20.52|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_register_nsuites||, CODE, READONLY, ALIGN=1

                  CU_register_nsuites PROC
;;;570    /*------------------------------------------------------------------------*/
;;;571    CU_ErrorCode CU_register_nsuites(int suite_count, ...)
000000  b40f              PUSH     {r0-r3}
;;;572    {
000002  e92d41fc          PUSH     {r2-r8,lr}
;;;573      CU_SuiteInfo *pSuiteItem = NULL;
000006  2400              MOVS     r4,#0
;;;574      CU_TestInfo  *pTestItem = NULL;
000008  2500              MOVS     r5,#0
;;;575      CU_pSuite     pSuite = NULL;
00000a  2700              MOVS     r7,#0
;;;576    
;;;577      va_list argptr;
;;;578      int i;
;;;579    
;;;580      va_start(argptr, suite_count);
00000c  a809              ADD      r0,sp,#0x24
00000e  9001              STR      r0,[sp,#4]
;;;581    
;;;582      for (i=0 ; i<suite_count ; ++i) {
000010  2600              MOVS     r6,#0
000012  e027              B        |L21.100|
                  |L21.20|
;;;583        pSuiteItem = va_arg(argptr, CU_pSuiteInfo);
000014  9801              LDR      r0,[sp,#4]
000016  c810              LDM      r0!,{r4}
000018  9001              STR      r0,[sp,#4]
;;;584        if (NULL != pSuiteItem) {
00001a  b314              CBZ      r4,|L21.98|
;;;585          for ( ; NULL != pSuiteItem->pName; pSuiteItem++) {
00001c  e01e              B        |L21.92|
                  |L21.30|
;;;586            if (NULL != (pSuite = CU_add_suite_with_setup_and_teardown(pSuiteItem->pName, pSuiteItem->pInitFunc, pSuiteItem->pCleanupFunc, pSuiteItem->pSetUpFunc, pSuiteItem->pTearDownFunc))) {
00001e  6920              LDR      r0,[r4,#0x10]
000020  9000              STR      r0,[sp,#0]
000022  e894000f          LDM      r4,{r0-r3}
000026  f7fffffe          BL       CU_add_suite_with_setup_and_teardown
00002a  1e07              SUBS     r7,r0,#0
00002c  d012              BEQ      |L21.84|
;;;587              for (pTestItem = pSuiteItem->pTests; NULL != pTestItem->pName; pTestItem++) {
00002e  6965              LDR      r5,[r4,#0x14]
000030  e00c              B        |L21.76|
                  |L21.50|
;;;588                if (NULL == CU_add_test(pSuite, pTestItem->pName, pTestItem->pTestFunc)) {
000032  4638              MOV      r0,r7
000034  e9d51200          LDRD     r1,r2,[r5,#0]
000038  f7fffffe          BL       CU_add_test
00003c  b928              CBNZ     r0,|L21.74|
;;;589                  return CU_get_error();
00003e  f7fffffe          BL       CU_get_error
                  |L21.66|
;;;590                }
;;;591              }
;;;592            }
;;;593            else {
;;;594              return CU_get_error();
;;;595            }
;;;596          }
;;;597        }
;;;598      }
;;;599    	return CU_get_error();
;;;600    }
000042  e8bd01fc          POP      {r2-r8}
000046  f85dfb14          LDR      pc,[sp],#0x14
                  |L21.74|
00004a  3508              ADDS     r5,r5,#8              ;587
                  |L21.76|
00004c  6828              LDR      r0,[r5,#0]            ;587
00004e  2800              CMP      r0,#0                 ;587
000050  d1ef              BNE      |L21.50|
000052  e002              B        |L21.90|
                  |L21.84|
000054  f7fffffe          BL       CU_get_error
000058  e7f3              B        |L21.66|
                  |L21.90|
00005a  3418              ADDS     r4,r4,#0x18           ;585
                  |L21.92|
00005c  6820              LDR      r0,[r4,#0]            ;585
00005e  2800              CMP      r0,#0                 ;585
000060  d1dd              BNE      |L21.30|
                  |L21.98|
000062  1c76              ADDS     r6,r6,#1              ;582
                  |L21.100|
000064  9808              LDR      r0,[sp,#0x20]         ;582
000066  4286              CMP      r6,r0                 ;582
000068  dbd4              BLT      |L21.20|
00006a  f7fffffe          BL       CU_get_error
00006e  e7e8              B        |L21.66|
;;;601    
                          ENDP


                          AREA ||i.CU_register_suites||, CODE, READONLY, ALIGN=1

                  CU_register_suites PROC
;;;602    /*------------------------------------------------------------------------*/
;;;603    CU_ErrorCode CU_register_suites(CU_SuiteInfo suite_info[])
000000  b510              PUSH     {r4,lr}
;;;604    {
000002  4604              MOV      r4,r0
;;;605      return CU_register_nsuites(1, suite_info);
000004  4621              MOV      r1,r4
000006  2001              MOVS     r0,#1
000008  f7fffffe          BL       CU_register_nsuites
;;;606    }
00000c  bd10              POP      {r4,pc}
;;;607    /*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*/
                          ENDP


                          AREA ||i.CU_registry_initialized||, CODE, READONLY, ALIGN=2

                  CU_registry_initialized PROC
;;;114    /*------------------------------------------------------------------------*/
;;;115    CU_BOOL CU_registry_initialized(void)
000000  4803              LDR      r0,|L23.16|
;;;116    {
;;;117      return (NULL == f_pTestRegistry) ? CU_FALSE : CU_TRUE;
000002  6800              LDR      r0,[r0,#0]  ; f_pTestRegistry
000004  b108              CBZ      r0,|L23.10|
000006  2001              MOVS     r0,#1
                  |L23.8|
;;;118    }
000008  4770              BX       lr
                  |L23.10|
00000a  2000              MOVS     r0,#0                 ;117
00000c  e7fc              B        |L23.8|
;;;119    
                          ENDP

00000e  0000              DCW      0x0000
                  |L23.16|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_set_registry||, CODE, READONLY, ALIGN=2

                  CU_set_registry PROC
;;;137    /*------------------------------------------------------------------------*/
;;;138    CU_pTestRegistry CU_set_registry(CU_pTestRegistry pRegistry)
000000  b570              PUSH     {r4-r6,lr}
;;;139    {
000002  4604              MOV      r4,r0
;;;140      CU_pTestRegistry pOldRegistry = f_pTestRegistry;
000004  4804              LDR      r0,|L24.24|
000006  6805              LDR      r5,[r0,#0]  ; f_pTestRegistry
;;;141    
;;;142      assert(CU_FALSE == CU_is_test_running());
;;;143    
;;;144      CU_set_error(CUE_SUCCESS);
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       CU_set_error
;;;145      f_pTestRegistry = pRegistry;
00000e  4802              LDR      r0,|L24.24|
000010  6004              STR      r4,[r0,#0]  ; f_pTestRegistry
;;;146      return pOldRegistry;
000012  4628              MOV      r0,r5
;;;147    }
000014  bd70              POP      {r4-r6,pc}
;;;148    
                          ENDP

000016  0000              DCW      0x0000
                  |L24.24|
                          DCD      f_pTestRegistry

                          AREA ||i.CU_set_suite_active||, CODE, READONLY, ALIGN=1

                  CU_set_suite_active PROC
;;;186    /*------------------------------------------------------------------------*/
;;;187    CU_ErrorCode CU_set_suite_active(CU_pSuite pSuite, CU_BOOL fNewActive)
000000  b570              PUSH     {r4-r6,lr}
;;;188    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;189      CU_ErrorCode result = CUE_SUCCESS;
000006  2600              MOVS     r6,#0
;;;190    
;;;191      if (NULL == pSuite) {
000008  b90c              CBNZ     r4,|L25.14|
;;;192        result = CUE_NOSUITE;
00000a  2614              MOVS     r6,#0x14
00000c  e000              B        |L25.16|
                  |L25.14|
;;;193      }
;;;194      else {
;;;195        pSuite->fActive = fNewActive;
00000e  6065              STR      r5,[r4,#4]
                  |L25.16|
;;;196      }
;;;197    
;;;198      CU_set_error(result);
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       CU_set_error
;;;199      return result;
000016  4630              MOV      r0,r6
;;;200    }
000018  bd70              POP      {r4-r6,pc}
;;;201    
                          ENDP


                          AREA ||i.CU_set_suite_cleanupfunc||, CODE, READONLY, ALIGN=1

                  CU_set_suite_cleanupfunc PROC
;;;239    /*------------------------------------------------------------------------*/
;;;240    CU_ErrorCode CU_set_suite_cleanupfunc(CU_pSuite pSuite, CU_CleanupFunc pNewClean)
000000  b570              PUSH     {r4-r6,lr}
;;;241    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;242      CU_ErrorCode result = CUE_SUCCESS;
000006  2600              MOVS     r6,#0
;;;243    
;;;244      if (NULL == pSuite) {
000008  b90c              CBNZ     r4,|L26.14|
;;;245        result = CUE_NOSUITE;
00000a  2614              MOVS     r6,#0x14
00000c  e000              B        |L26.16|
                  |L26.14|
;;;246      }
;;;247      else {
;;;248        pSuite->pCleanupFunc = pNewClean;
00000e  6125              STR      r5,[r4,#0x10]
                  |L26.16|
;;;249      }
;;;250    
;;;251      CU_set_error(result);
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       CU_set_error
;;;252      return result;
000016  4630              MOV      r0,r6
;;;253    }
000018  bd70              POP      {r4-r6,pc}
;;;254    
                          ENDP


                          AREA ||i.CU_set_suite_initfunc||, CODE, READONLY, ALIGN=1

                  CU_set_suite_initfunc PROC
;;;223    /*------------------------------------------------------------------------*/
;;;224    CU_ErrorCode CU_set_suite_initfunc(CU_pSuite pSuite, CU_InitializeFunc pNewInit)
000000  b570              PUSH     {r4-r6,lr}
;;;225    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;226      CU_ErrorCode result = CUE_SUCCESS;
000006  2600              MOVS     r6,#0
;;;227    
;;;228      if (NULL == pSuite) {
000008  b90c              CBNZ     r4,|L27.14|
;;;229        result = CUE_NOSUITE;
00000a  2614              MOVS     r6,#0x14
00000c  e000              B        |L27.16|
                  |L27.14|
;;;230      }
;;;231      else {
;;;232        pSuite->pInitializeFunc = pNewInit;
00000e  60e5              STR      r5,[r4,#0xc]
                  |L27.16|
;;;233      }
;;;234    
;;;235      CU_set_error(result);
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       CU_set_error
;;;236      return result;
000016  4630              MOV      r0,r6
;;;237    }
000018  bd70              POP      {r4-r6,pc}
;;;238    
                          ENDP


                          AREA ||i.CU_set_suite_name||, CODE, READONLY, ALIGN=1

                  CU_set_suite_name PROC
;;;202    /*------------------------------------------------------------------------*/
;;;203    CU_ErrorCode CU_set_suite_name(CU_pSuite pSuite, const char *strNewName)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;204    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;205      CU_ErrorCode result = CUE_SUCCESS;
000008  2600              MOVS     r6,#0
;;;206    
;;;207      if (NULL == pSuite) {
00000a  b90c              CBNZ     r4,|L28.16|
;;;208        result = CUE_NOSUITE;
00000c  2614              MOVS     r6,#0x14
00000e  e011              B        |L28.52|
                  |L28.16|
;;;209      }
;;;210      else if (NULL == strNewName) {
000010  b90d              CBNZ     r5,|L28.22|
;;;211        result = CUE_NO_SUITENAME;
000012  2615              MOVS     r6,#0x15
000014  e00e              B        |L28.52|
                  |L28.22|
;;;212      }
;;;213      else {
;;;214        CU_FREE(pSuite->pName);
000016  6820              LDR      r0,[r4,#0]
000018  f7fffffe          BL       free
;;;215        pSuite->pName = (char *)CU_MALLOC(strlen(strNewName)+1);
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       strlen
000022  1c47              ADDS     r7,r0,#1
000024  4638              MOV      r0,r7
000026  f7fffffe          BL       malloc
00002a  6020              STR      r0,[r4,#0]
;;;216        strcpy(pSuite->pName, strNewName);
00002c  4629              MOV      r1,r5
00002e  6820              LDR      r0,[r4,#0]
000030  f7fffffe          BL       strcpy
                  |L28.52|
;;;217      }
;;;218    
;;;219      CU_set_error(result);
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       CU_set_error
;;;220      return result;
00003a  4630              MOV      r0,r6
;;;221    }
00003c  e8bd81f0          POP      {r4-r8,pc}
;;;222    
                          ENDP


                          AREA ||i.CU_set_test_active||, CODE, READONLY, ALIGN=1

                  CU_set_test_active PROC
;;;388    /*------------------------------------------------------------------------*/
;;;389    CU_ErrorCode CU_set_test_active(CU_pTest pTest, CU_BOOL fNewActive)
000000  b570              PUSH     {r4-r6,lr}
;;;390    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;391      CU_ErrorCode result = CUE_SUCCESS;
000006  2600              MOVS     r6,#0
;;;392    
;;;393      if (NULL == pTest) {
000008  b90c              CBNZ     r4,|L29.14|
;;;394        result = CUE_NOTEST;
00000a  261e              MOVS     r6,#0x1e
00000c  e000              B        |L29.16|
                  |L29.14|
;;;395      }
;;;396      else {
;;;397        pTest->fActive = fNewActive;
00000e  6065              STR      r5,[r4,#4]
                  |L29.16|
;;;398      }
;;;399    
;;;400      CU_set_error(result);
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       CU_set_error
;;;401      return result;
000016  4630              MOV      r0,r6
;;;402    }
000018  bd70              POP      {r4-r6,pc}
;;;403    
                          ENDP


                          AREA ||i.CU_set_test_func||, CODE, READONLY, ALIGN=1

                  CU_set_test_func PROC
;;;425    /*------------------------------------------------------------------------*/
;;;426    CU_ErrorCode CU_set_test_func(CU_pTest pTest, CU_TestFunc pNewFunc)
000000  b570              PUSH     {r4-r6,lr}
;;;427    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;428      CU_ErrorCode result = CUE_SUCCESS;
000006  2600              MOVS     r6,#0
;;;429    
;;;430      if ((NULL == pTest) || (NULL == pNewFunc)) {
000008  b104              CBZ      r4,|L30.12|
00000a  b90d              CBNZ     r5,|L30.16|
                  |L30.12|
;;;431        result = CUE_NOTEST;
00000c  261e              MOVS     r6,#0x1e
00000e  e000              B        |L30.18|
                  |L30.16|
;;;432      }
;;;433      else {
;;;434        pTest->pTestFunc = pNewFunc;
000010  60a5              STR      r5,[r4,#8]
                  |L30.18|
;;;435      }
;;;436    
;;;437      CU_set_error(result);
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       CU_set_error
;;;438      return result;
000018  4630              MOV      r0,r6
;;;439    }
00001a  bd70              POP      {r4-r6,pc}
;;;440    
                          ENDP


                          AREA ||i.CU_set_test_name||, CODE, READONLY, ALIGN=1

                  CU_set_test_name PROC
;;;404    /*------------------------------------------------------------------------*/
;;;405    CU_ErrorCode CU_set_test_name(CU_pTest pTest, const char *strNewName)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;406    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;407      CU_ErrorCode result = CUE_SUCCESS;
000008  2600              MOVS     r6,#0
;;;408    
;;;409      if (NULL == pTest) {
00000a  b90c              CBNZ     r4,|L31.16|
;;;410        result = CUE_NOTEST;
00000c  261e              MOVS     r6,#0x1e
00000e  e011              B        |L31.52|
                  |L31.16|
;;;411      }
;;;412      else if (NULL == strNewName) {
000010  b90d              CBNZ     r5,|L31.22|
;;;413        result = CUE_NO_TESTNAME;
000012  261f              MOVS     r6,#0x1f
000014  e00e              B        |L31.52|
                  |L31.22|
;;;414      }
;;;415      else {
;;;416        CU_FREE(pTest->pName);
000016  6820              LDR      r0,[r4,#0]
000018  f7fffffe          BL       free
;;;417        pTest->pName = (char *)CU_MALLOC(strlen(strNewName)+1);
00001c  4628              MOV      r0,r5
00001e  f7fffffe          BL       strlen
000022  1c47              ADDS     r7,r0,#1
000024  4638              MOV      r0,r7
000026  f7fffffe          BL       malloc
00002a  6020              STR      r0,[r4,#0]
;;;418        strcpy(pTest->pName, strNewName);
00002c  4629              MOV      r1,r5
00002e  6820              LDR      r0,[r4,#0]
000030  f7fffffe          BL       strcpy
                  |L31.52|
;;;419      }
;;;420    
;;;421      CU_set_error(result);
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       CU_set_error
;;;422      return result;
00003a  4630              MOV      r0,r6
;;;423    }
00003c  e8bd81f0          POP      {r4-r8,pc}
;;;424    
                          ENDP


                          AREA ||i.cleanup_suite||, CODE, READONLY, ALIGN=1

                  cleanup_suite PROC
;;;702     */
;;;703    static void cleanup_suite(CU_pSuite pSuite)
000000  b570              PUSH     {r4-r6,lr}
;;;704    {
000002  4604              MOV      r4,r0
;;;705      CU_pTest pCurTest = NULL;
000004  2500              MOVS     r5,#0
;;;706      CU_pTest pNextTest = NULL;
000006  2600              MOVS     r6,#0
;;;707    
;;;708      assert(NULL != pSuite);
;;;709    
;;;710      pCurTest = pSuite->pTest;
000008  68a5              LDR      r5,[r4,#8]
;;;711      while (NULL != pCurTest) {
00000a  e007              B        |L32.28|
                  |L32.12|
;;;712        pNextTest = pCurTest->pNext;
00000c  692e              LDR      r6,[r5,#0x10]
;;;713    
;;;714        cleanup_test(pCurTest);
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       cleanup_test
;;;715    
;;;716        CU_FREE(pCurTest);
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       free
;;;717        pCurTest = pNextTest;
00001a  4635              MOV      r5,r6
                  |L32.28|
00001c  2d00              CMP      r5,#0                 ;711
00001e  d1f5              BNE      |L32.12|
;;;718      }
;;;719      if (NULL != pSuite->pName) {
000020  6820              LDR      r0,[r4,#0]
000022  b110              CBZ      r0,|L32.42|
;;;720        CU_FREE(pSuite->pName);
000024  6820              LDR      r0,[r4,#0]
000026  f7fffffe          BL       free
                  |L32.42|
;;;721      }
;;;722    
;;;723      pSuite->pName = NULL;
00002a  2000              MOVS     r0,#0
00002c  6020              STR      r0,[r4,#0]
;;;724      pSuite->pTest = NULL;
00002e  60a0              STR      r0,[r4,#8]
;;;725      pSuite->uiNumberOfTests = 0;
000030  61e0              STR      r0,[r4,#0x1c]
;;;726    }
000032  bd70              POP      {r4-r6,pc}
;;;727    
                          ENDP


                          AREA ||i.cleanup_test||, CODE, READONLY, ALIGN=1

                  cleanup_test PROC
;;;819     */
;;;820    static void cleanup_test(CU_pTest pTest)
000000  b510              PUSH     {r4,lr}
;;;821    {
000002  4604              MOV      r4,r0
;;;822      assert(NULL != pTest);
;;;823    
;;;824      if (NULL != pTest->pName) {
000004  6820              LDR      r0,[r4,#0]
000006  b110              CBZ      r0,|L33.14|
;;;825        CU_FREE(pTest->pName);
000008  6820              LDR      r0,[r4,#0]
00000a  f7fffffe          BL       free
                  |L33.14|
;;;826      }
;;;827    
;;;828      pTest->pName = NULL;
00000e  2000              MOVS     r0,#0
000010  6020              STR      r0,[r4,#0]
;;;829    }
000012  bd10              POP      {r4,pc}
;;;830    
                          ENDP


                          AREA ||i.cleanup_test_registry||, CODE, READONLY, ALIGN=1

                  cleanup_test_registry PROC
;;;626     */
;;;627    static void cleanup_test_registry(CU_pTestRegistry pRegistry)
000000  b570              PUSH     {r4-r6,lr}
;;;628    {
000002  4604              MOV      r4,r0
;;;629      CU_pSuite pCurSuite = NULL;
000004  2500              MOVS     r5,#0
;;;630      CU_pSuite pNextSuite = NULL;
000006  2600              MOVS     r6,#0
;;;631    
;;;632      assert(NULL != pRegistry);
;;;633    
;;;634      pCurSuite = pRegistry->pSuite;
000008  68a5              LDR      r5,[r4,#8]
;;;635      while (NULL != pCurSuite) {
00000a  e007              B        |L34.28|
                  |L34.12|
;;;636        pNextSuite = pCurSuite->pNext;
00000c  6a2e              LDR      r6,[r5,#0x20]
;;;637        cleanup_suite(pCurSuite);
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       cleanup_suite
;;;638    
;;;639        CU_FREE(pCurSuite);
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       free
;;;640        pCurSuite = pNextSuite;
00001a  4635              MOV      r5,r6
                  |L34.28|
00001c  2d00              CMP      r5,#0                 ;635
00001e  d1f5              BNE      |L34.12|
;;;641      }
;;;642      pRegistry->pSuite = NULL;
000020  2000              MOVS     r0,#0
000022  60a0              STR      r0,[r4,#8]
;;;643      pRegistry->uiNumberOfSuites = 0;
000024  6020              STR      r0,[r4,#0]
;;;644      pRegistry->uiNumberOfTests = 0;
000026  6060              STR      r0,[r4,#4]
;;;645    }
000028  bd70              POP      {r4-r6,pc}
;;;646    
                          ENDP


                          AREA ||i.create_suite||, CODE, READONLY, ALIGN=1

                  create_suite PROC
;;;662     */
;;;663    static CU_pSuite create_suite(const char* strName, CU_InitializeFunc pInit, CU_CleanupFunc pClean, CU_SetUpFunc pSetup, CU_TearDownFunc pTear)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;664    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
00000c  f8dd9020          LDR      r9,[sp,#0x20]
;;;665      CU_pSuite pRetValue = (CU_pSuite)CU_MALLOC(sizeof(CU_Suite));
000010  2030              MOVS     r0,#0x30
000012  f7fffffe          BL       malloc
000016  4604              MOV      r4,r0
;;;666    
;;;667      assert(NULL != strName);
;;;668    
;;;669      if (NULL != pRetValue) {
000018  b304              CBZ      r4,|L35.92|
;;;670        pRetValue->pName = (char *)CU_MALLOC(strlen(strName)+1);
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       strlen
000020  f1000a01          ADD      r10,r0,#1
000024  4650              MOV      r0,r10
000026  f7fffffe          BL       malloc
00002a  6020              STR      r0,[r4,#0]
;;;671        if (NULL != pRetValue->pName) {
00002c  6820              LDR      r0,[r4,#0]
00002e  b188              CBZ      r0,|L35.84|
;;;672          strcpy(pRetValue->pName, strName);
000030  4629              MOV      r1,r5
000032  6820              LDR      r0,[r4,#0]
000034  f7fffffe          BL       strcpy
;;;673          pRetValue->fActive = CU_TRUE;
000038  2001              MOVS     r0,#1
00003a  6060              STR      r0,[r4,#4]
;;;674          pRetValue->pInitializeFunc = pInit;
00003c  60e6              STR      r6,[r4,#0xc]
;;;675          pRetValue->pCleanupFunc = pClean;
00003e  6127              STR      r7,[r4,#0x10]
;;;676          pRetValue->pSetUpFunc = pSetup;
000040  f8c48014          STR      r8,[r4,#0x14]
;;;677          pRetValue->pTearDownFunc = pTear;
000044  f8c49018          STR      r9,[r4,#0x18]
;;;678          pRetValue->pTest = NULL;
000048  2000              MOVS     r0,#0
00004a  60a0              STR      r0,[r4,#8]
;;;679          pRetValue->pNext = NULL;
00004c  6220              STR      r0,[r4,#0x20]
;;;680          pRetValue->pPrev = NULL;
00004e  6260              STR      r0,[r4,#0x24]
;;;681          pRetValue->uiNumberOfTests = 0;
000050  61e0              STR      r0,[r4,#0x1c]
000052  e003              B        |L35.92|
                  |L35.84|
;;;682        }
;;;683        else {
;;;684          CU_FREE(pRetValue);
000054  4620              MOV      r0,r4
000056  f7fffffe          BL       free
;;;685          pRetValue = NULL;
00005a  2400              MOVS     r4,#0
                  |L35.92|
;;;686        }
;;;687      }
;;;688    
;;;689      return pRetValue;
00005c  4620              MOV      r0,r4
;;;690    }
00005e  e8bd87f0          POP      {r4-r10,pc}
;;;691    
                          ENDP


                          AREA ||i.create_test||, CODE, READONLY, ALIGN=1

                  create_test PROC
;;;784     */
;;;785    static CU_pTest create_test(const char* strName, CU_TestFunc pTestFunc)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;786    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;787      CU_pTest pRetValue = (CU_pTest)CU_MALLOC(sizeof(CU_Test));
000008  2018              MOVS     r0,#0x18
00000a  f7fffffe          BL       malloc
00000e  4604              MOV      r4,r0
;;;788    
;;;789      assert(NULL != strName);
;;;790    
;;;791      if (NULL != pRetValue) {
000010  b1cc              CBZ      r4,|L36.70|
;;;792        pRetValue->pName = (char *)CU_MALLOC(strlen(strName)+1);
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       strlen
000018  1c47              ADDS     r7,r0,#1
00001a  4638              MOV      r0,r7
00001c  f7fffffe          BL       malloc
000020  6020              STR      r0,[r4,#0]
;;;793        if (NULL != pRetValue->pName) {
000022  6820              LDR      r0,[r4,#0]
000024  b158              CBZ      r0,|L36.62|
;;;794          strcpy(pRetValue->pName, strName);
000026  4629              MOV      r1,r5
000028  6820              LDR      r0,[r4,#0]
00002a  f7fffffe          BL       strcpy
;;;795          pRetValue->fActive = CU_TRUE;
00002e  2001              MOVS     r0,#1
000030  6060              STR      r0,[r4,#4]
;;;796          pRetValue->pTestFunc = pTestFunc;
000032  60a6              STR      r6,[r4,#8]
;;;797          pRetValue->pJumpBuf = NULL;
000034  2000              MOVS     r0,#0
000036  60e0              STR      r0,[r4,#0xc]
;;;798          pRetValue->pNext = NULL;
000038  6120              STR      r0,[r4,#0x10]
;;;799          pRetValue->pPrev = NULL;
00003a  6160              STR      r0,[r4,#0x14]
00003c  e003              B        |L36.70|
                  |L36.62|
;;;800        }
;;;801        else {
;;;802          CU_FREE(pRetValue);
00003e  4620              MOV      r0,r4
000040  f7fffffe          BL       free
;;;803          pRetValue = NULL;
000044  2400              MOVS     r4,#0
                  |L36.70|
;;;804        }
;;;805      }
;;;806    
;;;807      return pRetValue;
000046  4620              MOV      r0,r4
;;;808    }
000048  e8bd81f0          POP      {r4-r8,pc}
;;;809    
                          ENDP


                          AREA ||i.insert_suite||, CODE, READONLY, ALIGN=1

                  insert_suite PROC
;;;739     */
;;;740    static void insert_suite(CU_pTestRegistry pRegistry, CU_pSuite pSuite)
000000  2200              MOVS     r2,#0
;;;741    {
;;;742      CU_pSuite pCurSuite = NULL;
;;;743    
;;;744      assert(NULL != pRegistry);
;;;745      assert(NULL != pSuite);
;;;746    
;;;747      pCurSuite = pRegistry->pSuite;
000002  6882              LDR      r2,[r0,#8]
;;;748    
;;;749      assert(pCurSuite != pSuite);
;;;750    
;;;751      pSuite->pNext = NULL;
000004  2300              MOVS     r3,#0
000006  620b              STR      r3,[r1,#0x20]
;;;752      pRegistry->uiNumberOfSuites++;
000008  6803              LDR      r3,[r0,#0]
00000a  1c5b              ADDS     r3,r3,#1
00000c  6003              STR      r3,[r0,#0]
;;;753    
;;;754      /* if this is the 1st suite to be added... */
;;;755      if (NULL == pCurSuite) {
00000e  b91a              CBNZ     r2,|L37.24|
;;;756        pRegistry->pSuite = pSuite;
000010  6081              STR      r1,[r0,#8]
;;;757        pSuite->pPrev = NULL;
000012  2300              MOVS     r3,#0
000014  624b              STR      r3,[r1,#0x24]
000016  e007              B        |L37.40|
                  |L37.24|
;;;758      }
;;;759      /* otherwise, add it to the end of the linked list... */
;;;760      else {
;;;761        while (NULL != pCurSuite->pNext) {
000018  e001              B        |L37.30|
                  |L37.26|
;;;762          pCurSuite = pCurSuite->pNext;
00001a  6a12              LDR      r2,[r2,#0x20]
;;;763          assert(pCurSuite != pSuite);
00001c  bf00              NOP      
                  |L37.30|
00001e  6a13              LDR      r3,[r2,#0x20]         ;761
000020  2b00              CMP      r3,#0                 ;761
000022  d1fa              BNE      |L37.26|
;;;764        }
;;;765    
;;;766        pCurSuite->pNext = pSuite;
000024  6211              STR      r1,[r2,#0x20]
;;;767        pSuite->pPrev = pCurSuite;
000026  624a              STR      r2,[r1,#0x24]
                  |L37.40|
;;;768      }
;;;769    }
000028  4770              BX       lr
;;;770    
                          ENDP


                          AREA ||i.insert_test||, CODE, READONLY, ALIGN=1

                  insert_test PROC
;;;844     */
;;;845    static void insert_test(CU_pSuite pSuite, CU_pTest pTest)
000000  2200              MOVS     r2,#0
;;;846    {
;;;847      CU_pTest pCurTest = NULL;
;;;848    
;;;849      assert(NULL != pSuite);
;;;850      assert(NULL != pTest);
;;;851      assert(NULL == pTest->pNext);
;;;852      assert(NULL == pTest->pPrev);
;;;853    
;;;854      pCurTest = pSuite->pTest;
000002  6882              LDR      r2,[r0,#8]
;;;855    
;;;856      assert(pCurTest != pTest);
;;;857    
;;;858      pSuite->uiNumberOfTests++;
000004  69c3              LDR      r3,[r0,#0x1c]
000006  1c5b              ADDS     r3,r3,#1
000008  61c3              STR      r3,[r0,#0x1c]
;;;859      /* if this is the 1st suite to be added... */
;;;860      if (NULL == pCurTest) {
00000a  b91a              CBNZ     r2,|L38.20|
;;;861        pSuite->pTest = pTest;
00000c  6081              STR      r1,[r0,#8]
;;;862        pTest->pPrev = NULL;
00000e  2300              MOVS     r3,#0
000010  614b              STR      r3,[r1,#0x14]
000012  e007              B        |L38.36|
                  |L38.20|
;;;863      }
;;;864      else {
;;;865        while (NULL != pCurTest->pNext) {
000014  e001              B        |L38.26|
                  |L38.22|
;;;866          pCurTest = pCurTest->pNext;
000016  6912              LDR      r2,[r2,#0x10]
;;;867          assert(pCurTest != pTest);
000018  bf00              NOP      
                  |L38.26|
00001a  6913              LDR      r3,[r2,#0x10]         ;865
00001c  2b00              CMP      r3,#0                 ;865
00001e  d1fa              BNE      |L38.22|
;;;868        }
;;;869    
;;;870        pCurTest->pNext = pTest;
000020  6111              STR      r1,[r2,#0x10]
;;;871        pTest->pPrev = pCurTest;
000022  614a              STR      r2,[r1,#0x14]
                  |L38.36|
;;;872      }
;;;873    }
000024  4770              BX       lr
;;;874    
                          ENDP


                          AREA ||i.suite_exists||, CODE, READONLY, ALIGN=1

                  suite_exists PROC
;;;883     */
;;;884    static CU_BOOL suite_exists(CU_pTestRegistry pRegistry, const char* szSuiteName)
000000  b570              PUSH     {r4-r6,lr}
;;;885    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;886      CU_pSuite pSuite = NULL;
000006  2400              MOVS     r4,#0
;;;887    
;;;888      assert(NULL != pRegistry);
;;;889      assert(NULL != szSuiteName);
;;;890    
;;;891      pSuite = pRegistry->pSuite;
000008  68ac              LDR      r4,[r5,#8]
;;;892      while (NULL != pSuite) {
00000a  e009              B        |L39.32|
                  |L39.12|
;;;893        if ((NULL != pSuite->pName) && (0 == CU_compare_strings(szSuiteName, pSuite->pName))) {
00000c  6820              LDR      r0,[r4,#0]
00000e  b130              CBZ      r0,|L39.30|
000010  4630              MOV      r0,r6
000012  6821              LDR      r1,[r4,#0]
000014  f7fffffe          BL       CU_compare_strings
000018  b908              CBNZ     r0,|L39.30|
;;;894          return CU_TRUE;
00001a  2001              MOVS     r0,#1
                  |L39.28|
;;;895        }
;;;896        pSuite = pSuite->pNext;
;;;897      }
;;;898    
;;;899      return CU_FALSE;
;;;900    }
00001c  bd70              POP      {r4-r6,pc}
                  |L39.30|
00001e  6a24              LDR      r4,[r4,#0x20]         ;896
                  |L39.32|
000020  2c00              CMP      r4,#0                 ;892
000022  d1f3              BNE      |L39.12|
000024  2000              MOVS     r0,#0                 ;899
000026  e7f9              B        |L39.28|
;;;901    
                          ENDP


                          AREA ||i.test_exists||, CODE, READONLY, ALIGN=1

                  test_exists PROC
;;;910     */
;;;911    static CU_BOOL test_exists(CU_pSuite pSuite, const char* szTestName)
000000  b570              PUSH     {r4-r6,lr}
;;;912    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;913      CU_pTest pTest = NULL;
000006  2400              MOVS     r4,#0
;;;914    
;;;915      assert(NULL != pSuite);
;;;916      assert(NULL != szTestName);
;;;917    
;;;918      pTest = pSuite->pTest;
000008  68ac              LDR      r4,[r5,#8]
;;;919      while (NULL != pTest) {
00000a  e009              B        |L40.32|
                  |L40.12|
;;;920        if ((NULL != pTest->pName) && (0 == CU_compare_strings(szTestName, pTest->pName))) {
00000c  6820              LDR      r0,[r4,#0]
00000e  b130              CBZ      r0,|L40.30|
000010  4630              MOV      r0,r6
000012  6821              LDR      r1,[r4,#0]
000014  f7fffffe          BL       CU_compare_strings
000018  b908              CBNZ     r0,|L40.30|
;;;921          return CU_TRUE;
00001a  2001              MOVS     r0,#1
                  |L40.28|
;;;922        }
;;;923        pTest = pTest->pNext;
;;;924      }
;;;925    
;;;926      return CU_FALSE;
;;;927    }
00001c  bd70              POP      {r4-r6,pc}
                  |L40.30|
00001e  6924              LDR      r4,[r4,#0x10]         ;923
                  |L40.32|
000020  2c00              CMP      r4,#0                 ;919
000022  d1f3              BNE      |L40.12|
000024  2000              MOVS     r0,#0                 ;926
000026  e7f9              B        |L40.28|
;;;928    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  f_pTestRegistry
                          DCD      0x00000000
