; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\testrun.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\testrun.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\Middleware\blue_angel\inc -I..\..\Middleware\bt_callback_manager -I..\..\Middleware\blue_angel\btif -I..\..\Middleware\blue_angel\common -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\src\common -I..\..\Middleware\blue_angel\src\inc -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\platform\rtos -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\ut_manager\Cunit\Headers -I..\..\Middleware\ut_manager\Cunit\interface -I..\..\Middleware\blue_angel\platform\test -I..\..\Middleware\blue_angel\driver -I..\..\Middleware\blue_angel\src\core\hci -I..\..\User\bt\inc -I..\..\Middleware\bt_callback_manager -I..\..\Middleware\at_command -I..\..\Middleware\blue_angel\src\core\gap -I..\..\Middleware\blue_angel\src\core\l2cap -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=522 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DNDEBUG --omf_browse=.\flash\obj\testrun.crf ..\..\Middleware\ut_manager\Cunit\Sources\Framework\TestRun.c]
                          THUMB

                          AREA ||i.CU_assertImplementation||, CODE, READONLY, ALIGN=2

                  CU_assertImplementation PROC
;;;150     *=================================================================*/
;;;151    CU_BOOL CU_assertImplementation(CU_BOOL bValue,
000000  e92d47ff          PUSH     {r0-r10,lr}
;;;152                                    unsigned int uiLine,
;;;153                                    const char *strCondition,
;;;154                                    const char *strFile,
;;;155                                    const char *strFunction,
;;;156                                    CU_BOOL bFatal)
;;;157    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  e9dd980c          LDRD     r9,r8,[sp,#0x30]
;;;158      /* not used in current implementation - stop compiler warning */
;;;159      CU_UNREFERENCED_PARAMETER(strFunction);
;;;160    
;;;161      /* these should always be non-NULL (i.e. a test run is in progress) */
;;;162      assert(NULL != f_pCurSuite);
;;;163      assert(NULL != f_pCurTest);
;;;164    
;;;165      ++f_run_summary.nAsserts;
000010  4814              LDR      r0,|L1.100|
000012  6cc0              LDR      r0,[r0,#0x4c]  ; f_run_summary
000014  1c40              ADDS     r0,r0,#1
000016  4913              LDR      r1,|L1.100|
000018  64c8              STR      r0,[r1,#0x4c]  ; f_run_summary
;;;166      if (CU_FALSE == bValue) {
00001a  b9f4              CBNZ     r4,|L1.90|
;;;167        ++f_run_summary.nAssertsFailed;
00001c  4608              MOV      r0,r1
00001e  6d00              LDR      r0,[r0,#0x50]  ; f_run_summary
000020  1c40              ADDS     r0,r0,#1
000022  6508              STR      r0,[r1,#0x50]  ; f_run_summary
;;;168        add_failure(&f_failure_list, &f_run_summary, CUF_AssertFailed,
000024  4810              LDR      r0,|L1.104|
000026  6800              LDR      r0,[r0,#0]  ; f_pCurTest
000028  4910              LDR      r1,|L1.108|
00002a  6809              LDR      r1,[r1,#0]  ; f_pCurSuite
00002c  462b              MOV      r3,r5
00002e  2205              MOVS     r2,#5
000030  e9cd6700          STRD     r6,r7,[sp,#0]
000034  e9cd1002          STRD     r1,r0,[sp,#8]
000038  490a              LDR      r1,|L1.100|
00003a  480d              LDR      r0,|L1.112|
00003c  f7fffffe          BL       add_failure
;;;169                    uiLine, strCondition, strFile, f_pCurSuite, f_pCurTest);
;;;170    
;;;171        if ((CU_TRUE == bFatal) && (NULL != f_pCurTest->pJumpBuf)) {
000040  f1b80f01          CMP      r8,#1
000044  d109              BNE      |L1.90|
000046  4808              LDR      r0,|L1.104|
000048  6800              LDR      r0,[r0,#0]  ; f_pCurTest
00004a  68c0              LDR      r0,[r0,#0xc]
00004c  b128              CBZ      r0,|L1.90|
;;;172          longjmp(*(f_pCurTest->pJumpBuf), 1);
00004e  4906              LDR      r1,|L1.104|
000050  6809              LDR      r1,[r1,#0]  ; f_pCurTest
000052  68c8              LDR      r0,[r1,#0xc]
000054  2101              MOVS     r1,#1
000056  f7fffffe          BL       longjmp
                  |L1.90|
;;;173        }
;;;174      }
;;;175    
;;;176      return bValue;
00005a  4620              MOV      r0,r4
;;;177    }
00005c  b004              ADD      sp,sp,#0x10
00005e  e8bd87f0          POP      {r4-r10,pc}
;;;178    
                          ENDP

000062  0000              DCW      0x0000
                  |L1.100|
                          DCD      f_run_summary
                  |L1.104|
                          DCD      f_pCurTest
                  |L1.108|
                          DCD      f_pCurSuite
                  |L1.112|
                          DCD      f_failure_list

                          AREA ||i.CU_clear_previous_results||, CODE, READONLY, ALIGN=2

                  CU_clear_previous_results PROC
;;;510    /*------------------------------------------------------------------------*/
;;;511    void CU_clear_previous_results(void)
000000  b510              PUSH     {r4,lr}
;;;512    {
;;;513      clear_previous_results(&f_run_summary, &f_failure_list);
000002  4902              LDR      r1,|L2.12|
000004  4802              LDR      r0,|L2.16|
000006  f7fffffe          BL       clear_previous_results
;;;514    }
00000a  bd10              POP      {r4,pc}
;;;515    
                          ENDP

                  |L2.12|
                          DCD      f_failure_list
                  |L2.16|
                          DCD      f_run_summary

                          AREA ||i.CU_get_all_test_complete_handler||, CODE, READONLY, ALIGN=2

                  CU_get_all_test_complete_handler PROC
;;;245    /*------------------------------------------------------------------------*/
;;;246    CU_AllTestsCompleteMessageHandler CU_get_all_test_complete_handler(void)
000000  4801              LDR      r0,|L3.8|
;;;247    {
;;;248      return f_pAllTestsCompleteMessageHandler;
000002  6800              LDR      r0,[r0,#0]  ; f_pAllTestsCompleteMessageHandler
;;;249    }
000004  4770              BX       lr
;;;250    
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      f_pAllTestsCompleteMessageHandler

                          AREA ||i.CU_get_current_suite||, CODE, READONLY, ALIGN=2

                  CU_get_current_suite PROC
;;;516    /*------------------------------------------------------------------------*/
;;;517    CU_pSuite CU_get_current_suite(void)
000000  4801              LDR      r0,|L4.8|
;;;518    {
;;;519      return f_pCurSuite;
000002  6800              LDR      r0,[r0,#0]  ; f_pCurSuite
;;;520    }
000004  4770              BX       lr
;;;521    
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      f_pCurSuite

                          AREA ||i.CU_get_current_test||, CODE, READONLY, ALIGN=2

                  CU_get_current_test PROC
;;;522    /*------------------------------------------------------------------------*/
;;;523    CU_pTest CU_get_current_test(void)
000000  4801              LDR      r0,|L5.8|
;;;524    {
;;;525      return f_pCurTest;
000002  6800              LDR      r0,[r0,#0]  ; f_pCurTest
;;;526    }
000004  4770              BX       lr
;;;527    
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      f_pCurTest

                          AREA ||i.CU_get_elapsed_time||, CODE, READONLY, ALIGN=2

                  CU_get_elapsed_time PROC
;;;323    /*------------------------------------------------------------------------*/
;;;324    double CU_get_elapsed_time(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;325    {
;;;326      if (CU_TRUE == f_bTestIsRunning) {
000004  480f              LDR      r0,|L6.68|
000006  6800              LDR      r0,[r0,#0]  ; f_bTestIsRunning
000008  2801              CMP      r0,#1
00000a  d116              BNE      |L6.58|
;;;327        return ((double)clock() - (double)f_start_time)/(double)CLOCKS_PER_SEC;
00000c  480e              LDR      r0,|L6.72|
00000e  6800              LDR      r0,[r0,#0]  ; f_start_time
000010  f7fffffe          BL       __aeabi_ui2d
000014  4604              MOV      r4,r0
000016  460d              MOV      r5,r1
000018  f7fffffe          BL       clock
00001c  4682              MOV      r10,r0
00001e  f7fffffe          BL       __aeabi_ui2d
000022  4606              MOV      r6,r0
000024  4622              MOV      r2,r4
000026  462b              MOV      r3,r5
000028  f7fffffe          BL       __aeabi_dsub
00002c  4680              MOV      r8,r0
00002e  2200              MOVS     r2,#0
000030  4b06              LDR      r3,|L6.76|
000032  f7fffffe          BL       __aeabi_ddiv
                  |L6.54|
;;;328      }
;;;329      else {
;;;330        return f_run_summary.ElapsedTime;
;;;331      }
;;;332    }
000036  e8bd87f0          POP      {r4-r10,pc}
                  |L6.58|
00003a  4905              LDR      r1,|L6.80|
00003c  e9d10116          LDRD     r0,r1,[r1,#0x58]      ;330
000040  e7f9              B        |L6.54|
;;;333    
                          ENDP

000042  0000              DCW      0x0000
                  |L6.68|
                          DCD      f_bTestIsRunning
                  |L6.72|
                          DCD      f_start_time
                  |L6.76|
                          DCD      0x408f4000
                  |L6.80|
                          DCD      f_run_summary

                          AREA ||i.CU_get_fail_on_inactive||, CODE, READONLY, ALIGN=2

                  CU_get_fail_on_inactive PROC
;;;540    /*------------------------------------------------------------------------*/
;;;541    CU_EXPORT CU_BOOL CU_get_fail_on_inactive(void)
000000  4801              LDR      r0,|L7.8|
;;;542    {
;;;543      return f_failure_on_inactive;
000002  6800              LDR      r0,[r0,#0]  ; f_failure_on_inactive
;;;544    }
000004  4770              BX       lr
;;;545    
                          ENDP

000006  0000              DCW      0x0000
                  |L7.8|
                          DCD      f_failure_on_inactive

                          AREA ||i.CU_get_failure_list||, CODE, READONLY, ALIGN=2

                  CU_get_failure_list PROC
;;;334    /*------------------------------------------------------------------------*/
;;;335    CU_pFailureRecord CU_get_failure_list(void)
000000  4801              LDR      r0,|L8.8|
;;;336    {
;;;337      return f_failure_list;
000002  6800              LDR      r0,[r0,#0]  ; f_failure_list
;;;338    }
000004  4770              BX       lr
;;;339    
                          ENDP

000006  0000              DCW      0x0000
                  |L8.8|
                          DCD      f_failure_list

                          AREA ||i.CU_get_number_of_asserts||, CODE, READONLY, ALIGN=2

                  CU_get_number_of_asserts PROC
;;;299    /*------------------------------------------------------------------------*/
;;;300    unsigned int CU_get_number_of_asserts(void)
000000  4801              LDR      r0,|L9.8|
;;;301    {
;;;302      return f_run_summary.nAsserts;
000002  6cc0              LDR      r0,[r0,#0x4c]  ; f_run_summary
;;;303    }
000004  4770              BX       lr
;;;304    
                          ENDP

000006  0000              DCW      0x0000
                  |L9.8|
                          DCD      f_run_summary

                          AREA ||i.CU_get_number_of_failure_records||, CODE, READONLY, ALIGN=2

                  CU_get_number_of_failure_records PROC
;;;317    /*------------------------------------------------------------------------*/
;;;318    unsigned int CU_get_number_of_failure_records(void)
000000  4801              LDR      r0,|L10.8|
;;;319    {
;;;320      return f_run_summary.nFailureRecords;
000002  6d40              LDR      r0,[r0,#0x54]  ; f_run_summary
;;;321    }
000004  4770              BX       lr
;;;322    
                          ENDP

000006  0000              DCW      0x0000
                  |L10.8|
                          DCD      f_run_summary

                          AREA ||i.CU_get_number_of_failures||, CODE, READONLY, ALIGN=2

                  CU_get_number_of_failures PROC
;;;311    /*------------------------------------------------------------------------*/
;;;312    unsigned int CU_get_number_of_failures(void)
000000  4801              LDR      r0,|L11.8|
;;;313    {
;;;314      return f_run_summary.nAssertsFailed;
000002  6d00              LDR      r0,[r0,#0x50]  ; f_run_summary
;;;315    }
000004  4770              BX       lr
;;;316    
                          ENDP

000006  0000              DCW      0x0000
                  |L11.8|
                          DCD      f_run_summary

                          AREA ||i.CU_get_number_of_successes||, CODE, READONLY, ALIGN=2

                  CU_get_number_of_successes PROC
;;;305    /*------------------------------------------------------------------------*/
;;;306    unsigned int CU_get_number_of_successes(void)
000000  4802              LDR      r0,|L12.12|
;;;307    {
;;;308      return (f_run_summary.nAsserts - f_run_summary.nAssertsFailed);
000002  6cc0              LDR      r0,[r0,#0x4c]  ; f_run_summary
000004  4901              LDR      r1,|L12.12|
000006  6d09              LDR      r1,[r1,#0x50]  ; f_run_summary
000008  1a40              SUBS     r0,r0,r1
;;;309    }
00000a  4770              BX       lr
;;;310    
                          ENDP

                  |L12.12|
                          DCD      f_run_summary

                          AREA ||i.CU_get_number_of_suites_failed||, CODE, READONLY, ALIGN=2

                  CU_get_number_of_suites_failed PROC
;;;269    /*------------------------------------------------------------------------*/
;;;270    unsigned int CU_get_number_of_suites_failed(void)
000000  4801              LDR      r0,|L13.8|
;;;271    {
;;;272      return f_run_summary.nSuitesFailed;
000002  6b80              LDR      r0,[r0,#0x38]  ; f_run_summary
;;;273    }
000004  4770              BX       lr
;;;274    
                          ENDP

000006  0000              DCW      0x0000
                  |L13.8|
                          DCD      f_run_summary

                          AREA ||i.CU_get_number_of_suites_inactive||, CODE, READONLY, ALIGN=2

                  CU_get_number_of_suites_inactive PROC
;;;275    /*------------------------------------------------------------------------*/
;;;276    unsigned int CU_get_number_of_suites_inactive(void)
000000  4801              LDR      r0,|L14.8|
;;;277    {
;;;278      return f_run_summary.nSuitesInactive;
000002  6bc0              LDR      r0,[r0,#0x3c]  ; f_run_summary
;;;279    }
000004  4770              BX       lr
;;;280    
                          ENDP

000006  0000              DCW      0x0000
                  |L14.8|
                          DCD      f_run_summary

                          AREA ||i.CU_get_number_of_suites_run||, CODE, READONLY, ALIGN=2

                  CU_get_number_of_suites_run PROC
;;;263    /*------------------------------------------------------------------------*/
;;;264    unsigned int CU_get_number_of_suites_run(void)
000000  4801              LDR      r0,|L15.8|
;;;265    {
;;;266      return f_run_summary.nSuitesRun;
000002  6b40              LDR      r0,[r0,#0x34]  ; f_run_summary
;;;267    }
000004  4770              BX       lr
;;;268    
                          ENDP

000006  0000              DCW      0x0000
                  |L15.8|
                          DCD      f_run_summary

                          AREA ||i.CU_get_number_of_tests_failed||, CODE, READONLY, ALIGN=2

                  CU_get_number_of_tests_failed PROC
;;;287    /*------------------------------------------------------------------------*/
;;;288    unsigned int CU_get_number_of_tests_failed(void)
000000  4801              LDR      r0,|L16.8|
;;;289    {
;;;290      return f_run_summary.nTestsFailed;
000002  6c40              LDR      r0,[r0,#0x44]  ; f_run_summary
;;;291    }
000004  4770              BX       lr
;;;292    
                          ENDP

000006  0000              DCW      0x0000
                  |L16.8|
                          DCD      f_run_summary

                          AREA ||i.CU_get_number_of_tests_inactive||, CODE, READONLY, ALIGN=2

                  CU_get_number_of_tests_inactive PROC
;;;293    /*------------------------------------------------------------------------*/
;;;294    unsigned int CU_get_number_of_tests_inactive(void)
000000  4801              LDR      r0,|L17.8|
;;;295    {
;;;296      return f_run_summary.nTestsInactive;
000002  6c80              LDR      r0,[r0,#0x48]  ; f_run_summary
;;;297    }
000004  4770              BX       lr
;;;298    
                          ENDP

000006  0000              DCW      0x0000
                  |L17.8|
                          DCD      f_run_summary

                          AREA ||i.CU_get_number_of_tests_run||, CODE, READONLY, ALIGN=2

                  CU_get_number_of_tests_run PROC
;;;281    /*------------------------------------------------------------------------*/
;;;282    unsigned int CU_get_number_of_tests_run(void)
000000  4801              LDR      r0,|L18.8|
;;;283    {
;;;284      return f_run_summary.nTestsRun;
000002  6c00              LDR      r0,[r0,#0x40]  ; f_run_summary
;;;285    }
000004  4770              BX       lr
;;;286    
                          ENDP

000006  0000              DCW      0x0000
                  |L18.8|
                          DCD      f_run_summary

                          AREA ||i.CU_get_run_results_string||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_u
                          REQUIRE _printf_f
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_str
                  CU_get_run_results_string PROC
;;;570    /*------------------------------------------------------------------------*/
;;;571    CU_EXPORT char * CU_get_run_results_string(void)
000000  b530              PUSH     {r4,r5,lr}
;;;572    
;;;573    {
000002  b0cf              SUB      sp,sp,#0x13c
;;;574      CU_pRunSummary pRunSummary = &f_run_summary;
000004  48f7              LDR      r0,|L19.996|
000006  904e              STR      r0,[sp,#0x138]
;;;575      CU_pTestRegistry pRegistry = CU_get_registry();
000008  f7fffffe          BL       CU_get_registry
00000c  904d              STR      r0,[sp,#0x134]
;;;576      size_t width[9];
;;;577      size_t len;
;;;578      char *result;
;;;579    
;;;580      assert(NULL != pRunSummary);
;;;581      assert(NULL != pRegistry);
;;;582    
;;;583      width[0] = strlen(_("Run Summary:"));
00000e  200c              MOVS     r0,#0xc
000010  9044              STR      r0,[sp,#0x110]
;;;584      width[1] = CU_MAX(6,
000012  2005              MOVS     r0,#5
000014  2807              CMP      r0,#7
000016  d300              BCC      |L19.26|
000018  e000              B        |L19.28|
                  |L19.26|
00001a  2007              MOVS     r0,#7
                  |L19.28|
00001c  2806              CMP      r0,#6
00001e  d801              BHI      |L19.36|
000020  2006              MOVS     r0,#6
000022  e004              B        |L19.46|
                  |L19.36|
000024  2005              MOVS     r0,#5
000026  2807              CMP      r0,#7
000028  d300              BCC      |L19.44|
00002a  e000              B        |L19.46|
                  |L19.44|
00002c  2007              MOVS     r0,#7
                  |L19.46|
00002e  2804              CMP      r0,#4
000030  d801              BHI      |L19.54|
000032  2004              MOVS     r0,#4
000034  e00d              B        |L19.82|
                  |L19.54|
000036  2005              MOVS     r0,#5
000038  2807              CMP      r0,#7
00003a  d300              BCC      |L19.62|
00003c  e000              B        |L19.64|
                  |L19.62|
00003e  2007              MOVS     r0,#7
                  |L19.64|
000040  2806              CMP      r0,#6
000042  d801              BHI      |L19.72|
000044  2006              MOVS     r0,#6
000046  e004              B        |L19.82|
                  |L19.72|
000048  2005              MOVS     r0,#5
00004a  2807              CMP      r0,#7
00004c  d300              BCC      |L19.80|
00004e  e000              B        |L19.82|
                  |L19.80|
000050  2007              MOVS     r0,#7
                  |L19.82|
000052  2806              CMP      r0,#6
000054  d801              BHI      |L19.90|
000056  2006              MOVS     r0,#6
000058  e01f              B        |L19.154|
                  |L19.90|
00005a  2005              MOVS     r0,#5
00005c  2807              CMP      r0,#7
00005e  d300              BCC      |L19.98|
000060  e000              B        |L19.100|
                  |L19.98|
000062  2007              MOVS     r0,#7
                  |L19.100|
000064  2806              CMP      r0,#6
000066  d801              BHI      |L19.108|
000068  2006              MOVS     r0,#6
00006a  e004              B        |L19.118|
                  |L19.108|
00006c  2005              MOVS     r0,#5
00006e  2807              CMP      r0,#7
000070  d300              BCC      |L19.116|
000072  e000              B        |L19.118|
                  |L19.116|
000074  2007              MOVS     r0,#7
                  |L19.118|
000076  2804              CMP      r0,#4
000078  d801              BHI      |L19.126|
00007a  2004              MOVS     r0,#4
00007c  e00d              B        |L19.154|
                  |L19.126|
00007e  2005              MOVS     r0,#5
000080  2807              CMP      r0,#7
000082  d300              BCC      |L19.134|
000084  e000              B        |L19.136|
                  |L19.134|
000086  2007              MOVS     r0,#7
                  |L19.136|
000088  2806              CMP      r0,#6
00008a  d801              BHI      |L19.144|
00008c  2006              MOVS     r0,#6
00008e  e004              B        |L19.154|
                  |L19.144|
000090  2005              MOVS     r0,#5
000092  2807              CMP      r0,#7
000094  d300              BCC      |L19.152|
000096  e000              B        |L19.154|
                  |L19.152|
000098  2007              MOVS     r0,#7
                  |L19.154|
00009a  1c40              ADDS     r0,r0,#1
00009c  9045              STR      r0,[sp,#0x114]
;;;585                        CU_MAX(strlen(_("Type")),
;;;586                               CU_MAX(strlen(_("suites")),
;;;587                                      CU_MAX(strlen(_("tests")),
;;;588                                             strlen(_("asserts")))))) + 1;
;;;589      width[2] = CU_MAX(6,
00009e  984d              LDR      r0,[sp,#0x134]
0000a0  6800              LDR      r0,[r0,#0]
0000a2  9041              STR      r0,[sp,#0x104]
0000a4  f7fffffe          BL       CU_number_width
0000a8  4604              MOV      r4,r0
0000aa  984d              LDR      r0,[sp,#0x134]
0000ac  6840              LDR      r0,[r0,#4]
0000ae  9041              STR      r0,[sp,#0x104]
0000b0  f7fffffe          BL       CU_number_width
0000b4  4605              MOV      r5,r0
0000b6  984e              LDR      r0,[sp,#0x138]
0000b8  6cc0              LDR      r0,[r0,#0x4c]
0000ba  9041              STR      r0,[sp,#0x104]
0000bc  f7fffffe          BL       CU_number_width
0000c0  4285              CMP      r5,r0
0000c2  d305              BCC      |L19.208|
0000c4  984d              LDR      r0,[sp,#0x134]
0000c6  6840              LDR      r0,[r0,#4]
0000c8  9041              STR      r0,[sp,#0x104]
0000ca  f7fffffe          BL       CU_number_width
0000ce  e004              B        |L19.218|
                  |L19.208|
0000d0  984e              LDR      r0,[sp,#0x138]
0000d2  6cc0              LDR      r0,[r0,#0x4c]
0000d4  9041              STR      r0,[sp,#0x104]
0000d6  f7fffffe          BL       CU_number_width
                  |L19.218|
0000da  4284              CMP      r4,r0
0000dc  d305              BCC      |L19.234|
0000de  984d              LDR      r0,[sp,#0x134]
0000e0  6800              LDR      r0,[r0,#0]
0000e2  9041              STR      r0,[sp,#0x104]
0000e4  f7fffffe          BL       CU_number_width
0000e8  e017              B        |L19.282|
                  |L19.234|
0000ea  984d              LDR      r0,[sp,#0x134]
0000ec  6840              LDR      r0,[r0,#4]
0000ee  9041              STR      r0,[sp,#0x104]
0000f0  f7fffffe          BL       CU_number_width
0000f4  4604              MOV      r4,r0
0000f6  984e              LDR      r0,[sp,#0x138]
0000f8  6cc0              LDR      r0,[r0,#0x4c]
0000fa  9041              STR      r0,[sp,#0x104]
0000fc  f7fffffe          BL       CU_number_width
000100  4284              CMP      r4,r0
000102  d305              BCC      |L19.272|
000104  984d              LDR      r0,[sp,#0x134]
000106  6840              LDR      r0,[r0,#4]
000108  9041              STR      r0,[sp,#0x104]
00010a  f7fffffe          BL       CU_number_width
00010e  e004              B        |L19.282|
                  |L19.272|
000110  984e              LDR      r0,[sp,#0x138]
000112  6cc0              LDR      r0,[r0,#0x4c]
000114  9041              STR      r0,[sp,#0x104]
000116  f7fffffe          BL       CU_number_width
                  |L19.282|
00011a  2805              CMP      r0,#5
00011c  d801              BHI      |L19.290|
00011e  2005              MOVS     r0,#5
000120  e03d              B        |L19.414|
                  |L19.290|
000122  984d              LDR      r0,[sp,#0x134]
000124  6800              LDR      r0,[r0,#0]
000126  9041              STR      r0,[sp,#0x104]
000128  f7fffffe          BL       CU_number_width
00012c  4604              MOV      r4,r0
00012e  984d              LDR      r0,[sp,#0x134]
000130  6840              LDR      r0,[r0,#4]
000132  9041              STR      r0,[sp,#0x104]
000134  f7fffffe          BL       CU_number_width
000138  4605              MOV      r5,r0
00013a  984e              LDR      r0,[sp,#0x138]
00013c  6cc0              LDR      r0,[r0,#0x4c]
00013e  9041              STR      r0,[sp,#0x104]
000140  f7fffffe          BL       CU_number_width
000144  4285              CMP      r5,r0
000146  d305              BCC      |L19.340|
000148  984d              LDR      r0,[sp,#0x134]
00014a  6840              LDR      r0,[r0,#4]
00014c  9041              STR      r0,[sp,#0x104]
00014e  f7fffffe          BL       CU_number_width
000152  e004              B        |L19.350|
                  |L19.340|
000154  984e              LDR      r0,[sp,#0x138]
000156  6cc0              LDR      r0,[r0,#0x4c]
000158  9041              STR      r0,[sp,#0x104]
00015a  f7fffffe          BL       CU_number_width
                  |L19.350|
00015e  4284              CMP      r4,r0
000160  d305              BCC      |L19.366|
000162  984d              LDR      r0,[sp,#0x134]
000164  6800              LDR      r0,[r0,#0]
000166  9041              STR      r0,[sp,#0x104]
000168  f7fffffe          BL       CU_number_width
00016c  e017              B        |L19.414|
                  |L19.366|
00016e  984d              LDR      r0,[sp,#0x134]
000170  6840              LDR      r0,[r0,#4]
000172  9041              STR      r0,[sp,#0x104]
000174  f7fffffe          BL       CU_number_width
000178  4604              MOV      r4,r0
00017a  984e              LDR      r0,[sp,#0x138]
00017c  6cc0              LDR      r0,[r0,#0x4c]
00017e  9041              STR      r0,[sp,#0x104]
000180  f7fffffe          BL       CU_number_width
000184  4284              CMP      r4,r0
000186  d305              BCC      |L19.404|
000188  984d              LDR      r0,[sp,#0x134]
00018a  6840              LDR      r0,[r0,#4]
00018c  9041              STR      r0,[sp,#0x104]
00018e  f7fffffe          BL       CU_number_width
000192  e004              B        |L19.414|
                  |L19.404|
000194  984e              LDR      r0,[sp,#0x138]
000196  6cc0              LDR      r0,[r0,#0x4c]
000198  9041              STR      r0,[sp,#0x104]
00019a  f7fffffe          BL       CU_number_width
                  |L19.414|
00019e  2806              CMP      r0,#6
0001a0  d801              BHI      |L19.422|
0001a2  2006              MOVS     r0,#6
0001a4  e07f              B        |L19.678|
                  |L19.422|
0001a6  984d              LDR      r0,[sp,#0x134]
0001a8  6800              LDR      r0,[r0,#0]
0001aa  9041              STR      r0,[sp,#0x104]
0001ac  f7fffffe          BL       CU_number_width
0001b0  4604              MOV      r4,r0
0001b2  984d              LDR      r0,[sp,#0x134]
0001b4  6840              LDR      r0,[r0,#4]
0001b6  9041              STR      r0,[sp,#0x104]
0001b8  f7fffffe          BL       CU_number_width
0001bc  4605              MOV      r5,r0
0001be  984e              LDR      r0,[sp,#0x138]
0001c0  6cc0              LDR      r0,[r0,#0x4c]
0001c2  9041              STR      r0,[sp,#0x104]
0001c4  f7fffffe          BL       CU_number_width
0001c8  4285              CMP      r5,r0
0001ca  d305              BCC      |L19.472|
0001cc  984d              LDR      r0,[sp,#0x134]
0001ce  6840              LDR      r0,[r0,#4]
0001d0  9041              STR      r0,[sp,#0x104]
0001d2  f7fffffe          BL       CU_number_width
0001d6  e004              B        |L19.482|
                  |L19.472|
0001d8  984e              LDR      r0,[sp,#0x138]
0001da  6cc0              LDR      r0,[r0,#0x4c]
0001dc  9041              STR      r0,[sp,#0x104]
0001de  f7fffffe          BL       CU_number_width
                  |L19.482|
0001e2  4284              CMP      r4,r0
0001e4  d305              BCC      |L19.498|
0001e6  984d              LDR      r0,[sp,#0x134]
0001e8  6800              LDR      r0,[r0,#0]
0001ea  9041              STR      r0,[sp,#0x104]
0001ec  f7fffffe          BL       CU_number_width
0001f0  e017              B        |L19.546|
                  |L19.498|
0001f2  984d              LDR      r0,[sp,#0x134]
0001f4  6840              LDR      r0,[r0,#4]
0001f6  9041              STR      r0,[sp,#0x104]
0001f8  f7fffffe          BL       CU_number_width
0001fc  4604              MOV      r4,r0
0001fe  984e              LDR      r0,[sp,#0x138]
000200  6cc0              LDR      r0,[r0,#0x4c]
000202  9041              STR      r0,[sp,#0x104]
000204  f7fffffe          BL       CU_number_width
000208  4284              CMP      r4,r0
00020a  d305              BCC      |L19.536|
00020c  984d              LDR      r0,[sp,#0x134]
00020e  6840              LDR      r0,[r0,#4]
000210  9041              STR      r0,[sp,#0x104]
000212  f7fffffe          BL       CU_number_width
000216  e004              B        |L19.546|
                  |L19.536|
000218  984e              LDR      r0,[sp,#0x138]
00021a  6cc0              LDR      r0,[r0,#0x4c]
00021c  9041              STR      r0,[sp,#0x104]
00021e  f7fffffe          BL       CU_number_width
                  |L19.546|
000222  2805              CMP      r0,#5
000224  d801              BHI      |L19.554|
000226  2005              MOVS     r0,#5
000228  e03d              B        |L19.678|
                  |L19.554|
00022a  984d              LDR      r0,[sp,#0x134]
00022c  6800              LDR      r0,[r0,#0]
00022e  9041              STR      r0,[sp,#0x104]
000230  f7fffffe          BL       CU_number_width
000234  4604              MOV      r4,r0
000236  984d              LDR      r0,[sp,#0x134]
000238  6840              LDR      r0,[r0,#4]
00023a  9041              STR      r0,[sp,#0x104]
00023c  f7fffffe          BL       CU_number_width
000240  4605              MOV      r5,r0
000242  984e              LDR      r0,[sp,#0x138]
000244  6cc0              LDR      r0,[r0,#0x4c]
000246  9041              STR      r0,[sp,#0x104]
000248  f7fffffe          BL       CU_number_width
00024c  4285              CMP      r5,r0
00024e  d305              BCC      |L19.604|
000250  984d              LDR      r0,[sp,#0x134]
000252  6840              LDR      r0,[r0,#4]
000254  9041              STR      r0,[sp,#0x104]
000256  f7fffffe          BL       CU_number_width
00025a  e004              B        |L19.614|
                  |L19.604|
00025c  984e              LDR      r0,[sp,#0x138]
00025e  6cc0              LDR      r0,[r0,#0x4c]
000260  9041              STR      r0,[sp,#0x104]
000262  f7fffffe          BL       CU_number_width
                  |L19.614|
000266  4284              CMP      r4,r0
000268  d305              BCC      |L19.630|
00026a  984d              LDR      r0,[sp,#0x134]
00026c  6800              LDR      r0,[r0,#0]
00026e  9041              STR      r0,[sp,#0x104]
000270  f7fffffe          BL       CU_number_width
000274  e017              B        |L19.678|
                  |L19.630|
000276  984d              LDR      r0,[sp,#0x134]
000278  6840              LDR      r0,[r0,#4]
00027a  9041              STR      r0,[sp,#0x104]
00027c  f7fffffe          BL       CU_number_width
000280  4604              MOV      r4,r0
000282  984e              LDR      r0,[sp,#0x138]
000284  6cc0              LDR      r0,[r0,#0x4c]
000286  9041              STR      r0,[sp,#0x104]
000288  f7fffffe          BL       CU_number_width
00028c  4284              CMP      r4,r0
00028e  d305              BCC      |L19.668|
000290  984d              LDR      r0,[sp,#0x134]
000292  6840              LDR      r0,[r0,#4]
000294  9041              STR      r0,[sp,#0x104]
000296  f7fffffe          BL       CU_number_width
00029a  e004              B        |L19.678|
                  |L19.668|
00029c  984e              LDR      r0,[sp,#0x138]
00029e  6cc0              LDR      r0,[r0,#0x4c]
0002a0  9041              STR      r0,[sp,#0x104]
0002a2  f7fffffe          BL       CU_number_width
                  |L19.678|
0002a6  1c40              ADDS     r0,r0,#1
0002a8  9046              STR      r0,[sp,#0x118]
;;;590                        CU_MAX(strlen(_("Total")),
;;;591                               CU_MAX(CU_number_width(pRegistry->uiNumberOfSuites),
;;;592                                      CU_MAX(CU_number_width(pRegistry->uiNumberOfTests),
;;;593                                             CU_number_width(pRunSummary->nAsserts))))) + 1;
;;;594      width[3] = CU_MAX(6,
0002aa  984e              LDR      r0,[sp,#0x138]
0002ac  6b40              LDR      r0,[r0,#0x34]
0002ae  9041              STR      r0,[sp,#0x104]
0002b0  f7fffffe          BL       CU_number_width
0002b4  4604              MOV      r4,r0
0002b6  984e              LDR      r0,[sp,#0x138]
0002b8  6c00              LDR      r0,[r0,#0x40]
0002ba  9041              STR      r0,[sp,#0x104]
0002bc  f7fffffe          BL       CU_number_width
0002c0  4605              MOV      r5,r0
0002c2  984e              LDR      r0,[sp,#0x138]
0002c4  6cc0              LDR      r0,[r0,#0x4c]
0002c6  9041              STR      r0,[sp,#0x104]
0002c8  f7fffffe          BL       CU_number_width
0002cc  4285              CMP      r5,r0
0002ce  d305              BCC      |L19.732|
0002d0  984e              LDR      r0,[sp,#0x138]
0002d2  6c00              LDR      r0,[r0,#0x40]
0002d4  9041              STR      r0,[sp,#0x104]
0002d6  f7fffffe          BL       CU_number_width
0002da  e004              B        |L19.742|
                  |L19.732|
0002dc  984e              LDR      r0,[sp,#0x138]
0002de  6cc0              LDR      r0,[r0,#0x4c]
0002e0  9041              STR      r0,[sp,#0x104]
0002e2  f7fffffe          BL       CU_number_width
                  |L19.742|
0002e6  4284              CMP      r4,r0
0002e8  d305              BCC      |L19.758|
0002ea  984e              LDR      r0,[sp,#0x138]
0002ec  6b40              LDR      r0,[r0,#0x34]
0002ee  9041              STR      r0,[sp,#0x104]
0002f0  f7fffffe          BL       CU_number_width
0002f4  e017              B        |L19.806|
                  |L19.758|
0002f6  984e              LDR      r0,[sp,#0x138]
0002f8  6c00              LDR      r0,[r0,#0x40]
0002fa  9041              STR      r0,[sp,#0x104]
0002fc  f7fffffe          BL       CU_number_width
000300  4604              MOV      r4,r0
000302  984e              LDR      r0,[sp,#0x138]
000304  6cc0              LDR      r0,[r0,#0x4c]
000306  9041              STR      r0,[sp,#0x104]
000308  f7fffffe          BL       CU_number_width
00030c  4284              CMP      r4,r0
00030e  d305              BCC      |L19.796|
000310  984e              LDR      r0,[sp,#0x138]
000312  6c00              LDR      r0,[r0,#0x40]
000314  9041              STR      r0,[sp,#0x104]
000316  f7fffffe          BL       CU_number_width
00031a  e004              B        |L19.806|
                  |L19.796|
00031c  984e              LDR      r0,[sp,#0x138]
00031e  6cc0              LDR      r0,[r0,#0x4c]
000320  9041              STR      r0,[sp,#0x104]
000322  f7fffffe          BL       CU_number_width
                  |L19.806|
000326  2803              CMP      r0,#3
000328  d801              BHI      |L19.814|
00032a  2003              MOVS     r0,#3
00032c  e03d              B        |L19.938|
                  |L19.814|
00032e  984e              LDR      r0,[sp,#0x138]
000330  6b40              LDR      r0,[r0,#0x34]
000332  9041              STR      r0,[sp,#0x104]
000334  f7fffffe          BL       CU_number_width
000338  4604              MOV      r4,r0
00033a  984e              LDR      r0,[sp,#0x138]
00033c  6c00              LDR      r0,[r0,#0x40]
00033e  9041              STR      r0,[sp,#0x104]
000340  f7fffffe          BL       CU_number_width
000344  4605              MOV      r5,r0
000346  984e              LDR      r0,[sp,#0x138]
000348  6cc0              LDR      r0,[r0,#0x4c]
00034a  9041              STR      r0,[sp,#0x104]
00034c  f7fffffe          BL       CU_number_width
000350  4285              CMP      r5,r0
000352  d305              BCC      |L19.864|
000354  984e              LDR      r0,[sp,#0x138]
000356  6c00              LDR      r0,[r0,#0x40]
000358  9041              STR      r0,[sp,#0x104]
00035a  f7fffffe          BL       CU_number_width
00035e  e004              B        |L19.874|
                  |L19.864|
000360  984e              LDR      r0,[sp,#0x138]
000362  6cc0              LDR      r0,[r0,#0x4c]
000364  9041              STR      r0,[sp,#0x104]
000366  f7fffffe          BL       CU_number_width
                  |L19.874|
00036a  4284              CMP      r4,r0
00036c  d305              BCC      |L19.890|
00036e  984e              LDR      r0,[sp,#0x138]
000370  6b40              LDR      r0,[r0,#0x34]
000372  9041              STR      r0,[sp,#0x104]
000374  f7fffffe          BL       CU_number_width
000378  e017              B        |L19.938|
                  |L19.890|
00037a  984e              LDR      r0,[sp,#0x138]
00037c  6c00              LDR      r0,[r0,#0x40]
00037e  9041              STR      r0,[sp,#0x104]
000380  f7fffffe          BL       CU_number_width
000384  4604              MOV      r4,r0
000386  984e              LDR      r0,[sp,#0x138]
000388  6cc0              LDR      r0,[r0,#0x4c]
00038a  9041              STR      r0,[sp,#0x104]
00038c  f7fffffe          BL       CU_number_width
000390  4284              CMP      r4,r0
000392  d305              BCC      |L19.928|
000394  984e              LDR      r0,[sp,#0x138]
000396  6c00              LDR      r0,[r0,#0x40]
000398  9041              STR      r0,[sp,#0x104]
00039a  f7fffffe          BL       CU_number_width
00039e  e004              B        |L19.938|
                  |L19.928|
0003a0  984e              LDR      r0,[sp,#0x138]
0003a2  6cc0              LDR      r0,[r0,#0x4c]
0003a4  9041              STR      r0,[sp,#0x104]
0003a6  f7fffffe          BL       CU_number_width
                  |L19.938|
0003aa  2806              CMP      r0,#6
0003ac  d801              BHI      |L19.946|
0003ae  2006              MOVS     r0,#6
0003b0  e081              B        |L19.1206|
                  |L19.946|
0003b2  984e              LDR      r0,[sp,#0x138]
0003b4  6b40              LDR      r0,[r0,#0x34]
0003b6  9041              STR      r0,[sp,#0x104]
0003b8  f7fffffe          BL       CU_number_width
0003bc  4604              MOV      r4,r0
0003be  984e              LDR      r0,[sp,#0x138]
0003c0  6c00              LDR      r0,[r0,#0x40]
0003c2  9041              STR      r0,[sp,#0x104]
0003c4  f7fffffe          BL       CU_number_width
0003c8  4605              MOV      r5,r0
0003ca  984e              LDR      r0,[sp,#0x138]
0003cc  6cc0              LDR      r0,[r0,#0x4c]
0003ce  9041              STR      r0,[sp,#0x104]
0003d0  f7fffffe          BL       CU_number_width
0003d4  4285              CMP      r5,r0
0003d6  d307              BCC      |L19.1000|
0003d8  984e              LDR      r0,[sp,#0x138]
0003da  6c00              LDR      r0,[r0,#0x40]
0003dc  9041              STR      r0,[sp,#0x104]
0003de  f7fffffe          BL       CU_number_width
0003e2  e006              B        |L19.1010|
                  |L19.996|
                          DCD      f_run_summary
                  |L19.1000|
0003e8  984e              LDR      r0,[sp,#0x138]
0003ea  6cc0              LDR      r0,[r0,#0x4c]
0003ec  9041              STR      r0,[sp,#0x104]
0003ee  f7fffffe          BL       CU_number_width
                  |L19.1010|
0003f2  4284              CMP      r4,r0
0003f4  d305              BCC      |L19.1026|
0003f6  984e              LDR      r0,[sp,#0x138]
0003f8  6b40              LDR      r0,[r0,#0x34]
0003fa  9041              STR      r0,[sp,#0x104]
0003fc  f7fffffe          BL       CU_number_width
000400  e017              B        |L19.1074|
                  |L19.1026|
000402  984e              LDR      r0,[sp,#0x138]
000404  6c00              LDR      r0,[r0,#0x40]
000406  9041              STR      r0,[sp,#0x104]
000408  f7fffffe          BL       CU_number_width
00040c  4604              MOV      r4,r0
00040e  984e              LDR      r0,[sp,#0x138]
000410  6cc0              LDR      r0,[r0,#0x4c]
000412  9041              STR      r0,[sp,#0x104]
000414  f7fffffe          BL       CU_number_width
000418  4284              CMP      r4,r0
00041a  d305              BCC      |L19.1064|
00041c  984e              LDR      r0,[sp,#0x138]
00041e  6c00              LDR      r0,[r0,#0x40]
000420  9041              STR      r0,[sp,#0x104]
000422  f7fffffe          BL       CU_number_width
000426  e004              B        |L19.1074|
                  |L19.1064|
000428  984e              LDR      r0,[sp,#0x138]
00042a  6cc0              LDR      r0,[r0,#0x4c]
00042c  9041              STR      r0,[sp,#0x104]
00042e  f7fffffe          BL       CU_number_width
                  |L19.1074|
000432  2803              CMP      r0,#3
000434  d801              BHI      |L19.1082|
000436  2003              MOVS     r0,#3
000438  e03d              B        |L19.1206|
                  |L19.1082|
00043a  984e              LDR      r0,[sp,#0x138]
00043c  6b40              LDR      r0,[r0,#0x34]
00043e  9041              STR      r0,[sp,#0x104]
000440  f7fffffe          BL       CU_number_width
000444  4604              MOV      r4,r0
000446  984e              LDR      r0,[sp,#0x138]
000448  6c00              LDR      r0,[r0,#0x40]
00044a  9041              STR      r0,[sp,#0x104]
00044c  f7fffffe          BL       CU_number_width
000450  4605              MOV      r5,r0
000452  984e              LDR      r0,[sp,#0x138]
000454  6cc0              LDR      r0,[r0,#0x4c]
000456  9041              STR      r0,[sp,#0x104]
000458  f7fffffe          BL       CU_number_width
00045c  4285              CMP      r5,r0
00045e  d305              BCC      |L19.1132|
000460  984e              LDR      r0,[sp,#0x138]
000462  6c00              LDR      r0,[r0,#0x40]
000464  9041              STR      r0,[sp,#0x104]
000466  f7fffffe          BL       CU_number_width
00046a  e004              B        |L19.1142|
                  |L19.1132|
00046c  984e              LDR      r0,[sp,#0x138]
00046e  6cc0              LDR      r0,[r0,#0x4c]
000470  9041              STR      r0,[sp,#0x104]
000472  f7fffffe          BL       CU_number_width
                  |L19.1142|
000476  4284              CMP      r4,r0
000478  d305              BCC      |L19.1158|
00047a  984e              LDR      r0,[sp,#0x138]
00047c  6b40              LDR      r0,[r0,#0x34]
00047e  9041              STR      r0,[sp,#0x104]
000480  f7fffffe          BL       CU_number_width
000484  e017              B        |L19.1206|
                  |L19.1158|
000486  984e              LDR      r0,[sp,#0x138]
000488  6c00              LDR      r0,[r0,#0x40]
00048a  9041              STR      r0,[sp,#0x104]
00048c  f7fffffe          BL       CU_number_width
000490  4604              MOV      r4,r0
000492  984e              LDR      r0,[sp,#0x138]
000494  6cc0              LDR      r0,[r0,#0x4c]
000496  9041              STR      r0,[sp,#0x104]
000498  f7fffffe          BL       CU_number_width
00049c  4284              CMP      r4,r0
00049e  d305              BCC      |L19.1196|
0004a0  984e              LDR      r0,[sp,#0x138]
0004a2  6c00              LDR      r0,[r0,#0x40]
0004a4  9041              STR      r0,[sp,#0x104]
0004a6  f7fffffe          BL       CU_number_width
0004aa  e004              B        |L19.1206|
                  |L19.1196|
0004ac  984e              LDR      r0,[sp,#0x138]
0004ae  6cc0              LDR      r0,[r0,#0x4c]
0004b0  9041              STR      r0,[sp,#0x104]
0004b2  f7fffffe          BL       CU_number_width
                  |L19.1206|
0004b6  1c40              ADDS     r0,r0,#1
0004b8  9047              STR      r0,[sp,#0x11c]
;;;595                        CU_MAX(strlen(_("Ran")),
;;;596                               CU_MAX(CU_number_width(pRunSummary->nSuitesRun),
;;;597                                      CU_MAX(CU_number_width(pRunSummary->nTestsRun),
;;;598                                             CU_number_width(pRunSummary->nAsserts))))) + 1;
;;;599      width[4] = CU_MAX(6,
0004ba  984e              LDR      r0,[sp,#0x138]
0004bc  e9d01010          LDRD     r1,r0,[r0,#0x40]
0004c0  1a08              SUBS     r0,r1,r0
0004c2  9041              STR      r0,[sp,#0x104]
0004c4  f7fffffe          BL       CU_number_width
0004c8  4604              MOV      r4,r0
0004ca  984e              LDR      r0,[sp,#0x138]
0004cc  e9d01013          LDRD     r1,r0,[r0,#0x4c]
0004d0  1a08              SUBS     r0,r1,r0
0004d2  9041              STR      r0,[sp,#0x104]
0004d4  f7fffffe          BL       CU_number_width
0004d8  4284              CMP      r4,r0
0004da  d307              BCC      |L19.1260|
0004dc  984e              LDR      r0,[sp,#0x138]
0004de  e9d01010          LDRD     r1,r0,[r0,#0x40]
0004e2  1a08              SUBS     r0,r1,r0
0004e4  9041              STR      r0,[sp,#0x104]
0004e6  f7fffffe          BL       CU_number_width
0004ea  e006              B        |L19.1274|
                  |L19.1260|
0004ec  984e              LDR      r0,[sp,#0x138]
0004ee  e9d01013          LDRD     r1,r0,[r0,#0x4c]
0004f2  1a08              SUBS     r0,r1,r0
0004f4  9041              STR      r0,[sp,#0x104]
0004f6  f7fffffe          BL       CU_number_width
                  |L19.1274|
0004fa  2803              CMP      r0,#3
0004fc  d801              BHI      |L19.1282|
0004fe  2003              MOVS     r0,#3
000500  e01f              B        |L19.1346|
                  |L19.1282|
000502  984e              LDR      r0,[sp,#0x138]
000504  e9d01010          LDRD     r1,r0,[r0,#0x40]
000508  1a08              SUBS     r0,r1,r0
00050a  9041              STR      r0,[sp,#0x104]
00050c  f7fffffe          BL       CU_number_width
000510  4604              MOV      r4,r0
000512  984e              LDR      r0,[sp,#0x138]
000514  e9d01013          LDRD     r1,r0,[r0,#0x4c]
000518  1a08              SUBS     r0,r1,r0
00051a  9041              STR      r0,[sp,#0x104]
00051c  f7fffffe          BL       CU_number_width
000520  4284              CMP      r4,r0
000522  d307              BCC      |L19.1332|
000524  984e              LDR      r0,[sp,#0x138]
000526  e9d01010          LDRD     r1,r0,[r0,#0x40]
00052a  1a08              SUBS     r0,r1,r0
00052c  9041              STR      r0,[sp,#0x104]
00052e  f7fffffe          BL       CU_number_width
000532  e006              B        |L19.1346|
                  |L19.1332|
000534  984e              LDR      r0,[sp,#0x138]
000536  e9d01013          LDRD     r1,r0,[r0,#0x4c]
00053a  1a08              SUBS     r0,r1,r0
00053c  9041              STR      r0,[sp,#0x104]
00053e  f7fffffe          BL       CU_number_width
                  |L19.1346|
000542  2806              CMP      r0,#6
000544  d801              BHI      |L19.1354|
000546  2006              MOVS     r0,#6
000548  e043              B        |L19.1490|
                  |L19.1354|
00054a  984e              LDR      r0,[sp,#0x138]
00054c  e9d01010          LDRD     r1,r0,[r0,#0x40]
000550  1a08              SUBS     r0,r1,r0
000552  9041              STR      r0,[sp,#0x104]
000554  f7fffffe          BL       CU_number_width
000558  4604              MOV      r4,r0
00055a  984e              LDR      r0,[sp,#0x138]
00055c  e9d01013          LDRD     r1,r0,[r0,#0x4c]
000560  1a08              SUBS     r0,r1,r0
000562  9041              STR      r0,[sp,#0x104]
000564  f7fffffe          BL       CU_number_width
000568  4284              CMP      r4,r0
00056a  d307              BCC      |L19.1404|
00056c  984e              LDR      r0,[sp,#0x138]
00056e  e9d01010          LDRD     r1,r0,[r0,#0x40]
000572  1a08              SUBS     r0,r1,r0
000574  9041              STR      r0,[sp,#0x104]
000576  f7fffffe          BL       CU_number_width
00057a  e006              B        |L19.1418|
                  |L19.1404|
00057c  984e              LDR      r0,[sp,#0x138]
00057e  e9d01013          LDRD     r1,r0,[r0,#0x4c]
000582  1a08              SUBS     r0,r1,r0
000584  9041              STR      r0,[sp,#0x104]
000586  f7fffffe          BL       CU_number_width
                  |L19.1418|
00058a  2803              CMP      r0,#3
00058c  d801              BHI      |L19.1426|
00058e  2003              MOVS     r0,#3
000590  e01f              B        |L19.1490|
                  |L19.1426|
000592  984e              LDR      r0,[sp,#0x138]
000594  e9d01010          LDRD     r1,r0,[r0,#0x40]
000598  1a08              SUBS     r0,r1,r0
00059a  9041              STR      r0,[sp,#0x104]
00059c  f7fffffe          BL       CU_number_width
0005a0  4604              MOV      r4,r0
0005a2  984e              LDR      r0,[sp,#0x138]
0005a4  e9d01013          LDRD     r1,r0,[r0,#0x4c]
0005a8  1a08              SUBS     r0,r1,r0
0005aa  9041              STR      r0,[sp,#0x104]
0005ac  f7fffffe          BL       CU_number_width
0005b0  4284              CMP      r4,r0
0005b2  d307              BCC      |L19.1476|
0005b4  984e              LDR      r0,[sp,#0x138]
0005b6  e9d01010          LDRD     r1,r0,[r0,#0x40]
0005ba  1a08              SUBS     r0,r1,r0
0005bc  9041              STR      r0,[sp,#0x104]
0005be  f7fffffe          BL       CU_number_width
0005c2  e006              B        |L19.1490|
                  |L19.1476|
0005c4  984e              LDR      r0,[sp,#0x138]
0005c6  e9d01013          LDRD     r1,r0,[r0,#0x4c]
0005ca  1a08              SUBS     r0,r1,r0
0005cc  9041              STR      r0,[sp,#0x104]
0005ce  f7fffffe          BL       CU_number_width
                  |L19.1490|
0005d2  2806              CMP      r0,#6
0005d4  d801              BHI      |L19.1498|
0005d6  2006              MOVS     r0,#6
0005d8  e08b              B        |L19.1778|
                  |L19.1498|
0005da  984e              LDR      r0,[sp,#0x138]
0005dc  e9d01010          LDRD     r1,r0,[r0,#0x40]
0005e0  1a08              SUBS     r0,r1,r0
0005e2  9041              STR      r0,[sp,#0x104]
0005e4  f7fffffe          BL       CU_number_width
0005e8  4604              MOV      r4,r0
0005ea  984e              LDR      r0,[sp,#0x138]
0005ec  e9d01013          LDRD     r1,r0,[r0,#0x4c]
0005f0  1a08              SUBS     r0,r1,r0
0005f2  9041              STR      r0,[sp,#0x104]
0005f4  f7fffffe          BL       CU_number_width
0005f8  4284              CMP      r4,r0
0005fa  d307              BCC      |L19.1548|
0005fc  984e              LDR      r0,[sp,#0x138]
0005fe  e9d01010          LDRD     r1,r0,[r0,#0x40]
000602  1a08              SUBS     r0,r1,r0
000604  9041              STR      r0,[sp,#0x104]
000606  f7fffffe          BL       CU_number_width
00060a  e006              B        |L19.1562|
                  |L19.1548|
00060c  984e              LDR      r0,[sp,#0x138]
00060e  e9d01013          LDRD     r1,r0,[r0,#0x4c]
000612  1a08              SUBS     r0,r1,r0
000614  9041              STR      r0,[sp,#0x104]
000616  f7fffffe          BL       CU_number_width
                  |L19.1562|
00061a  2803              CMP      r0,#3
00061c  d801              BHI      |L19.1570|
00061e  2003              MOVS     r0,#3
000620  e01f              B        |L19.1634|
                  |L19.1570|
000622  984e              LDR      r0,[sp,#0x138]
000624  e9d01010          LDRD     r1,r0,[r0,#0x40]
000628  1a08              SUBS     r0,r1,r0
00062a  9041              STR      r0,[sp,#0x104]
00062c  f7fffffe          BL       CU_number_width
000630  4604              MOV      r4,r0
000632  984e              LDR      r0,[sp,#0x138]
000634  e9d01013          LDRD     r1,r0,[r0,#0x4c]
000638  1a08              SUBS     r0,r1,r0
00063a  9041              STR      r0,[sp,#0x104]
00063c  f7fffffe          BL       CU_number_width
000640  4284              CMP      r4,r0
000642  d307              BCC      |L19.1620|
000644  984e              LDR      r0,[sp,#0x138]
000646  e9d01010          LDRD     r1,r0,[r0,#0x40]
00064a  1a08              SUBS     r0,r1,r0
00064c  9041              STR      r0,[sp,#0x104]
00064e  f7fffffe          BL       CU_number_width
000652  e006              B        |L19.1634|
                  |L19.1620|
000654  984e              LDR      r0,[sp,#0x138]
000656  e9d01013          LDRD     r1,r0,[r0,#0x4c]
00065a  1a08              SUBS     r0,r1,r0
00065c  9041              STR      r0,[sp,#0x104]
00065e  f7fffffe          BL       CU_number_width
                  |L19.1634|
000662  2806              CMP      r0,#6
000664  d801              BHI      |L19.1642|
000666  2006              MOVS     r0,#6
000668  e043              B        |L19.1778|
                  |L19.1642|
00066a  984e              LDR      r0,[sp,#0x138]
00066c  e9d01010          LDRD     r1,r0,[r0,#0x40]
000670  1a08              SUBS     r0,r1,r0
000672  9041              STR      r0,[sp,#0x104]
000674  f7fffffe          BL       CU_number_width
000678  4604              MOV      r4,r0
00067a  984e              LDR      r0,[sp,#0x138]
00067c  e9d01013          LDRD     r1,r0,[r0,#0x4c]
000680  1a08              SUBS     r0,r1,r0
000682  9041              STR      r0,[sp,#0x104]
000684  f7fffffe          BL       CU_number_width
000688  4284              CMP      r4,r0
00068a  d307              BCC      |L19.1692|
00068c  984e              LDR      r0,[sp,#0x138]
00068e  e9d01010          LDRD     r1,r0,[r0,#0x40]
000692  1a08              SUBS     r0,r1,r0
000694  9041              STR      r0,[sp,#0x104]
000696  f7fffffe          BL       CU_number_width
00069a  e006              B        |L19.1706|
                  |L19.1692|
00069c  984e              LDR      r0,[sp,#0x138]
00069e  e9d01013          LDRD     r1,r0,[r0,#0x4c]
0006a2  1a08              SUBS     r0,r1,r0
0006a4  9041              STR      r0,[sp,#0x104]
0006a6  f7fffffe          BL       CU_number_width
                  |L19.1706|
0006aa  2803              CMP      r0,#3
0006ac  d801              BHI      |L19.1714|
0006ae  2003              MOVS     r0,#3
0006b0  e01f              B        |L19.1778|
                  |L19.1714|
0006b2  984e              LDR      r0,[sp,#0x138]
0006b4  e9d01010          LDRD     r1,r0,[r0,#0x40]
0006b8  1a08              SUBS     r0,r1,r0
0006ba  9041              STR      r0,[sp,#0x104]
0006bc  f7fffffe          BL       CU_number_width
0006c0  4604              MOV      r4,r0
0006c2  984e              LDR      r0,[sp,#0x138]
0006c4  e9d01013          LDRD     r1,r0,[r0,#0x4c]
0006c8  1a08              SUBS     r0,r1,r0
0006ca  9041              STR      r0,[sp,#0x104]
0006cc  f7fffffe          BL       CU_number_width
0006d0  4284              CMP      r4,r0
0006d2  d307              BCC      |L19.1764|
0006d4  984e              LDR      r0,[sp,#0x138]
0006d6  e9d01010          LDRD     r1,r0,[r0,#0x40]
0006da  1a08              SUBS     r0,r1,r0
0006dc  9041              STR      r0,[sp,#0x104]
0006de  f7fffffe          BL       CU_number_width
0006e2  e006              B        |L19.1778|
                  |L19.1764|
0006e4  984e              LDR      r0,[sp,#0x138]
0006e6  e9d01013          LDRD     r1,r0,[r0,#0x4c]
0006ea  1a08              SUBS     r0,r1,r0
0006ec  9041              STR      r0,[sp,#0x104]
0006ee  f7fffffe          BL       CU_number_width
                  |L19.1778|
0006f2  1c40              ADDS     r0,r0,#1
0006f4  9048              STR      r0,[sp,#0x120]
;;;600                        CU_MAX(strlen(_("Passed")),
;;;601                               CU_MAX(strlen(_("n/a")),
;;;602                                      CU_MAX(CU_number_width(pRunSummary->nTestsRun - pRunSummary->nTestsFailed),
;;;603                                             CU_number_width(pRunSummary->nAsserts - pRunSummary->nAssertsFailed))))) + 1;
;;;604      width[5] = CU_MAX(6,
0006f6  984e              LDR      r0,[sp,#0x138]
0006f8  6b80              LDR      r0,[r0,#0x38]
0006fa  9041              STR      r0,[sp,#0x104]
0006fc  f7fffffe          BL       CU_number_width
000700  4604              MOV      r4,r0
000702  984e              LDR      r0,[sp,#0x138]
000704  6c40              LDR      r0,[r0,#0x44]
000706  9041              STR      r0,[sp,#0x104]
000708  f7fffffe          BL       CU_number_width
00070c  4605              MOV      r5,r0
00070e  984e              LDR      r0,[sp,#0x138]
000710  6d00              LDR      r0,[r0,#0x50]
000712  9041              STR      r0,[sp,#0x104]
000714  f7fffffe          BL       CU_number_width
000718  4285              CMP      r5,r0
00071a  d305              BCC      |L19.1832|
00071c  984e              LDR      r0,[sp,#0x138]
00071e  6c40              LDR      r0,[r0,#0x44]
000720  9041              STR      r0,[sp,#0x104]
000722  f7fffffe          BL       CU_number_width
000726  e004              B        |L19.1842|
                  |L19.1832|
000728  984e              LDR      r0,[sp,#0x138]
00072a  6d00              LDR      r0,[r0,#0x50]
00072c  9041              STR      r0,[sp,#0x104]
00072e  f7fffffe          BL       CU_number_width
                  |L19.1842|
000732  4284              CMP      r4,r0
000734  d305              BCC      |L19.1858|
000736  984e              LDR      r0,[sp,#0x138]
000738  6b80              LDR      r0,[r0,#0x38]
00073a  9041              STR      r0,[sp,#0x104]
00073c  f7fffffe          BL       CU_number_width
000740  e017              B        |L19.1906|
                  |L19.1858|
000742  984e              LDR      r0,[sp,#0x138]
000744  6c40              LDR      r0,[r0,#0x44]
000746  9041              STR      r0,[sp,#0x104]
000748  f7fffffe          BL       CU_number_width
00074c  4604              MOV      r4,r0
00074e  984e              LDR      r0,[sp,#0x138]
000750  6d00              LDR      r0,[r0,#0x50]
000752  9041              STR      r0,[sp,#0x104]
000754  f7fffffe          BL       CU_number_width
000758  4284              CMP      r4,r0
00075a  d305              BCC      |L19.1896|
00075c  984e              LDR      r0,[sp,#0x138]
00075e  6c40              LDR      r0,[r0,#0x44]
000760  9041              STR      r0,[sp,#0x104]
000762  f7fffffe          BL       CU_number_width
000766  e004              B        |L19.1906|
                  |L19.1896|
000768  984e              LDR      r0,[sp,#0x138]
00076a  6d00              LDR      r0,[r0,#0x50]
00076c  9041              STR      r0,[sp,#0x104]
00076e  f7fffffe          BL       CU_number_width
                  |L19.1906|
000772  2806              CMP      r0,#6
000774  d801              BHI      |L19.1914|
000776  2006              MOVS     r0,#6
000778  e03d              B        |L19.2038|
                  |L19.1914|
00077a  984e              LDR      r0,[sp,#0x138]
00077c  6b80              LDR      r0,[r0,#0x38]
00077e  9041              STR      r0,[sp,#0x104]
000780  f7fffffe          BL       CU_number_width
000784  4604              MOV      r4,r0
000786  984e              LDR      r0,[sp,#0x138]
000788  6c40              LDR      r0,[r0,#0x44]
00078a  9041              STR      r0,[sp,#0x104]
00078c  f7fffffe          BL       CU_number_width
000790  4605              MOV      r5,r0
000792  984e              LDR      r0,[sp,#0x138]
000794  6d00              LDR      r0,[r0,#0x50]
000796  9041              STR      r0,[sp,#0x104]
000798  f7fffffe          BL       CU_number_width
00079c  4285              CMP      r5,r0
00079e  d305              BCC      |L19.1964|
0007a0  984e              LDR      r0,[sp,#0x138]
0007a2  6c40              LDR      r0,[r0,#0x44]
0007a4  9041              STR      r0,[sp,#0x104]
0007a6  f7fffffe          BL       CU_number_width
0007aa  e004              B        |L19.1974|
                  |L19.1964|
0007ac  984e              LDR      r0,[sp,#0x138]
0007ae  6d00              LDR      r0,[r0,#0x50]
0007b0  9041              STR      r0,[sp,#0x104]
0007b2  f7fffffe          BL       CU_number_width
                  |L19.1974|
0007b6  4284              CMP      r4,r0
0007b8  d305              BCC      |L19.1990|
0007ba  984e              LDR      r0,[sp,#0x138]
0007bc  6b80              LDR      r0,[r0,#0x38]
0007be  9041              STR      r0,[sp,#0x104]
0007c0  f7fffffe          BL       CU_number_width
0007c4  e017              B        |L19.2038|
                  |L19.1990|
0007c6  984e              LDR      r0,[sp,#0x138]
0007c8  6c40              LDR      r0,[r0,#0x44]
0007ca  9041              STR      r0,[sp,#0x104]
0007cc  f7fffffe          BL       CU_number_width
0007d0  4604              MOV      r4,r0
0007d2  984e              LDR      r0,[sp,#0x138]
0007d4  6d00              LDR      r0,[r0,#0x50]
0007d6  9041              STR      r0,[sp,#0x104]
0007d8  f7fffffe          BL       CU_number_width
0007dc  4284              CMP      r4,r0
0007de  d305              BCC      |L19.2028|
0007e0  984e              LDR      r0,[sp,#0x138]
0007e2  6c40              LDR      r0,[r0,#0x44]
0007e4  9041              STR      r0,[sp,#0x104]
0007e6  f7fffffe          BL       CU_number_width
0007ea  e004              B        |L19.2038|
                  |L19.2028|
0007ec  984e              LDR      r0,[sp,#0x138]
0007ee  6d00              LDR      r0,[r0,#0x50]
0007f0  9041              STR      r0,[sp,#0x104]
0007f2  f7fffffe          BL       CU_number_width
                  |L19.2038|
0007f6  2806              CMP      r0,#6
0007f8  d801              BHI      |L19.2046|
0007fa  2006              MOVS     r0,#6
0007fc  e07f              B        |L19.2302|
                  |L19.2046|
0007fe  984e              LDR      r0,[sp,#0x138]
000800  6b80              LDR      r0,[r0,#0x38]
000802  9041              STR      r0,[sp,#0x104]
000804  f7fffffe          BL       CU_number_width
000808  4604              MOV      r4,r0
00080a  984e              LDR      r0,[sp,#0x138]
00080c  6c40              LDR      r0,[r0,#0x44]
00080e  9041              STR      r0,[sp,#0x104]
000810  f7fffffe          BL       CU_number_width
000814  4605              MOV      r5,r0
000816  984e              LDR      r0,[sp,#0x138]
000818  6d00              LDR      r0,[r0,#0x50]
00081a  9041              STR      r0,[sp,#0x104]
00081c  f7fffffe          BL       CU_number_width
000820  4285              CMP      r5,r0
000822  d305              BCC      |L19.2096|
000824  984e              LDR      r0,[sp,#0x138]
000826  6c40              LDR      r0,[r0,#0x44]
000828  9041              STR      r0,[sp,#0x104]
00082a  f7fffffe          BL       CU_number_width
00082e  e004              B        |L19.2106|
                  |L19.2096|
000830  984e              LDR      r0,[sp,#0x138]
000832  6d00              LDR      r0,[r0,#0x50]
000834  9041              STR      r0,[sp,#0x104]
000836  f7fffffe          BL       CU_number_width
                  |L19.2106|
00083a  4284              CMP      r4,r0
00083c  d305              BCC      |L19.2122|
00083e  984e              LDR      r0,[sp,#0x138]
000840  6b80              LDR      r0,[r0,#0x38]
000842  9041              STR      r0,[sp,#0x104]
000844  f7fffffe          BL       CU_number_width
000848  e017              B        |L19.2170|
                  |L19.2122|
00084a  984e              LDR      r0,[sp,#0x138]
00084c  6c40              LDR      r0,[r0,#0x44]
00084e  9041              STR      r0,[sp,#0x104]
000850  f7fffffe          BL       CU_number_width
000854  4604              MOV      r4,r0
000856  984e              LDR      r0,[sp,#0x138]
000858  6d00              LDR      r0,[r0,#0x50]
00085a  9041              STR      r0,[sp,#0x104]
00085c  f7fffffe          BL       CU_number_width
000860  4284              CMP      r4,r0
000862  d305              BCC      |L19.2160|
000864  984e              LDR      r0,[sp,#0x138]
000866  6c40              LDR      r0,[r0,#0x44]
000868  9041              STR      r0,[sp,#0x104]
00086a  f7fffffe          BL       CU_number_width
00086e  e004              B        |L19.2170|
                  |L19.2160|
000870  984e              LDR      r0,[sp,#0x138]
000872  6d00              LDR      r0,[r0,#0x50]
000874  9041              STR      r0,[sp,#0x104]
000876  f7fffffe          BL       CU_number_width
                  |L19.2170|
00087a  2806              CMP      r0,#6
00087c  d801              BHI      |L19.2178|
00087e  2006              MOVS     r0,#6
000880  e03d              B        |L19.2302|
                  |L19.2178|
000882  984e              LDR      r0,[sp,#0x138]
000884  6b80              LDR      r0,[r0,#0x38]
000886  9041              STR      r0,[sp,#0x104]
000888  f7fffffe          BL       CU_number_width
00088c  4604              MOV      r4,r0
00088e  984e              LDR      r0,[sp,#0x138]
000890  6c40              LDR      r0,[r0,#0x44]
000892  9041              STR      r0,[sp,#0x104]
000894  f7fffffe          BL       CU_number_width
000898  4605              MOV      r5,r0
00089a  984e              LDR      r0,[sp,#0x138]
00089c  6d00              LDR      r0,[r0,#0x50]
00089e  9041              STR      r0,[sp,#0x104]
0008a0  f7fffffe          BL       CU_number_width
0008a4  4285              CMP      r5,r0
0008a6  d305              BCC      |L19.2228|
0008a8  984e              LDR      r0,[sp,#0x138]
0008aa  6c40              LDR      r0,[r0,#0x44]
0008ac  9041              STR      r0,[sp,#0x104]
0008ae  f7fffffe          BL       CU_number_width
0008b2  e004              B        |L19.2238|
                  |L19.2228|
0008b4  984e              LDR      r0,[sp,#0x138]
0008b6  6d00              LDR      r0,[r0,#0x50]
0008b8  9041              STR      r0,[sp,#0x104]
0008ba  f7fffffe          BL       CU_number_width
                  |L19.2238|
0008be  4284              CMP      r4,r0
0008c0  d305              BCC      |L19.2254|
0008c2  984e              LDR      r0,[sp,#0x138]
0008c4  6b80              LDR      r0,[r0,#0x38]
0008c6  9041              STR      r0,[sp,#0x104]
0008c8  f7fffffe          BL       CU_number_width
0008cc  e017              B        |L19.2302|
                  |L19.2254|
0008ce  984e              LDR      r0,[sp,#0x138]
0008d0  6c40              LDR      r0,[r0,#0x44]
0008d2  9041              STR      r0,[sp,#0x104]
0008d4  f7fffffe          BL       CU_number_width
0008d8  4604              MOV      r4,r0
0008da  984e              LDR      r0,[sp,#0x138]
0008dc  6d00              LDR      r0,[r0,#0x50]
0008de  9041              STR      r0,[sp,#0x104]
0008e0  f7fffffe          BL       CU_number_width
0008e4  4284              CMP      r4,r0
0008e6  d305              BCC      |L19.2292|
0008e8  984e              LDR      r0,[sp,#0x138]
0008ea  6c40              LDR      r0,[r0,#0x44]
0008ec  9041              STR      r0,[sp,#0x104]
0008ee  f7fffffe          BL       CU_number_width
0008f2  e004              B        |L19.2302|
                  |L19.2292|
0008f4  984e              LDR      r0,[sp,#0x138]
0008f6  6d00              LDR      r0,[r0,#0x50]
0008f8  9041              STR      r0,[sp,#0x104]
0008fa  f7fffffe          BL       CU_number_width
                  |L19.2302|
0008fe  1c40              ADDS     r0,r0,#1
000900  9049              STR      r0,[sp,#0x124]
;;;605                        CU_MAX(strlen(_("Failed")),
;;;606                               CU_MAX(CU_number_width(pRunSummary->nSuitesFailed),
;;;607                                      CU_MAX(CU_number_width(pRunSummary->nTestsFailed),
;;;608                                             CU_number_width(pRunSummary->nAssertsFailed))))) + 1;
;;;609      width[6] = CU_MAX(6,
000902  984e              LDR      r0,[sp,#0x138]
000904  6bc0              LDR      r0,[r0,#0x3c]
000906  9041              STR      r0,[sp,#0x104]
000908  f7fffffe          BL       CU_number_width
00090c  4604              MOV      r4,r0
00090e  984e              LDR      r0,[sp,#0x138]
000910  6c80              LDR      r0,[r0,#0x48]
000912  9041              STR      r0,[sp,#0x104]
000914  f7fffffe          BL       CU_number_width
000918  2803              CMP      r0,#3
00091a  d305              BCC      |L19.2344|
00091c  984e              LDR      r0,[sp,#0x138]
00091e  6c80              LDR      r0,[r0,#0x48]
000920  9041              STR      r0,[sp,#0x104]
000922  f7fffffe          BL       CU_number_width
000926  e000              B        |L19.2346|
                  |L19.2344|
000928  2003              MOVS     r0,#3
                  |L19.2346|
00092a  4284              CMP      r4,r0
00092c  d305              BCC      |L19.2362|
00092e  984e              LDR      r0,[sp,#0x138]
000930  6bc0              LDR      r0,[r0,#0x3c]
000932  9041              STR      r0,[sp,#0x104]
000934  f7fffffe          BL       CU_number_width
000938  e00d              B        |L19.2390|
                  |L19.2362|
00093a  984e              LDR      r0,[sp,#0x138]
00093c  6c80              LDR      r0,[r0,#0x48]
00093e  9041              STR      r0,[sp,#0x104]
000940  f7fffffe          BL       CU_number_width
000944  2803              CMP      r0,#3
000946  d305              BCC      |L19.2388|
000948  984e              LDR      r0,[sp,#0x138]
00094a  6c80              LDR      r0,[r0,#0x48]
00094c  9041              STR      r0,[sp,#0x104]
00094e  f7fffffe          BL       CU_number_width
000952  e000              B        |L19.2390|
                  |L19.2388|
000954  2003              MOVS     r0,#3
                  |L19.2390|
000956  2808              CMP      r0,#8
000958  d801              BHI      |L19.2398|
00095a  2008              MOVS     r0,#8
00095c  e029              B        |L19.2482|
                  |L19.2398|
00095e  984e              LDR      r0,[sp,#0x138]
000960  6bc0              LDR      r0,[r0,#0x3c]
000962  9041              STR      r0,[sp,#0x104]
000964  f7fffffe          BL       CU_number_width
000968  4604              MOV      r4,r0
00096a  984e              LDR      r0,[sp,#0x138]
00096c  6c80              LDR      r0,[r0,#0x48]
00096e  9041              STR      r0,[sp,#0x104]
000970  f7fffffe          BL       CU_number_width
000974  2803              CMP      r0,#3
000976  d305              BCC      |L19.2436|
000978  984e              LDR      r0,[sp,#0x138]
00097a  6c80              LDR      r0,[r0,#0x48]
00097c  9041              STR      r0,[sp,#0x104]
00097e  f7fffffe          BL       CU_number_width
000982  e000              B        |L19.2438|
                  |L19.2436|
000984  2003              MOVS     r0,#3
                  |L19.2438|
000986  4284              CMP      r4,r0
000988  d305              BCC      |L19.2454|
00098a  984e              LDR      r0,[sp,#0x138]
00098c  6bc0              LDR      r0,[r0,#0x3c]
00098e  9041              STR      r0,[sp,#0x104]
000990  f7fffffe          BL       CU_number_width
000994  e00d              B        |L19.2482|
                  |L19.2454|
000996  984e              LDR      r0,[sp,#0x138]
000998  6c80              LDR      r0,[r0,#0x48]
00099a  9041              STR      r0,[sp,#0x104]
00099c  f7fffffe          BL       CU_number_width
0009a0  2803              CMP      r0,#3
0009a2  d305              BCC      |L19.2480|
0009a4  984e              LDR      r0,[sp,#0x138]
0009a6  6c80              LDR      r0,[r0,#0x48]
0009a8  9041              STR      r0,[sp,#0x104]
0009aa  f7fffffe          BL       CU_number_width
0009ae  e000              B        |L19.2482|
                  |L19.2480|
0009b0  2003              MOVS     r0,#3
                  |L19.2482|
0009b2  2806              CMP      r0,#6
0009b4  d801              BHI      |L19.2490|
0009b6  2006              MOVS     r0,#6
0009b8  e057              B        |L19.2666|
                  |L19.2490|
0009ba  984e              LDR      r0,[sp,#0x138]
0009bc  6bc0              LDR      r0,[r0,#0x3c]
0009be  9041              STR      r0,[sp,#0x104]
0009c0  f7fffffe          BL       CU_number_width
0009c4  4604              MOV      r4,r0
0009c6  984e              LDR      r0,[sp,#0x138]
0009c8  6c80              LDR      r0,[r0,#0x48]
0009ca  9041              STR      r0,[sp,#0x104]
0009cc  f7fffffe          BL       CU_number_width
0009d0  2803              CMP      r0,#3
0009d2  d305              BCC      |L19.2528|
0009d4  984e              LDR      r0,[sp,#0x138]
0009d6  6c80              LDR      r0,[r0,#0x48]
0009d8  9041              STR      r0,[sp,#0x104]
0009da  f7fffffe          BL       CU_number_width
0009de  e000              B        |L19.2530|
                  |L19.2528|
0009e0  2003              MOVS     r0,#3
                  |L19.2530|
0009e2  4284              CMP      r4,r0
0009e4  d305              BCC      |L19.2546|
0009e6  984e              LDR      r0,[sp,#0x138]
0009e8  6bc0              LDR      r0,[r0,#0x3c]
0009ea  9041              STR      r0,[sp,#0x104]
0009ec  f7fffffe          BL       CU_number_width
0009f0  e00d              B        |L19.2574|
                  |L19.2546|
0009f2  984e              LDR      r0,[sp,#0x138]
0009f4  6c80              LDR      r0,[r0,#0x48]
0009f6  9041              STR      r0,[sp,#0x104]
0009f8  f7fffffe          BL       CU_number_width
0009fc  2803              CMP      r0,#3
0009fe  d305              BCC      |L19.2572|
000a00  984e              LDR      r0,[sp,#0x138]
000a02  6c80              LDR      r0,[r0,#0x48]
000a04  9041              STR      r0,[sp,#0x104]
000a06  f7fffffe          BL       CU_number_width
000a0a  e000              B        |L19.2574|
                  |L19.2572|
000a0c  2003              MOVS     r0,#3
                  |L19.2574|
000a0e  2808              CMP      r0,#8
000a10  d801              BHI      |L19.2582|
000a12  2008              MOVS     r0,#8
000a14  e029              B        |L19.2666|
                  |L19.2582|
000a16  984e              LDR      r0,[sp,#0x138]
000a18  6bc0              LDR      r0,[r0,#0x3c]
000a1a  9041              STR      r0,[sp,#0x104]
000a1c  f7fffffe          BL       CU_number_width
000a20  4604              MOV      r4,r0
000a22  984e              LDR      r0,[sp,#0x138]
000a24  6c80              LDR      r0,[r0,#0x48]
000a26  9041              STR      r0,[sp,#0x104]
000a28  f7fffffe          BL       CU_number_width
000a2c  2803              CMP      r0,#3
000a2e  d305              BCC      |L19.2620|
000a30  984e              LDR      r0,[sp,#0x138]
000a32  6c80              LDR      r0,[r0,#0x48]
000a34  9041              STR      r0,[sp,#0x104]
000a36  f7fffffe          BL       CU_number_width
000a3a  e000              B        |L19.2622|
                  |L19.2620|
000a3c  2003              MOVS     r0,#3
                  |L19.2622|
000a3e  4284              CMP      r4,r0
000a40  d305              BCC      |L19.2638|
000a42  984e              LDR      r0,[sp,#0x138]
000a44  6bc0              LDR      r0,[r0,#0x3c]
000a46  9041              STR      r0,[sp,#0x104]
000a48  f7fffffe          BL       CU_number_width
000a4c  e00d              B        |L19.2666|
                  |L19.2638|
000a4e  984e              LDR      r0,[sp,#0x138]
000a50  6c80              LDR      r0,[r0,#0x48]
000a52  9041              STR      r0,[sp,#0x104]
000a54  f7fffffe          BL       CU_number_width
000a58  2803              CMP      r0,#3
000a5a  d305              BCC      |L19.2664|
000a5c  984e              LDR      r0,[sp,#0x138]
000a5e  6c80              LDR      r0,[r0,#0x48]
000a60  9041              STR      r0,[sp,#0x104]
000a62  f7fffffe          BL       CU_number_width
000a66  e000              B        |L19.2666|
                  |L19.2664|
000a68  2003              MOVS     r0,#3
                  |L19.2666|
000a6a  1c40              ADDS     r0,r0,#1
000a6c  904a              STR      r0,[sp,#0x128]
;;;610                        CU_MAX(strlen(_("Inactive")),
;;;611                               CU_MAX(CU_number_width(pRunSummary->nSuitesInactive),
;;;612                                      CU_MAX(CU_number_width(pRunSummary->nTestsInactive),
;;;613                                             strlen(_("n/a")))))) + 1;
;;;614    
;;;615      width[7] = strlen(_("Elapsed time = "));
000a6e  200f              MOVS     r0,#0xf
000a70  904b              STR      r0,[sp,#0x12c]
;;;616      width[8] = strlen(_(" seconds"));
000a72  2008              MOVS     r0,#8
000a74  904c              STR      r0,[sp,#0x130]
;;;617    
;;;618      len = 13 + 4*(width[0] + width[1] + width[2] + width[3] + width[4] + width[5] + width[6]) + width[7] + width[8] + 1;
000a76  9945              LDR      r1,[sp,#0x114]
000a78  9844              LDR      r0,[sp,#0x110]
000a7a  4408              ADD      r0,r0,r1
000a7c  9946              LDR      r1,[sp,#0x118]
000a7e  4408              ADD      r0,r0,r1
000a80  9947              LDR      r1,[sp,#0x11c]
000a82  4408              ADD      r0,r0,r1
000a84  9948              LDR      r1,[sp,#0x120]
000a86  4408              ADD      r0,r0,r1
000a88  9949              LDR      r1,[sp,#0x124]
000a8a  4408              ADD      r0,r0,r1
000a8c  994a              LDR      r1,[sp,#0x128]
000a8e  4408              ADD      r0,r0,r1
000a90  0080              LSLS     r0,r0,#2
000a92  300d              ADDS     r0,r0,#0xd
000a94  994b              LDR      r1,[sp,#0x12c]
000a96  4408              ADD      r0,r0,r1
000a98  994c              LDR      r1,[sp,#0x130]
000a9a  4408              ADD      r0,r0,r1
000a9c  1c40              ADDS     r0,r0,#1
000a9e  9043              STR      r0,[sp,#0x10c]
;;;619      result = (char *)CU_MALLOC(len);
000aa0  9843              LDR      r0,[sp,#0x10c]
000aa2  f7fffffe          BL       malloc
000aa6  9042              STR      r0,[sp,#0x108]
;;;620    
;;;621      if (NULL != result) {
000aa8  9842              LDR      r0,[sp,#0x108]
000aaa  b3e8              CBZ      r0,|L19.2856|
;;;622        snprintf(result, len, "%*s%*s%*s%*s%*s%*s%*s\n"   /* if you change this, be sure  */
000aac  f7fffffe          BL       CU_get_elapsed_time
000ab0  9141              STR      r1,[sp,#0x104]
000ab2  9040              STR      r0,[sp,#0x100]
000ab4  a14d              ADR      r1,|L19.3052|
000ab6  984c              LDR      r0,[sp,#0x130]
000ab8  e9cd013c          STRD     r0,r1,[sp,#0xf0]
000abc  9941              LDR      r1,[sp,#0x104]
000abe  9840              LDR      r0,[sp,#0x100]
000ac0  a24d              ADR      r2,|L19.3064|
000ac2  e9cd013a          STRD     r0,r1,[sp,#0xe8]
000ac6  a350              ADR      r3,|L19.3080|
000ac8  994a              LDR      r1,[sp,#0x128]
000aca  984b              LDR      r0,[sp,#0x12c]
000acc  e9cd1335          STRD     r1,r3,[sp,#0xd4]
000ad0  e9cd0237          STRD     r0,r2,[sp,#0xdc]
000ad4  984e              LDR      r0,[sp,#0x138]
000ad6  6d00              LDR      r0,[r0,#0x50]
000ad8  9a4e              LDR      r2,[sp,#0x138]
000ada  9949              LDR      r1,[sp,#0x124]
000adc  e9d23213          LDRD     r3,r2,[r2,#0x4c]
000ae0  1a9a              SUBS     r2,r3,r2
000ae2  9b48              LDR      r3,[sp,#0x120]
000ae4  e9cd3231          STRD     r3,r2,[sp,#0xc4]
000ae8  e9cd1033          STRD     r1,r0,[sp,#0xcc]
000aec  984e              LDR      r0,[sp,#0x138]
000aee  6cc0              LDR      r0,[r0,#0x4c]
000af0  9a4e              LDR      r2,[sp,#0x138]
000af2  9947              LDR      r1,[sp,#0x11c]
000af4  6cd2              LDR      r2,[r2,#0x4c]
000af6  9b46              LDR      r3,[sp,#0x118]
000af8  e9cd322d          STRD     r3,r2,[sp,#0xb4]
000afc  e9cd102f          STRD     r1,r0,[sp,#0xbc]
000b00  a242              ADR      r2,|L19.3084|
000b02  a344              ADR      r3,|L19.3092|
000b04  9944              LDR      r1,[sp,#0x110]
000b06  9845              LDR      r0,[sp,#0x114]
000b08  e9cd1329          STRD     r1,r3,[sp,#0xa4]
000b0c  e9cd022b          STRD     r0,r2,[sp,#0xac]
000b10  984e              LDR      r0,[sp,#0x138]
000b12  6c80              LDR      r0,[r0,#0x48]
000b14  9a4e              LDR      r2,[sp,#0x138]
000b16  994a              LDR      r1,[sp,#0x128]
000b18  6c52              LDR      r2,[r2,#0x44]
000b1a  9b49              LDR      r3,[sp,#0x124]
000b1c  e9cd3225          STRD     r3,r2,[sp,#0x94]
000b20  e9cd1027          STRD     r1,r0,[sp,#0x9c]
000b24  984e              LDR      r0,[sp,#0x138]
000b26  e000              B        |L19.2858|
                  |L19.2856|
000b28  e05d              B        |L19.3046|
                  |L19.2858|
000b2a  e9d01010          LDRD     r1,r0,[r0,#0x40]
000b2e  1a09              SUBS     r1,r1,r0
000b30  9a4e              LDR      r2,[sp,#0x138]
000b32  9848              LDR      r0,[sp,#0x120]
000b34  6c12              LDR      r2,[r2,#0x40]
000b36  9b47              LDR      r3,[sp,#0x11c]
000b38  e9cd3221          STRD     r3,r2,[sp,#0x84]
000b3c  e9cd0123          STRD     r0,r1,[sp,#0x8c]
000b40  984d              LDR      r0,[sp,#0x134]
000b42  6840              LDR      r0,[r0,#4]
000b44  a334              ADR      r3,|L19.3096|
000b46  9a45              LDR      r2,[sp,#0x114]
000b48  9946              LDR      r1,[sp,#0x118]
000b4a  e9cd231d          STRD     r2,r3,[sp,#0x74]
000b4e  e9cd101f          STRD     r1,r0,[sp,#0x7c]
000b52  a330              ADR      r3,|L19.3092|
000b54  9944              LDR      r1,[sp,#0x110]
000b56  984e              LDR      r0,[sp,#0x138]
000b58  6bc0              LDR      r0,[r0,#0x3c]
000b5a  9a4a              LDR      r2,[sp,#0x128]
000b5c  ac1a              ADD      r4,sp,#0x68
000b5e  c40b              STM      r4!,{r0,r1,r3}
000b60  9219              STR      r2,[sp,#0x64]
000b62  984e              LDR      r0,[sp,#0x138]
000b64  6b80              LDR      r0,[r0,#0x38]
000b66  a328              ADR      r3,|L19.3080|
000b68  9a48              LDR      r2,[sp,#0x120]
000b6a  9949              LDR      r1,[sp,#0x124]
000b6c  e9cd2315          STRD     r2,r3,[sp,#0x54]
000b70  e9cd1017          STRD     r1,r0,[sp,#0x5c]
000b74  984e              LDR      r0,[sp,#0x138]
000b76  6b42              LDR      r2,[r0,#0x34]
000b78  994d              LDR      r1,[sp,#0x134]
000b7a  9847              LDR      r0,[sp,#0x11c]
000b7c  6809              LDR      r1,[r1,#0]
000b7e  9b46              LDR      r3,[sp,#0x118]
000b80  e9cd3111          STRD     r3,r1,[sp,#0x44]
000b84  e9cd0213          STRD     r0,r2,[sp,#0x4c]
000b88  a225              ADR      r2,|L19.3104|
000b8a  a322              ADR      r3,|L19.3092|
000b8c  9944              LDR      r1,[sp,#0x110]
000b8e  9845              LDR      r0,[sp,#0x114]
000b90  e9cd130d          STRD     r1,r3,[sp,#0x34]
000b94  e9cd020f          STRD     r0,r2,[sp,#0x3c]
000b98  a223              ADR      r2,|L19.3112|
000b9a  a326              ADR      r3,|L19.3124|
000b9c  9949              LDR      r1,[sp,#0x124]
000b9e  984a              LDR      r0,[sp,#0x128]
000ba0  e9cd1309          STRD     r1,r3,[sp,#0x24]
000ba4  e9cd020b          STRD     r0,r2,[sp,#0x2c]
000ba8  a224              ADR      r2,|L19.3132|
000baa  a326              ADR      r3,|L19.3140|
000bac  9948              LDR      r1,[sp,#0x120]
000bae  9847              LDR      r0,[sp,#0x11c]
000bb0  e9cd3106          STRD     r3,r1,[sp,#0x18]
000bb4  9208              STR      r2,[sp,#0x20]
000bb6  9005              STR      r0,[sp,#0x14]
000bb8  a223              ADR      r2,|L19.3144|
000bba  a325              ADR      r3,|L19.3152|
000bbc  9945              LDR      r1,[sp,#0x114]
000bbe  9846              LDR      r0,[sp,#0x118]
000bc0  e9cd1301          STRD     r1,r3,[sp,#4]
000bc4  e9cd0203          STRD     r0,r2,[sp,#0xc]
000bc8  a023              ADR      r0,|L19.3160|
000bca  9000              STR      r0,[sp,#0]
000bcc  9844              LDR      r0,[sp,#0x110]
000bce  4603              MOV      r3,r0
000bd0  4a25              LDR      r2,|L19.3176|
000bd2  903f              STR      r0,[sp,#0xfc]
000bd4  9943              LDR      r1,[sp,#0x10c]
000bd6  9842              LDR      r0,[sp,#0x108]
000bd8  f7fffffe          BL       __2snprintf
;;;623                              "%*s%*s%*u%*u%*s%*u%*u\n"   /* to change the calculation of */
;;;624                              "%*s%*s%*u%*u%*u%*u%*u\n"   /* len above!                   */
;;;625                              "%*s%*s%*u%*u%*u%*u%*s\n\n"
;;;626                              "%*s%8.3f%*s",
;;;627                width[0], _("Run Summary:"),
;;;628                width[1], _("Type"),
;;;629                width[2], _("Total"),
;;;630                width[3], _("Ran"),
;;;631                width[4], _("Passed"),
;;;632                width[5], _("Failed"),
;;;633                width[6], _("Inactive"),
;;;634                width[0], " ",
;;;635                width[1], _("suites"),
;;;636                width[2], pRegistry->uiNumberOfSuites,
;;;637                width[3], pRunSummary->nSuitesRun,
;;;638                width[4], _("n/a"),
;;;639                width[5], pRunSummary->nSuitesFailed,
;;;640                width[6], pRunSummary->nSuitesInactive,
;;;641                width[0], " ",
;;;642                width[1], _("tests"),
;;;643                width[2], pRegistry->uiNumberOfTests,
;;;644                width[3], pRunSummary->nTestsRun,
;;;645                width[4], pRunSummary->nTestsRun - pRunSummary->nTestsFailed,
;;;646                width[5], pRunSummary->nTestsFailed,
;;;647                width[6], pRunSummary->nTestsInactive,
;;;648                width[0], " ",
;;;649                width[1], _("asserts"),
;;;650                width[2], pRunSummary->nAsserts,
;;;651                width[3], pRunSummary->nAsserts,
;;;652                width[4], pRunSummary->nAsserts - pRunSummary->nAssertsFailed,
;;;653                width[5], pRunSummary->nAssertsFailed,
;;;654                width[6], _("n/a"),
;;;655                width[7], _("Elapsed time = "), CU_get_elapsed_time(),  /* makes sure time is updated */
;;;656                width[8], _(" seconds")
;;;657                );
;;;658         result[len-1] = '\0';
000bdc  2200              MOVS     r2,#0
000bde  9843              LDR      r0,[sp,#0x10c]
000be0  1e41              SUBS     r1,r0,#1
000be2  9842              LDR      r0,[sp,#0x108]
000be4  5442              STRB     r2,[r0,r1]
                  |L19.3046|
;;;659      }
;;;660      return result;
000be6  9842              LDR      r0,[sp,#0x108]
;;;661    }
000be8  b04f              ADD      sp,sp,#0x13c
000bea  bd30              POP      {r4,r5,pc}
;;;662    
                          ENDP

                  |L19.3052|
000bec  20736563          DCB      " seconds",0
000bf0  6f6e6473
000bf4  00      
000bf5  00                DCB      0
000bf6  00                DCB      0
000bf7  00                DCB      0
                  |L19.3064|
000bf8  456c6170          DCB      "Elapsed time = ",0
000bfc  73656420
000c00  74696d65
000c04  203d2000
                  |L19.3080|
000c08  6e2f6100          DCB      "n/a",0
                  |L19.3084|
000c0c  61737365          DCB      "asserts",0
000c10  72747300
                  |L19.3092|
000c14  2000              DCB      " ",0
000c16  00                DCB      0
000c17  00                DCB      0
                  |L19.3096|
000c18  74657374          DCB      "tests",0
000c1c  7300    
000c1e  00                DCB      0
000c1f  00                DCB      0
                  |L19.3104|
000c20  73756974          DCB      "suites",0
000c24  657300  
000c27  00                DCB      0
                  |L19.3112|
000c28  496e6163          DCB      "Inactive",0
000c2c  74697665
000c30  00      
000c31  00                DCB      0
000c32  00                DCB      0
000c33  00                DCB      0
                  |L19.3124|
000c34  4661696c          DCB      "Failed",0
000c38  656400  
000c3b  00                DCB      0
                  |L19.3132|
000c3c  50617373          DCB      "Passed",0
000c40  656400  
000c43  00                DCB      0
                  |L19.3140|
000c44  52616e00          DCB      "Ran",0
                  |L19.3144|
000c48  546f7461          DCB      "Total",0
000c4c  6c00    
000c4e  00                DCB      0
000c4f  00                DCB      0
                  |L19.3152|
000c50  54797065          DCB      "Type",0
000c54  00      
000c55  00                DCB      0
000c56  00                DCB      0
000c57  00                DCB      0
                  |L19.3160|
000c58  52756e20          DCB      "Run Summary:",0
000c5c  53756d6d
000c60  6172793a
000c64  00      
000c65  00                DCB      0
000c66  00                DCB      0
000c67  00                DCB      0
                  |L19.3176|
                          DCD      ||.conststring||

                          AREA ||i.CU_get_run_summary||, CODE, READONLY, ALIGN=2

                  CU_get_run_summary PROC
;;;340    /*------------------------------------------------------------------------*/
;;;341    CU_pRunSummary CU_get_run_summary(void)
000000  4800              LDR      r0,|L20.4|
;;;342    {
;;;343      return &f_run_summary;
;;;344    }
000002  4770              BX       lr
;;;345    
                          ENDP

                  |L20.4|
                          DCD      f_run_summary

                          AREA ||i.CU_get_suite_cleanup_failure_handler||, CODE, READONLY, ALIGN=2

                  CU_get_suite_cleanup_failure_handler PROC
;;;257    /*------------------------------------------------------------------------*/
;;;258    CU_SuiteCleanupFailureMessageHandler CU_get_suite_cleanup_failure_handler(void)
000000  4801              LDR      r0,|L21.8|
;;;259    {
;;;260      return f_pSuiteCleanupFailureMessageHandler;
000002  6800              LDR      r0,[r0,#0]  ; f_pSuiteCleanupFailureMessageHandler
;;;261    }
000004  4770              BX       lr
;;;262    
                          ENDP

000006  0000              DCW      0x0000
                  |L21.8|
                          DCD      f_pSuiteCleanupFailureMessageHandler

                          AREA ||i.CU_get_suite_complete_handler||, CODE, READONLY, ALIGN=2

                  CU_get_suite_complete_handler PROC
;;;239    /*------------------------------------------------------------------------*/
;;;240    CU_SuiteCompleteMessageHandler CU_get_suite_complete_handler(void)
000000  4801              LDR      r0,|L22.8|
;;;241    {
;;;242      return f_pSuiteCompleteMessageHandler;
000002  6800              LDR      r0,[r0,#0]  ; f_pSuiteCompleteMessageHandler
;;;243    }
000004  4770              BX       lr
;;;244    
                          ENDP

000006  0000              DCW      0x0000
                  |L22.8|
                          DCD      f_pSuiteCompleteMessageHandler

                          AREA ||i.CU_get_suite_init_failure_handler||, CODE, READONLY, ALIGN=2

                  CU_get_suite_init_failure_handler PROC
;;;251    /*------------------------------------------------------------------------*/
;;;252    CU_SuiteInitFailureMessageHandler CU_get_suite_init_failure_handler(void)
000000  4801              LDR      r0,|L23.8|
;;;253    {
;;;254      return f_pSuiteInitFailureMessageHandler;
000002  6800              LDR      r0,[r0,#0]  ; f_pSuiteInitFailureMessageHandler
;;;255    }
000004  4770              BX       lr
;;;256    
                          ENDP

000006  0000              DCW      0x0000
                  |L23.8|
                          DCD      f_pSuiteInitFailureMessageHandler

                          AREA ||i.CU_get_suite_start_handler||, CODE, READONLY, ALIGN=2

                  CU_get_suite_start_handler PROC
;;;221    /*------------------------------------------------------------------------*/
;;;222    CU_SuiteStartMessageHandler CU_get_suite_start_handler(void)
000000  4801              LDR      r0,|L24.8|
;;;223    {
;;;224      return f_pSuiteStartMessageHandler;
000002  6800              LDR      r0,[r0,#0]  ; f_pSuiteStartMessageHandler
;;;225    }
000004  4770              BX       lr
;;;226    
                          ENDP

000006  0000              DCW      0x0000
                  |L24.8|
                          DCD      f_pSuiteStartMessageHandler

                          AREA ||i.CU_get_test_complete_handler||, CODE, READONLY, ALIGN=2

                  CU_get_test_complete_handler PROC
;;;233    /*------------------------------------------------------------------------*/
;;;234    CU_TestCompleteMessageHandler CU_get_test_complete_handler(void)
000000  4801              LDR      r0,|L25.8|
;;;235    {
;;;236      return f_pTestCompleteMessageHandler;
000002  6800              LDR      r0,[r0,#0]  ; f_pTestCompleteMessageHandler
;;;237    }
000004  4770              BX       lr
;;;238    
                          ENDP

000006  0000              DCW      0x0000
                  |L25.8|
                          DCD      f_pTestCompleteMessageHandler

                          AREA ||i.CU_get_test_start_handler||, CODE, READONLY, ALIGN=2

                  CU_get_test_start_handler PROC
;;;227    /*------------------------------------------------------------------------*/
;;;228    CU_TestStartMessageHandler CU_get_test_start_handler(void)
000000  4801              LDR      r0,|L26.8|
;;;229    {
;;;230      return f_pTestStartMessageHandler;
000002  6800              LDR      r0,[r0,#0]  ; f_pTestStartMessageHandler
;;;231    }
000004  4770              BX       lr
;;;232    
                          ENDP

000006  0000              DCW      0x0000
                  |L26.8|
                          DCD      f_pTestStartMessageHandler

                          AREA ||i.CU_is_test_running||, CODE, READONLY, ALIGN=2

                  CU_is_test_running PROC
;;;528    /*------------------------------------------------------------------------*/
;;;529    CU_BOOL CU_is_test_running(void)
000000  4801              LDR      r0,|L27.8|
;;;530    {
;;;531      return f_bTestIsRunning;
000002  6800              LDR      r0,[r0,#0]  ; f_bTestIsRunning
;;;532    }
000004  4770              BX       lr
;;;533    
                          ENDP

000006  0000              DCW      0x0000
                  |L27.8|
                          DCD      f_bTestIsRunning

                          AREA ||i.CU_print_run_results||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  CU_print_run_results PROC
;;;546    /*------------------------------------------------------------------------*/
;;;547    CU_EXPORT void CU_print_run_results(FILE *file)
000000  b570              PUSH     {r4-r6,lr}
;;;548    {
000002  4605              MOV      r5,r0
;;;549      char *summary_string;
;;;550    
;;;551      assert(NULL != file);
;;;552      summary_string = CU_get_run_results_string();
000004  f7fffffe          BL       CU_get_run_results_string
000008  4604              MOV      r4,r0
;;;553      if (NULL != summary_string) {
00000a  b13c              CBZ      r4,|L28.28|
;;;554    #ifdef __CUNIT_USE_FILE_SYSTEM__
;;;555        fprintf(file, "%s", summary_string);
;;;556    #else
;;;557    	printf("%s", summary_string);
00000c  4621              MOV      r1,r4
00000e  a005              ADR      r0,|L28.36|
000010  f7fffffe          BL       __2printf
;;;558    #endif
;;;559        CU_FREE(summary_string);
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       free
00001a  e002              B        |L28.34|
                  |L28.28|
;;;560      }
;;;561      else {
;;;562    #ifdef __CUNIT_USE_FILE_SYSTEM__	  
;;;563        fprintf(file, _("An error occurred printing the run results."));
;;;564    #else
;;;565    	printf(_("An error occurred printing the run results."));
00001c  a002              ADR      r0,|L28.40|
00001e  f7fffffe          BL       __2printf
                  |L28.34|
;;;566    #endif
;;;567      }
;;;568    }
000022  bd70              POP      {r4-r6,pc}
;;;569    
                          ENDP

                  |L28.36|
000024  257300            DCB      "%s",0
000027  00                DCB      0
                  |L28.40|
000028  416e2065          DCB      "An error occurred printing the run results.",0
00002c  72726f72
000030  206f6363
000034  75727265
000038  64207072
00003c  696e7469
000040  6e672074
000044  68652072
000048  756e2072
00004c  6573756c
000050  74732e00

                          AREA ||i.CU_run_all_tests||, CODE, READONLY, ALIGN=2

                  CU_run_all_tests PROC
;;;346    /*------------------------------------------------------------------------*/
;;;347    CU_ErrorCode CU_run_all_tests(void)
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;348    {
;;;349      CU_pTestRegistry pRegistry = CU_get_registry();
000004  f7fffffe          BL       CU_get_registry
000008  4682              MOV      r10,r0
;;;350      CU_pSuite pSuite = NULL;
00000a  2400              MOVS     r4,#0
;;;351      CU_ErrorCode result = CUE_SUCCESS;
00000c  46a1              MOV      r9,r4
;;;352      CU_ErrorCode result2;
;;;353    
;;;354      /* Clear results from the previous run */
;;;355      clear_previous_results(&f_run_summary, &f_failure_list);
00000e  492a              LDR      r1,|L29.184|
000010  482a              LDR      r0,|L29.188|
000012  f7fffffe          BL       clear_previous_results
;;;356    
;;;357      if (NULL == pRegistry) {
000016  f1ba0f00          CMP      r10,#0
00001a  d102              BNE      |L29.34|
;;;358        result = CUE_NOREGISTRY;
00001c  f04f090a          MOV      r9,#0xa
000020  e042              B        |L29.168|
                  |L29.34|
;;;359      }
;;;360      else {
;;;361        /* test run is starting - set flag */
;;;362        f_bTestIsRunning = CU_TRUE;
000022  2001              MOVS     r0,#1
000024  4926              LDR      r1,|L29.192|
000026  6008              STR      r0,[r1,#0]  ; f_bTestIsRunning
;;;363        f_start_time = clock();
000028  f7fffffe          BL       clock
00002c  4925              LDR      r1,|L29.196|
00002e  6008              STR      r0,[r1,#0]  ; f_start_time
;;;364    
;;;365        pSuite = pRegistry->pSuite;
000030  f8da4008          LDR      r4,[r10,#8]
;;;366        while ((NULL != pSuite) && ((CUE_SUCCESS == result) || (CU_get_error_action() == CUEA_IGNORE))) {
000034  e00c              B        |L29.80|
                  |L29.54|
;;;367          result2 = run_single_suite(pSuite, &f_run_summary);
000036  4921              LDR      r1,|L29.188|
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       run_single_suite
00003e  4683              MOV      r11,r0
;;;368          result = (CUE_SUCCESS == result) ? result2 : result;  /* result = 1st error encountered */
000040  f1b90f00          CMP      r9,#0
000044  d101              BNE      |L29.74|
000046  4658              MOV      r0,r11
000048  e000              B        |L29.76|
                  |L29.74|
00004a  4648              MOV      r0,r9
                  |L29.76|
00004c  4681              MOV      r9,r0
;;;369          pSuite = pSuite->pNext;
00004e  6a24              LDR      r4,[r4,#0x20]
                  |L29.80|
000050  b134              CBZ      r4,|L29.96|
000052  f1b90f00          CMP      r9,#0                 ;366
000056  d0ee              BEQ      |L29.54|
000058  f7fffffe          BL       CU_get_error_action
00005c  2800              CMP      r0,#0                 ;366
00005e  d0ea              BEQ      |L29.54|
                  |L29.96|
;;;370        }
;;;371    
;;;372        /* test run is complete - clear flag */
;;;373        f_bTestIsRunning = CU_FALSE;
000060  2000              MOVS     r0,#0
000062  4917              LDR      r1,|L29.192|
000064  6008              STR      r0,[r1,#0]  ; f_bTestIsRunning
;;;374        f_run_summary.ElapsedTime = ((double)clock() - (double)f_start_time)/(double)CLOCKS_PER_SEC;
000066  4817              LDR      r0,|L29.196|
000068  6800              LDR      r0,[r0,#0]  ; f_start_time
00006a  f7fffffe          BL       __aeabi_ui2d
00006e  4607              MOV      r7,r0
000070  4688              MOV      r8,r1
000072  f7fffffe          BL       clock
000076  9001              STR      r0,[sp,#4]
000078  f7fffffe          BL       __aeabi_ui2d
00007c  463a              MOV      r2,r7
00007e  4643              MOV      r3,r8
000080  e9cd0102          STRD     r0,r1,[sp,#8]
000084  f7fffffe          BL       __aeabi_dsub
000088  4605              MOV      r5,r0
00008a  2200              MOVS     r2,#0
00008c  4b0e              LDR      r3,|L29.200|
00008e  f7fffffe          BL       __aeabi_ddiv
000092  4a0a              LDR      r2,|L29.188|
000094  e9c20116          STRD     r0,r1,[r2,#0x58]
;;;375    
;;;376        if (NULL != f_pAllTestsCompleteMessageHandler) {
000098  480c              LDR      r0,|L29.204|
00009a  6800              LDR      r0,[r0,#0]  ; f_pAllTestsCompleteMessageHandler
00009c  b120              CBZ      r0,|L29.168|
;;;377         (*f_pAllTestsCompleteMessageHandler)(f_failure_list);
00009e  4806              LDR      r0,|L29.184|
0000a0  6800              LDR      r0,[r0,#0]  ; f_failure_list
0000a2  490a              LDR      r1,|L29.204|
0000a4  6809              LDR      r1,[r1,#0]  ; f_pAllTestsCompleteMessageHandler
0000a6  4788              BLX      r1
                  |L29.168|
;;;378        }
;;;379      }
;;;380    
;;;381      CU_set_error(result);
0000a8  4648              MOV      r0,r9
0000aa  f7fffffe          BL       CU_set_error
;;;382      return result;
0000ae  4648              MOV      r0,r9
;;;383    }
0000b0  b004              ADD      sp,sp,#0x10
0000b2  e8bd9ff0          POP      {r4-r12,pc}
;;;384    
                          ENDP

0000b6  0000              DCW      0x0000
                  |L29.184|
                          DCD      f_failure_list
                  |L29.188|
                          DCD      f_run_summary
                  |L29.192|
                          DCD      f_bTestIsRunning
                  |L29.196|
                          DCD      f_start_time
                  |L29.200|
                          DCD      0x408f4000
                  |L29.204|
                          DCD      f_pAllTestsCompleteMessageHandler

                          AREA ||i.CU_run_suite||, CODE, READONLY, ALIGN=2

                  CU_run_suite PROC
;;;385    /*------------------------------------------------------------------------*/
;;;386    CU_ErrorCode CU_run_suite(CU_pSuite pSuite)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;387    {
000004  4682              MOV      r10,r0
;;;388      CU_ErrorCode result = CUE_SUCCESS;
000006  f04f0b00          MOV      r11,#0
;;;389    
;;;390      /* Clear results from the previous run */
;;;391      clear_previous_results(&f_run_summary, &f_failure_list);
00000a  491f              LDR      r1,|L30.136|
00000c  481f              LDR      r0,|L30.140|
00000e  f7fffffe          BL       clear_previous_results
;;;392    
;;;393      if (NULL == pSuite) {
000012  f1ba0f00          CMP      r10,#0
000016  d102              BNE      |L30.30|
;;;394        result = CUE_NOSUITE;
000018  f04f0b14          MOV      r11,#0x14
00001c  e02e              B        |L30.124|
                  |L30.30|
;;;395      }
;;;396      else {
;;;397        /* test run is starting - set flag */
;;;398        f_bTestIsRunning = CU_TRUE;
00001e  2001              MOVS     r0,#1
000020  491b              LDR      r1,|L30.144|
000022  6008              STR      r0,[r1,#0]  ; f_bTestIsRunning
;;;399        f_start_time = clock();
000024  f7fffffe          BL       clock
000028  491a              LDR      r1,|L30.148|
00002a  6008              STR      r0,[r1,#0]  ; f_start_time
;;;400    
;;;401        result = run_single_suite(pSuite, &f_run_summary);
00002c  4917              LDR      r1,|L30.140|
00002e  4650              MOV      r0,r10
000030  f7fffffe          BL       run_single_suite
000034  4683              MOV      r11,r0
;;;402    
;;;403        /* test run is complete - clear flag */
;;;404        f_bTestIsRunning = CU_FALSE;
000036  2000              MOVS     r0,#0
000038  4915              LDR      r1,|L30.144|
00003a  6008              STR      r0,[r1,#0]  ; f_bTestIsRunning
;;;405        f_run_summary.ElapsedTime = ((double)clock() - (double)f_start_time)/(double)CLOCKS_PER_SEC;
00003c  4815              LDR      r0,|L30.148|
00003e  6800              LDR      r0,[r0,#0]  ; f_start_time
000040  f7fffffe          BL       __aeabi_ui2d
000044  4606              MOV      r6,r0
000046  460f              MOV      r7,r1
000048  f7fffffe          BL       clock
00004c  9000              STR      r0,[sp,#0]
00004e  f7fffffe          BL       __aeabi_ui2d
000052  4680              MOV      r8,r0
000054  4632              MOV      r2,r6
000056  463b              MOV      r3,r7
000058  f7fffffe          BL       __aeabi_dsub
00005c  4604              MOV      r4,r0
00005e  2200              MOVS     r2,#0
000060  4b0d              LDR      r3,|L30.152|
000062  f7fffffe          BL       __aeabi_ddiv
000066  4a09              LDR      r2,|L30.140|
000068  e9c20116          STRD     r0,r1,[r2,#0x58]
;;;406    
;;;407        /* run handler for overall completion, if any */
;;;408        if (NULL != f_pAllTestsCompleteMessageHandler) {
00006c  480b              LDR      r0,|L30.156|
00006e  6800              LDR      r0,[r0,#0]  ; f_pAllTestsCompleteMessageHandler
000070  b120              CBZ      r0,|L30.124|
;;;409          (*f_pAllTestsCompleteMessageHandler)(f_failure_list);
000072  4805              LDR      r0,|L30.136|
000074  6800              LDR      r0,[r0,#0]  ; f_failure_list
000076  4909              LDR      r1,|L30.156|
000078  6809              LDR      r1,[r1,#0]  ; f_pAllTestsCompleteMessageHandler
00007a  4788              BLX      r1
                  |L30.124|
;;;410        }
;;;411      }
;;;412    
;;;413      CU_set_error(result);
00007c  4658              MOV      r0,r11
00007e  f7fffffe          BL       CU_set_error
;;;414      return result;
000082  4658              MOV      r0,r11
;;;415    }
000084  e8bd8ff8          POP      {r3-r11,pc}
;;;416    
                          ENDP

                  |L30.136|
                          DCD      f_failure_list
                  |L30.140|
                          DCD      f_run_summary
                  |L30.144|
                          DCD      f_bTestIsRunning
                  |L30.148|
                          DCD      f_start_time
                  |L30.152|
                          DCD      0x408f4000
                  |L30.156|
                          DCD      f_pAllTestsCompleteMessageHandler

                          AREA ||i.CU_run_test||, CODE, READONLY, ALIGN=2

                  CU_run_test PROC
;;;417    /*------------------------------------------------------------------------*/
;;;418    CU_ErrorCode CU_run_test(CU_pSuite pSuite, CU_pTest pTest)
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;419    {
000004  4604              MOV      r4,r0
000006  4689              MOV      r9,r1
;;;420      CU_ErrorCode result = CUE_SUCCESS;
000008  f04f0a00          MOV      r10,#0
;;;421      CU_ErrorCode result2;
;;;422    
;;;423      /* Clear results from the previous run */
;;;424      clear_previous_results(&f_run_summary, &f_failure_list);
00000c  4968              LDR      r1,|L31.432|
00000e  4869              LDR      r0,|L31.436|
000010  f7fffffe          BL       clear_previous_results
;;;425    
;;;426      if (NULL == pSuite) {
000014  b914              CBNZ     r4,|L31.28|
;;;427        result = CUE_NOSUITE;
000016  f04f0a14          MOV      r10,#0x14
00001a  e0c2              B        |L31.418|
                  |L31.28|
;;;428      }
;;;429      else if (NULL == pTest) {
00001c  f1b90f00          CMP      r9,#0
000020  d102              BNE      |L31.40|
;;;430        result = CUE_NOTEST;
000022  f04f0a1e          MOV      r10,#0x1e
000026  e0bc              B        |L31.418|
                  |L31.40|
;;;431      }
;;;432      else if (CU_FALSE == pSuite->fActive) {
000028  6860              LDR      r0,[r4,#4]
00002a  b9b8              CBNZ     r0,|L31.92|
;;;433        f_run_summary.nSuitesInactive++;
00002c  4861              LDR      r0,|L31.436|
00002e  6bc0              LDR      r0,[r0,#0x3c]  ; f_run_summary
000030  1c40              ADDS     r0,r0,#1
000032  4960              LDR      r1,|L31.436|
000034  63c8              STR      r0,[r1,#0x3c]  ; f_run_summary
;;;434        if (CU_FALSE != f_failure_on_inactive) {
000036  4860              LDR      r0,|L31.440|
000038  6800              LDR      r0,[r0,#0]  ; f_failure_on_inactive
00003a  b160              CBZ      r0,|L31.86|
;;;435          add_failure(&f_failure_list, &f_run_summary, CUF_SuiteInactive,
00003c  2000              MOVS     r0,#0
00003e  a15f              ADR      r1,|L31.444|
000040  a262              ADR      r2,|L31.460|
000042  4603              MOV      r3,r0
000044  e9cd1401          STRD     r1,r4,[sp,#4]
000048  9200              STR      r2,[sp,#0]
00004a  9003              STR      r0,[sp,#0xc]
00004c  2201              MOVS     r2,#1
00004e  4959              LDR      r1,|L31.436|
000050  4857              LDR      r0,|L31.432|
000052  f7fffffe          BL       add_failure
                  |L31.86|
;;;436                      0, _("Suite inactive"), _("CUnit System"), pSuite, NULL);
;;;437        }
;;;438        result = CUE_SUITE_INACTIVE;
000056  f04f0a19          MOV      r10,#0x19
00005a  e0a2              B        |L31.418|
                  |L31.92|
;;;439      }
;;;440      else if ((NULL == pTest->pName) || (NULL == CU_get_test_by_name(pTest->pName, pSuite))) {
00005c  f8d90000          LDR      r0,[r9,#0]
000060  b128              CBZ      r0,|L31.110|
000062  4621              MOV      r1,r4
000064  f8d90000          LDR      r0,[r9,#0]
000068  f7fffffe          BL       CU_get_test_by_name
00006c  b910              CBNZ     r0,|L31.116|
                  |L31.110|
;;;441        result = CUE_TEST_NOT_IN_SUITE;
00006e  f04f0a21          MOV      r10,#0x21
000072  e096              B        |L31.418|
                  |L31.116|
;;;442      }
;;;443      else {
;;;444        /* test run is starting - set flag */
;;;445        f_bTestIsRunning = CU_TRUE;
000074  2001              MOVS     r0,#1
000076  4959              LDR      r1,|L31.476|
000078  6008              STR      r0,[r1,#0]  ; f_bTestIsRunning
;;;446        f_start_time = clock();
00007a  f7fffffe          BL       clock
00007e  4958              LDR      r1,|L31.480|
000080  6008              STR      r0,[r1,#0]  ; f_start_time
;;;447    
;;;448        f_pCurTest = NULL;
000082  2000              MOVS     r0,#0
000084  4957              LDR      r1,|L31.484|
000086  6008              STR      r0,[r1,#0]  ; f_pCurTest
;;;449        f_pCurSuite = pSuite;
000088  4857              LDR      r0,|L31.488|
00008a  6004              STR      r4,[r0,#0]  ; f_pCurSuite
;;;450    
;;;451        pSuite->uiNumberOfTestsFailed = 0;
00008c  2000              MOVS     r0,#0
00008e  62a0              STR      r0,[r4,#0x28]
;;;452        pSuite->uiNumberOfTestsSuccess = 0;
000090  62e0              STR      r0,[r4,#0x2c]
;;;453    
;;;454        /* run handler for suite start, if any */
;;;455        if (NULL != f_pSuiteStartMessageHandler) {
000092  4856              LDR      r0,|L31.492|
000094  6800              LDR      r0,[r0,#0]  ; f_pSuiteStartMessageHandler
000096  b118              CBZ      r0,|L31.160|
;;;456          (*f_pSuiteStartMessageHandler)(pSuite);
000098  4620              MOV      r0,r4
00009a  4954              LDR      r1,|L31.492|
00009c  6809              LDR      r1,[r1,#0]  ; f_pSuiteStartMessageHandler
00009e  4788              BLX      r1
                  |L31.160|
;;;457        }
;;;458    
;;;459        /* run the suite initialization function, if any */
;;;460        if ((NULL != pSuite->pInitializeFunc) && (0 != (*pSuite->pInitializeFunc)())) {
0000a0  68e0              LDR      r0,[r4,#0xc]
0000a2  b1f0              CBZ      r0,|L31.226|
0000a4  68e0              LDR      r0,[r4,#0xc]
0000a6  4780              BLX      r0
0000a8  b1d8              CBZ      r0,|L31.226|
;;;461          /* init function had an error - call handler, if any */
;;;462          if (NULL != f_pSuiteInitFailureMessageHandler) {
0000aa  4851              LDR      r0,|L31.496|
0000ac  6800              LDR      r0,[r0,#0]  ; f_pSuiteInitFailureMessageHandler
0000ae  b118              CBZ      r0,|L31.184|
;;;463            (*f_pSuiteInitFailureMessageHandler)(pSuite);
0000b0  4620              MOV      r0,r4
0000b2  494f              LDR      r1,|L31.496|
0000b4  6809              LDR      r1,[r1,#0]  ; f_pSuiteInitFailureMessageHandler
0000b6  4788              BLX      r1
                  |L31.184|
;;;464          }
;;;465          f_run_summary.nSuitesFailed++;
0000b8  483e              LDR      r0,|L31.436|
0000ba  6b80              LDR      r0,[r0,#0x38]  ; f_run_summary
0000bc  1c40              ADDS     r0,r0,#1
0000be  493d              LDR      r1,|L31.436|
0000c0  6388              STR      r0,[r1,#0x38]  ; f_run_summary
;;;466          add_failure(&f_failure_list, &f_run_summary, CUF_SuiteInitFailed, 0,
0000c2  2000              MOVS     r0,#0
0000c4  a13d              ADR      r1,|L31.444|
0000c6  a24b              ADR      r2,|L31.500|
0000c8  4603              MOV      r3,r0
0000ca  e9cd1401          STRD     r1,r4,[sp,#4]
0000ce  9200              STR      r2,[sp,#0]
0000d0  9003              STR      r0,[sp,#0xc]
0000d2  2202              MOVS     r2,#2
0000d4  4937              LDR      r1,|L31.436|
0000d6  4836              LDR      r0,|L31.432|
0000d8  f7fffffe          BL       add_failure
;;;467                      _("Suite Initialization failed - Suite Skipped"),
;;;468                      _("CUnit System"), pSuite, NULL);
;;;469          result = CUE_SINIT_FAILED;
0000dc  f04f0a16          MOV      r10,#0x16
0000e0  e030              B        |L31.324|
                  |L31.226|
;;;470        }
;;;471        /* reach here if no suite initialization, or if it succeeded */
;;;472        else {
;;;473          result2 = run_single_test(pTest, &f_run_summary);
0000e2  4934              LDR      r1,|L31.436|
0000e4  4648              MOV      r0,r9
0000e6  f7fffffe          BL       run_single_test
0000ea  4683              MOV      r11,r0
;;;474          result = (CUE_SUCCESS == result) ? result2 : result;
0000ec  f1ba0f00          CMP      r10,#0
0000f0  d101              BNE      |L31.246|
0000f2  4658              MOV      r0,r11
0000f4  e000              B        |L31.248|
                  |L31.246|
0000f6  4650              MOV      r0,r10
                  |L31.248|
0000f8  4682              MOV      r10,r0
;;;475    
;;;476          /* run the suite cleanup function, if any */
;;;477          if ((NULL != pSuite->pCleanupFunc) && (0 != (*pSuite->pCleanupFunc)())) {
0000fa  6920              LDR      r0,[r4,#0x10]
0000fc  b310              CBZ      r0,|L31.324|
0000fe  6920              LDR      r0,[r4,#0x10]
000100  4780              BLX      r0
000102  b1f8              CBZ      r0,|L31.324|
;;;478            /* cleanup function had an error - call handler, if any */
;;;479            if (NULL != f_pSuiteCleanupFailureMessageHandler) {
000104  4846              LDR      r0,|L31.544|
000106  6800              LDR      r0,[r0,#0]  ; f_pSuiteCleanupFailureMessageHandler
000108  b118              CBZ      r0,|L31.274|
;;;480              (*f_pSuiteCleanupFailureMessageHandler)(pSuite);
00010a  4620              MOV      r0,r4
00010c  4944              LDR      r1,|L31.544|
00010e  6809              LDR      r1,[r1,#0]  ; f_pSuiteCleanupFailureMessageHandler
000110  4788              BLX      r1
                  |L31.274|
;;;481            }
;;;482            f_run_summary.nSuitesFailed++;
000112  4828              LDR      r0,|L31.436|
000114  6b80              LDR      r0,[r0,#0x38]  ; f_run_summary
000116  1c40              ADDS     r0,r0,#1
000118  4926              LDR      r1,|L31.436|
00011a  6388              STR      r0,[r1,#0x38]  ; f_run_summary
;;;483            add_failure(&f_failure_list, &f_run_summary, CUF_SuiteCleanupFailed,
00011c  2000              MOVS     r0,#0
00011e  a127              ADR      r1,|L31.444|
000120  a240              ADR      r2,|L31.548|
000122  4603              MOV      r3,r0
000124  e9cd1401          STRD     r1,r4,[sp,#4]
000128  9200              STR      r2,[sp,#0]
00012a  9003              STR      r0,[sp,#0xc]
00012c  2203              MOVS     r2,#3
00012e  4921              LDR      r1,|L31.436|
000130  481f              LDR      r0,|L31.432|
000132  f7fffffe          BL       add_failure
;;;484                        0, _("Suite cleanup failed."), _("CUnit System"), pSuite, NULL);
;;;485            result = (CUE_SUCCESS == result) ? CUE_SCLEAN_FAILED : result;
000136  f1ba0f00          CMP      r10,#0
00013a  d101              BNE      |L31.320|
00013c  2017              MOVS     r0,#0x17
00013e  e000              B        |L31.322|
                  |L31.320|
000140  4650              MOV      r0,r10
                  |L31.322|
000142  4682              MOV      r10,r0
                  |L31.324|
;;;486          }
;;;487        }
;;;488    
;;;489        /* run handler for suite completion, if any */
;;;490        if (NULL != f_pSuiteCompleteMessageHandler) {
000144  483d              LDR      r0,|L31.572|
000146  6800              LDR      r0,[r0,#0]  ; f_pSuiteCompleteMessageHandler
000148  b120              CBZ      r0,|L31.340|
;;;491          (*f_pSuiteCompleteMessageHandler)(pSuite, NULL);
00014a  2100              MOVS     r1,#0
00014c  4620              MOV      r0,r4
00014e  4a3b              LDR      r2,|L31.572|
000150  6812              LDR      r2,[r2,#0]  ; f_pSuiteCompleteMessageHandler
000152  4790              BLX      r2
                  |L31.340|
;;;492        }
;;;493    
;;;494        /* test run is complete - clear flag */
;;;495        f_bTestIsRunning = CU_FALSE;
000154  2000              MOVS     r0,#0
000156  4921              LDR      r1,|L31.476|
000158  6008              STR      r0,[r1,#0]  ; f_bTestIsRunning
;;;496        f_run_summary.ElapsedTime = ((double)clock() - (double)f_start_time)/(double)CLOCKS_PER_SEC;
00015a  4821              LDR      r0,|L31.480|
00015c  6800              LDR      r0,[r0,#0]  ; f_start_time
00015e  f7fffffe          BL       __aeabi_ui2d
000162  4607              MOV      r7,r0
000164  4688              MOV      r8,r1
000166  f7fffffe          BL       clock
00016a  9001              STR      r0,[sp,#4]
00016c  f7fffffe          BL       __aeabi_ui2d
000170  463a              MOV      r2,r7
000172  4643              MOV      r3,r8
000174  e9cd0102          STRD     r0,r1,[sp,#8]
000178  f7fffffe          BL       __aeabi_dsub
00017c  4605              MOV      r5,r0
00017e  2200              MOVS     r2,#0
000180  4b2f              LDR      r3,|L31.576|
000182  f7fffffe          BL       __aeabi_ddiv
000186  4a0b              LDR      r2,|L31.436|
000188  e9c20116          STRD     r0,r1,[r2,#0x58]
;;;497    
;;;498        /* run handler for overall completion, if any */
;;;499        if (NULL != f_pAllTestsCompleteMessageHandler) {
00018c  482d              LDR      r0,|L31.580|
00018e  6800              LDR      r0,[r0,#0]  ; f_pAllTestsCompleteMessageHandler
000190  b120              CBZ      r0,|L31.412|
;;;500          (*f_pAllTestsCompleteMessageHandler)(f_failure_list);
000192  4807              LDR      r0,|L31.432|
000194  6800              LDR      r0,[r0,#0]  ; f_failure_list
000196  492b              LDR      r1,|L31.580|
000198  6809              LDR      r1,[r1,#0]  ; f_pAllTestsCompleteMessageHandler
00019a  4788              BLX      r1
                  |L31.412|
;;;501        }
;;;502    
;;;503        f_pCurSuite = NULL;
00019c  2000              MOVS     r0,#0
00019e  4912              LDR      r1,|L31.488|
0001a0  6008              STR      r0,[r1,#0]  ; f_pCurSuite
                  |L31.418|
;;;504      }
;;;505    
;;;506      CU_set_error(result);
0001a2  4650              MOV      r0,r10
0001a4  f7fffffe          BL       CU_set_error
;;;507      return result;
0001a8  4650              MOV      r0,r10
;;;508    }
0001aa  b004              ADD      sp,sp,#0x10
0001ac  e8bd9ff0          POP      {r4-r12,pc}
;;;509    
                          ENDP

                  |L31.432|
                          DCD      f_failure_list
                  |L31.436|
                          DCD      f_run_summary
                  |L31.440|
                          DCD      f_failure_on_inactive
                  |L31.444|
0001bc  43556e69          DCB      "CUnit System",0
0001c0  74205379
0001c4  7374656d
0001c8  00      
0001c9  00                DCB      0
0001ca  00                DCB      0
0001cb  00                DCB      0
                  |L31.460|
0001cc  53756974          DCB      "Suite inactive",0
0001d0  6520696e
0001d4  61637469
0001d8  766500  
0001db  00                DCB      0
                  |L31.476|
                          DCD      f_bTestIsRunning
                  |L31.480|
                          DCD      f_start_time
                  |L31.484|
                          DCD      f_pCurTest
                  |L31.488|
                          DCD      f_pCurSuite
                  |L31.492|
                          DCD      f_pSuiteStartMessageHandler
                  |L31.496|
                          DCD      f_pSuiteInitFailureMessageHandler
                  |L31.500|
0001f4  53756974          DCB      "Suite Initialization failed - Suite Skipped",0
0001f8  6520496e
0001fc  69746961
000200  6c697a61
000204  74696f6e
000208  20666169
00020c  6c656420
000210  2d205375
000214  69746520
000218  536b6970
00021c  70656400
                  |L31.544|
                          DCD      f_pSuiteCleanupFailureMessageHandler
                  |L31.548|
000224  53756974          DCB      "Suite cleanup failed.",0
000228  6520636c
00022c  65616e75
000230  70206661
000234  696c6564
000238  2e00    
00023a  00                DCB      0
00023b  00                DCB      0
                  |L31.572|
                          DCD      f_pSuiteCompleteMessageHandler
                  |L31.576|
                          DCD      0x408f4000
                  |L31.580|
                          DCD      f_pAllTestsCompleteMessageHandler

                          AREA ||i.CU_set_all_test_complete_handler||, CODE, READONLY, ALIGN=2

                  CU_set_all_test_complete_handler PROC
;;;203    /*------------------------------------------------------------------------*/
;;;204    void CU_set_all_test_complete_handler(CU_AllTestsCompleteMessageHandler pAllTestsCompleteHandler)
000000  4901              LDR      r1,|L32.8|
;;;205    {
;;;206      f_pAllTestsCompleteMessageHandler = pAllTestsCompleteHandler;
000002  6008              STR      r0,[r1,#0]  ; f_pAllTestsCompleteMessageHandler
;;;207    }
000004  4770              BX       lr
;;;208    
                          ENDP

000006  0000              DCW      0x0000
                  |L32.8|
                          DCD      f_pAllTestsCompleteMessageHandler

                          AREA ||i.CU_set_fail_on_inactive||, CODE, READONLY, ALIGN=2

                  CU_set_fail_on_inactive PROC
;;;534    /*------------------------------------------------------------------------*/
;;;535    CU_EXPORT void CU_set_fail_on_inactive(CU_BOOL new_inactive)
000000  4901              LDR      r1,|L33.8|
;;;536    {
;;;537      f_failure_on_inactive = new_inactive;
000002  6008              STR      r0,[r1,#0]  ; f_failure_on_inactive
;;;538    }
000004  4770              BX       lr
;;;539    
                          ENDP

000006  0000              DCW      0x0000
                  |L33.8|
                          DCD      f_failure_on_inactive

                          AREA ||i.CU_set_suite_cleanup_failure_handler||, CODE, READONLY, ALIGN=2

                  CU_set_suite_cleanup_failure_handler PROC
;;;215    /*------------------------------------------------------------------------*/
;;;216    void CU_set_suite_cleanup_failure_handler(CU_SuiteCleanupFailureMessageHandler pSuiteCleanupFailureHandler)
000000  4901              LDR      r1,|L34.8|
;;;217    {
;;;218      f_pSuiteCleanupFailureMessageHandler = pSuiteCleanupFailureHandler;
000002  6008              STR      r0,[r1,#0]  ; f_pSuiteCleanupFailureMessageHandler
;;;219    }
000004  4770              BX       lr
;;;220    
                          ENDP

000006  0000              DCW      0x0000
                  |L34.8|
                          DCD      f_pSuiteCleanupFailureMessageHandler

                          AREA ||i.CU_set_suite_complete_handler||, CODE, READONLY, ALIGN=2

                  CU_set_suite_complete_handler PROC
;;;197    /*------------------------------------------------------------------------*/
;;;198    void CU_set_suite_complete_handler(CU_SuiteCompleteMessageHandler pSuiteCompleteHandler)
000000  4901              LDR      r1,|L35.8|
;;;199    {
;;;200      f_pSuiteCompleteMessageHandler = pSuiteCompleteHandler;
000002  6008              STR      r0,[r1,#0]  ; f_pSuiteCompleteMessageHandler
;;;201    }
000004  4770              BX       lr
;;;202    
                          ENDP

000006  0000              DCW      0x0000
                  |L35.8|
                          DCD      f_pSuiteCompleteMessageHandler

                          AREA ||i.CU_set_suite_init_failure_handler||, CODE, READONLY, ALIGN=2

                  CU_set_suite_init_failure_handler PROC
;;;209    /*------------------------------------------------------------------------*/
;;;210    void CU_set_suite_init_failure_handler(CU_SuiteInitFailureMessageHandler pSuiteInitFailureHandler)
000000  4901              LDR      r1,|L36.8|
;;;211    {
;;;212      f_pSuiteInitFailureMessageHandler = pSuiteInitFailureHandler;
000002  6008              STR      r0,[r1,#0]  ; f_pSuiteInitFailureMessageHandler
;;;213    }
000004  4770              BX       lr
;;;214    
                          ENDP

000006  0000              DCW      0x0000
                  |L36.8|
                          DCD      f_pSuiteInitFailureMessageHandler

                          AREA ||i.CU_set_suite_start_handler||, CODE, READONLY, ALIGN=2

                  CU_set_suite_start_handler PROC
;;;179    /*------------------------------------------------------------------------*/
;;;180    void CU_set_suite_start_handler(CU_SuiteStartMessageHandler pSuiteStartHandler)
000000  4901              LDR      r1,|L37.8|
;;;181    {
;;;182      f_pSuiteStartMessageHandler = pSuiteStartHandler;
000002  6008              STR      r0,[r1,#0]  ; f_pSuiteStartMessageHandler
;;;183    }
000004  4770              BX       lr
;;;184    
                          ENDP

000006  0000              DCW      0x0000
                  |L37.8|
                          DCD      f_pSuiteStartMessageHandler

                          AREA ||i.CU_set_test_complete_handler||, CODE, READONLY, ALIGN=2

                  CU_set_test_complete_handler PROC
;;;191    /*------------------------------------------------------------------------*/
;;;192    void CU_set_test_complete_handler(CU_TestCompleteMessageHandler pTestCompleteHandler)
000000  4901              LDR      r1,|L38.8|
;;;193    {
;;;194      f_pTestCompleteMessageHandler = pTestCompleteHandler;
000002  6008              STR      r0,[r1,#0]  ; f_pTestCompleteMessageHandler
;;;195    }
000004  4770              BX       lr
;;;196    
                          ENDP

000006  0000              DCW      0x0000
                  |L38.8|
                          DCD      f_pTestCompleteMessageHandler

                          AREA ||i.CU_set_test_start_handler||, CODE, READONLY, ALIGN=2

                  CU_set_test_start_handler PROC
;;;185    /*------------------------------------------------------------------------*/
;;;186    void CU_set_test_start_handler(CU_TestStartMessageHandler pTestStartHandler)
000000  4901              LDR      r1,|L39.8|
;;;187    {
;;;188      f_pTestStartMessageHandler = pTestStartHandler;
000002  6008              STR      r0,[r1,#0]  ; f_pTestStartMessageHandler
;;;189    }
000004  4770              BX       lr
;;;190    
                          ENDP

000006  0000              DCW      0x0000
                  |L39.8|
                          DCD      f_pTestStartMessageHandler

                          AREA ||i.add_failure||, CODE, READONLY, ALIGN=2

                  add_failure PROC
;;;686     */
;;;687    static void add_failure(CU_pFailureRecord* ppFailure,
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;688                            CU_pRunSummary pRunSummary,
;;;689                            CU_FailureType type,
;;;690                            unsigned int uiLineNumber,
;;;691                            const char *szCondition,
;;;692                            const char *szFileName,
;;;693                            CU_pSuite pSuite,
;;;694                            CU_pTest pTest)
;;;695    {
000004  4607              MOV      r7,r0
000006  460e              MOV      r6,r1
000008  4692              MOV      r10,r2
00000a  469b              MOV      r11,r3
00000c  e9dd890a          LDRD     r8,r9,[sp,#0x28]
;;;696      CU_pFailureRecord pFailureNew = NULL;
000010  2400              MOVS     r4,#0
;;;697      CU_pFailureRecord pTemp = NULL;
000012  2500              MOVS     r5,#0
;;;698    
;;;699      assert(NULL != ppFailure);
;;;700    
;;;701      pFailureNew = (CU_pFailureRecord)CU_MALLOC(sizeof(CU_FailureRecord));
000014  2020              MOVS     r0,#0x20
000016  f7fffffe          BL       malloc
00001a  4604              MOV      r4,r0
;;;702    
;;;703      if (NULL == pFailureNew) {
00001c  b90c              CBNZ     r4,|L40.34|
                  |L40.30|
;;;704        return;
;;;705      }
;;;706    
;;;707      pFailureNew->strFileName = NULL;
;;;708      pFailureNew->strCondition = NULL;
;;;709      if (NULL != szFileName) {
;;;710        pFailureNew->strFileName = (char*)CU_MALLOC(strlen(szFileName) + 1);
;;;711        if(NULL == pFailureNew->strFileName) {
;;;712          CU_FREE(pFailureNew);
;;;713          return;
;;;714        }
;;;715        strcpy(pFailureNew->strFileName, szFileName);
;;;716      }
;;;717    
;;;718      if (NULL != szCondition) {
;;;719        pFailureNew->strCondition = (char*)CU_MALLOC(strlen(szCondition) + 1);
;;;720        if (NULL == pFailureNew->strCondition) {
;;;721          if(NULL != pFailureNew->strFileName) {
;;;722            CU_FREE(pFailureNew->strFileName);
;;;723          }
;;;724          CU_FREE(pFailureNew);
;;;725          return;
;;;726        }
;;;727        strcpy(pFailureNew->strCondition, szCondition);
;;;728      }
;;;729    
;;;730      pFailureNew->type = type;
;;;731      pFailureNew->uiLineNumber = uiLineNumber;
;;;732      pFailureNew->pTest = pTest;
;;;733      pFailureNew->pSuite = pSuite;
;;;734      pFailureNew->pNext = NULL;
;;;735      pFailureNew->pPrev = NULL;
;;;736    
;;;737      pTemp = *ppFailure;
;;;738      if (NULL != pTemp) {
;;;739        while (NULL != pTemp->pNext) {
;;;740          pTemp = pTemp->pNext;
;;;741        }
;;;742        pTemp->pNext = pFailureNew;
;;;743        pFailureNew->pPrev = pTemp;
;;;744      }
;;;745      else {
;;;746        *ppFailure = pFailureNew;
;;;747      }
;;;748    
;;;749      if (NULL != pRunSummary) {
;;;750        ++(pRunSummary->nFailureRecords);
;;;751      }
;;;752      f_last_failure = pFailureNew;
;;;753    }
00001e  e8bd8ff8          POP      {r3-r11,pc}
                  |L40.34|
000022  2000              MOVS     r0,#0                 ;707
000024  60a0              STR      r0,[r4,#8]            ;707
000026  60e0              STR      r0,[r4,#0xc]          ;708
000028  f1b90f00          CMP      r9,#0                 ;709
00002c  d011              BEQ      |L40.82|
00002e  4648              MOV      r0,r9                 ;710
000030  f7fffffe          BL       strlen
000034  1c40              ADDS     r0,r0,#1              ;710
000036  9000              STR      r0,[sp,#0]            ;710
000038  f7fffffe          BL       malloc
00003c  60a0              STR      r0,[r4,#8]            ;710
00003e  68a0              LDR      r0,[r4,#8]            ;711
000040  b918              CBNZ     r0,|L40.74|
000042  4620              MOV      r0,r4                 ;712
000044  f7fffffe          BL       free
000048  e7e9              B        |L40.30|
                  |L40.74|
00004a  4649              MOV      r1,r9                 ;715
00004c  68a0              LDR      r0,[r4,#8]            ;715
00004e  f7fffffe          BL       strcpy
                  |L40.82|
000052  f1b80f00          CMP      r8,#0                 ;718
000056  d016              BEQ      |L40.134|
000058  4640              MOV      r0,r8                 ;719
00005a  f7fffffe          BL       strlen
00005e  1c40              ADDS     r0,r0,#1              ;719
000060  9000              STR      r0,[sp,#0]            ;719
000062  f7fffffe          BL       malloc
000066  60e0              STR      r0,[r4,#0xc]          ;719
000068  68e0              LDR      r0,[r4,#0xc]          ;720
00006a  b940              CBNZ     r0,|L40.126|
00006c  68a0              LDR      r0,[r4,#8]            ;721
00006e  b110              CBZ      r0,|L40.118|
000070  68a0              LDR      r0,[r4,#8]            ;722
000072  f7fffffe          BL       free
                  |L40.118|
000076  4620              MOV      r0,r4                 ;724
000078  f7fffffe          BL       free
00007c  e7cf              B        |L40.30|
                  |L40.126|
00007e  4641              MOV      r1,r8                 ;727
000080  68e0              LDR      r0,[r4,#0xc]          ;727
000082  f7fffffe          BL       strcpy
                  |L40.134|
000086  f884a000          STRB     r10,[r4,#0]           ;730
00008a  f8c4b004          STR      r11,[r4,#4]           ;731
00008e  980d              LDR      r0,[sp,#0x34]         ;732
000090  6120              STR      r0,[r4,#0x10]         ;732
000092  980c              LDR      r0,[sp,#0x30]         ;733
000094  6160              STR      r0,[r4,#0x14]         ;733
000096  2000              MOVS     r0,#0                 ;734
000098  61a0              STR      r0,[r4,#0x18]         ;734
00009a  61e0              STR      r0,[r4,#0x1c]         ;735
00009c  683d              LDR      r5,[r7,#0]            ;737
00009e  b13d              CBZ      r5,|L40.176|
0000a0  e000              B        |L40.164|
                  |L40.162|
0000a2  69ad              LDR      r5,[r5,#0x18]         ;740
                  |L40.164|
0000a4  69a8              LDR      r0,[r5,#0x18]         ;739
0000a6  2800              CMP      r0,#0                 ;739
0000a8  d1fb              BNE      |L40.162|
0000aa  61ac              STR      r4,[r5,#0x18]         ;742
0000ac  61e5              STR      r5,[r4,#0x1c]         ;743
0000ae  e000              B        |L40.178|
                  |L40.176|
0000b0  603c              STR      r4,[r7,#0]            ;746
                  |L40.178|
0000b2  b116              CBZ      r6,|L40.186|
0000b4  6d70              LDR      r0,[r6,#0x54]         ;750
0000b6  1c40              ADDS     r0,r0,#1              ;750
0000b8  6570              STR      r0,[r6,#0x54]         ;750
                  |L40.186|
0000ba  4802              LDR      r0,|L40.196|
0000bc  6004              STR      r4,[r0,#0]            ;752  ; f_last_failure
0000be  bf00              NOP      
0000c0  e7ad              B        |L40.30|
;;;754    
                          ENDP

0000c2  0000              DCW      0x0000
                  |L40.196|
                          DCD      f_last_failure

                          AREA ||i.cleanup_failure_list||, CODE, READONLY, ALIGN=1

                  cleanup_failure_list PROC
;;;800     */
;;;801    static void cleanup_failure_list(CU_pFailureRecord* ppFailure)
000000  b570              PUSH     {r4-r6,lr}
;;;802    {
000002  4605              MOV      r5,r0
;;;803      CU_pFailureRecord pCurFailure = NULL;
000004  2400              MOVS     r4,#0
;;;804      CU_pFailureRecord pNextFailure = NULL;
000006  2600              MOVS     r6,#0
;;;805    
;;;806      pCurFailure = *ppFailure;
000008  682c              LDR      r4,[r5,#0]
;;;807    
;;;808      while (NULL != pCurFailure) {
00000a  e00e              B        |L41.42|
                  |L41.12|
;;;809    
;;;810        if (NULL != pCurFailure->strCondition) {
00000c  68e0              LDR      r0,[r4,#0xc]
00000e  b110              CBZ      r0,|L41.22|
;;;811          CU_FREE(pCurFailure->strCondition);
000010  68e0              LDR      r0,[r4,#0xc]
000012  f7fffffe          BL       free
                  |L41.22|
;;;812        }
;;;813    
;;;814        if (NULL != pCurFailure->strFileName) {
000016  68a0              LDR      r0,[r4,#8]
000018  b110              CBZ      r0,|L41.32|
;;;815          CU_FREE(pCurFailure->strFileName);
00001a  68a0              LDR      r0,[r4,#8]
00001c  f7fffffe          BL       free
                  |L41.32|
;;;816        }
;;;817    
;;;818        pNextFailure = pCurFailure->pNext;
000020  69a6              LDR      r6,[r4,#0x18]
;;;819        CU_FREE(pCurFailure);
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       free
;;;820        pCurFailure = pNextFailure;
000028  4634              MOV      r4,r6
                  |L41.42|
00002a  2c00              CMP      r4,#0                 ;808
00002c  d1ee              BNE      |L41.12|
;;;821      }
;;;822    
;;;823      *ppFailure = NULL;
00002e  2000              MOVS     r0,#0
000030  6028              STR      r0,[r5,#0]
;;;824    }
000032  bd70              POP      {r4-r6,pc}
;;;825    
                          ENDP


                          AREA ||i.clear_previous_results||, CODE, READONLY, ALIGN=2

                  clear_previous_results PROC
;;;768     */
;;;769    static void clear_previous_results(CU_pRunSummary pRunSummary, CU_pFailureRecord* ppFailure)
000000  b570              PUSH     {r4-r6,lr}
;;;770    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;771      assert(NULL != pRunSummary);
;;;772      assert(NULL != ppFailure);
;;;773    
;;;774      pRunSummary->nSuitesRun = 0;
000006  2000              MOVS     r0,#0
000008  6360              STR      r0,[r4,#0x34]
;;;775      pRunSummary->nSuitesFailed = 0;
00000a  63a0              STR      r0,[r4,#0x38]
;;;776      pRunSummary->nSuitesInactive = 0;
00000c  63e0              STR      r0,[r4,#0x3c]
;;;777      pRunSummary->nTestsRun = 0;
00000e  6420              STR      r0,[r4,#0x40]
;;;778      pRunSummary->nTestsFailed = 0;
000010  6460              STR      r0,[r4,#0x44]
;;;779      pRunSummary->nTestsInactive = 0;
000012  64a0              STR      r0,[r4,#0x48]
;;;780      pRunSummary->nAsserts = 0;
000014  64e0              STR      r0,[r4,#0x4c]
;;;781      pRunSummary->nAssertsFailed = 0;
000016  6520              STR      r0,[r4,#0x50]
;;;782      pRunSummary->nFailureRecords = 0;
000018  6560              STR      r0,[r4,#0x54]
;;;783      pRunSummary->ElapsedTime = 0.0;
00001a  2100              MOVS     r1,#0
00001c  65a1              STR      r1,[r4,#0x58]
00001e  65e1              STR      r1,[r4,#0x5c]
;;;784    
;;;785      if (NULL != *ppFailure) {
000020  6828              LDR      r0,[r5,#0]
000022  b110              CBZ      r0,|L42.42|
;;;786        cleanup_failure_list(ppFailure);
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       cleanup_failure_list
                  |L42.42|
;;;787      }
;;;788    
;;;789      f_last_failure = NULL;
00002a  2000              MOVS     r0,#0
00002c  4901              LDR      r1,|L42.52|
00002e  6008              STR      r0,[r1,#0]  ; f_last_failure
;;;790    }
000030  bd70              POP      {r4-r6,pc}
;;;791    
                          ENDP

000032  0000              DCW      0x0000
                  |L42.52|
                          DCD      f_last_failure

                          AREA ||i.run_single_suite||, CODE, READONLY, ALIGN=2

                  run_single_suite PROC
;;;840     */
;;;841    static CU_ErrorCode run_single_suite(CU_pSuite pSuite, CU_pRunSummary pRunSummary)
000000  e92d47ff          PUSH     {r0-r10,lr}
;;;842    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;843      CU_pTest pTest = NULL;
000008  2600              MOVS     r6,#0
;;;844      unsigned int nStartFailures;
;;;845      /* keep track of the last failure BEFORE running the test */
;;;846      CU_pFailureRecord pLastFailure = f_last_failure;
00000a  4862              LDR      r0,|L43.404|
00000c  f8d08000          LDR      r8,[r0,#0]  ; f_last_failure
;;;847      CU_ErrorCode result = CUE_SUCCESS;
000010  2700              MOVS     r7,#0
;;;848      CU_ErrorCode result2;
;;;849    
;;;850      assert(NULL != pSuite);
;;;851      assert(NULL != pRunSummary);
;;;852    
;;;853      nStartFailures = pRunSummary->nFailureRecords;
000012  f8d5a054          LDR      r10,[r5,#0x54]
;;;854    
;;;855      f_pCurTest = NULL;
000016  2000              MOVS     r0,#0
000018  495f              LDR      r1,|L43.408|
00001a  6008              STR      r0,[r1,#0]  ; f_pCurTest
;;;856      f_pCurSuite = pSuite;
00001c  485f              LDR      r0,|L43.412|
00001e  6004              STR      r4,[r0,#0]  ; f_pCurSuite
;;;857    
;;;858      /* run handler for suite start, if any */
;;;859      if (NULL != f_pSuiteStartMessageHandler) {
000020  485f              LDR      r0,|L43.416|
000022  6800              LDR      r0,[r0,#0]  ; f_pSuiteStartMessageHandler
000024  b118              CBZ      r0,|L43.46|
;;;860        (*f_pSuiteStartMessageHandler)(pSuite);
000026  4620              MOV      r0,r4
000028  495d              LDR      r1,|L43.416|
00002a  6809              LDR      r1,[r1,#0]  ; f_pSuiteStartMessageHandler
00002c  4788              BLX      r1
                  |L43.46|
;;;861      }
;;;862    
;;;863      /* run suite if it's active */
;;;864      if (CU_FALSE != pSuite->fActive) {
00002e  6860              LDR      r0,[r4,#4]
000030  2800              CMP      r0,#0
000032  d07a              BEQ      |L43.298|
;;;865    
;;;866        /* run the suite initialization function, if any */
;;;867        if ((NULL != pSuite->pInitializeFunc) && (0 != (*pSuite->pInitializeFunc)())) {
000034  68e0              LDR      r0,[r4,#0xc]
000036  2800              CMP      r0,#0
000038  d01b              BEQ      |L43.114|
00003a  68e0              LDR      r0,[r4,#0xc]
00003c  4780              BLX      r0
00003e  b1c0              CBZ      r0,|L43.114|
;;;868          /* init function had an error - call handler, if any */
;;;869          if (NULL != f_pSuiteInitFailureMessageHandler) {
000040  4858              LDR      r0,|L43.420|
000042  6800              LDR      r0,[r0,#0]  ; f_pSuiteInitFailureMessageHandler
000044  b118              CBZ      r0,|L43.78|
;;;870            (*f_pSuiteInitFailureMessageHandler)(pSuite);
000046  4620              MOV      r0,r4
000048  4956              LDR      r1,|L43.420|
00004a  6809              LDR      r1,[r1,#0]  ; f_pSuiteInitFailureMessageHandler
00004c  4788              BLX      r1
                  |L43.78|
;;;871          }
;;;872          pRunSummary->nSuitesFailed++;
00004e  6ba8              LDR      r0,[r5,#0x38]
000050  1c40              ADDS     r0,r0,#1
000052  63a8              STR      r0,[r5,#0x38]
;;;873          add_failure(&f_failure_list, &f_run_summary, CUF_SuiteInitFailed, 0,
000054  2000              MOVS     r0,#0
000056  a154              ADR      r1,|L43.424|
000058  a257              ADR      r2,|L43.440|
00005a  4603              MOV      r3,r0
00005c  e9cd1401          STRD     r1,r4,[sp,#4]
000060  9200              STR      r2,[sp,#0]
000062  9003              STR      r0,[sp,#0xc]
000064  2202              MOVS     r2,#2
000066  495f              LDR      r1,|L43.484|
000068  485f              LDR      r0,|L43.488|
00006a  f7fffffe          BL       add_failure
;;;874                      _("Suite Initialization failed - Suite Skipped"),
;;;875                      _("CUnit System"), pSuite, NULL);
;;;876          result = CUE_SINIT_FAILED;
00006e  2716              MOVS     r7,#0x16
000070  e071              B        |L43.342|
                  |L43.114|
;;;877        }
;;;878    
;;;879        /* reach here if no suite initialization, or if it succeeded */
;;;880        else {
;;;881          pTest = pSuite->pTest;
000072  68a6              LDR      r6,[r4,#8]
;;;882          while ((NULL != pTest) && ((CUE_SUCCESS == result) || (CU_get_error_action() == CUEA_IGNORE))) {
000074  e02a              B        |L43.204|
                  |L43.118|
;;;883            if (CU_FALSE != pTest->fActive) {
000076  6870              LDR      r0,[r6,#4]
000078  b150              CBZ      r0,|L43.144|
;;;884              result2 = run_single_test(pTest, pRunSummary);
00007a  4629              MOV      r1,r5
00007c  4630              MOV      r0,r6
00007e  f7fffffe          BL       run_single_test
000082  4681              MOV      r9,r0
;;;885              result = (CUE_SUCCESS == result) ? result2 : result;
000084  b90f              CBNZ     r7,|L43.138|
000086  4648              MOV      r0,r9
000088  e000              B        |L43.140|
                  |L43.138|
00008a  4638              MOV      r0,r7
                  |L43.140|
00008c  4607              MOV      r7,r0
00008e  e014              B        |L43.186|
                  |L43.144|
;;;886            }
;;;887            else {
;;;888              f_run_summary.nTestsInactive++;
000090  4854              LDR      r0,|L43.484|
000092  6c80              LDR      r0,[r0,#0x48]  ; f_run_summary
000094  1c40              ADDS     r0,r0,#1
000096  4953              LDR      r1,|L43.484|
000098  6488              STR      r0,[r1,#0x48]  ; f_run_summary
;;;889              if (CU_FALSE != f_failure_on_inactive) {
00009a  4854              LDR      r0,|L43.492|
00009c  6800              LDR      r0,[r0,#0]  ; f_failure_on_inactive
00009e  b160              CBZ      r0,|L43.186|
;;;890                add_failure(&f_failure_list, &f_run_summary, CUF_TestInactive,
0000a0  a041              ADR      r0,|L43.424|
0000a2  a153              ADR      r1,|L43.496|
0000a4  2300              MOVS     r3,#0
0000a6  2204              MOVS     r2,#4
0000a8  e9cd4602          STRD     r4,r6,[sp,#8]
0000ac  e9cd1000          STRD     r1,r0,[sp,#0]
0000b0  494c              LDR      r1,|L43.484|
0000b2  484d              LDR      r0,|L43.488|
0000b4  f7fffffe          BL       add_failure
;;;891                            0, _("Test inactive"), _("CUnit System"), pSuite, pTest);
;;;892                result = CUE_TEST_INACTIVE;
0000b8  2722              MOVS     r7,#0x22
                  |L43.186|
;;;893              }
;;;894            }
;;;895            pTest = pTest->pNext;
0000ba  6936              LDR      r6,[r6,#0x10]
;;;896    
;;;897            if (CUE_SUCCESS == result) {
0000bc  b91f              CBNZ     r7,|L43.198|
;;;898              pSuite->uiNumberOfTestsFailed++;
0000be  6aa0              LDR      r0,[r4,#0x28]
0000c0  1c40              ADDS     r0,r0,#1
0000c2  62a0              STR      r0,[r4,#0x28]
0000c4  e002              B        |L43.204|
                  |L43.198|
;;;899            }
;;;900            else {
;;;901              pSuite->uiNumberOfTestsSuccess++;
0000c6  6ae0              LDR      r0,[r4,#0x2c]
0000c8  1c40              ADDS     r0,r0,#1
0000ca  62e0              STR      r0,[r4,#0x2c]
                  |L43.204|
0000cc  b12e              CBZ      r6,|L43.218|
0000ce  2f00              CMP      r7,#0                 ;882
0000d0  d0d1              BEQ      |L43.118|
0000d2  f7fffffe          BL       CU_get_error_action
0000d6  2800              CMP      r0,#0                 ;882
0000d8  d0cd              BEQ      |L43.118|
                  |L43.218|
;;;902            }
;;;903          }
;;;904          pRunSummary->nSuitesRun++;
0000da  6b68              LDR      r0,[r5,#0x34]
0000dc  1c40              ADDS     r0,r0,#1
0000de  6368              STR      r0,[r5,#0x34]
;;;905    
;;;906          /* call the suite cleanup function, if any */
;;;907          if ((NULL != pSuite->pCleanupFunc) && (0 != (*pSuite->pCleanupFunc)())) {
0000e0  6920              LDR      r0,[r4,#0x10]
0000e2  2800              CMP      r0,#0
0000e4  d037              BEQ      |L43.342|
0000e6  6920              LDR      r0,[r4,#0x10]
0000e8  4780              BLX      r0
0000ea  2800              CMP      r0,#0
0000ec  d033              BEQ      |L43.342|
;;;908            if (NULL != f_pSuiteCleanupFailureMessageHandler) {
0000ee  4844              LDR      r0,|L43.512|
0000f0  6800              LDR      r0,[r0,#0]  ; f_pSuiteCleanupFailureMessageHandler
0000f2  b118              CBZ      r0,|L43.252|
;;;909              (*f_pSuiteCleanupFailureMessageHandler)(pSuite);
0000f4  4620              MOV      r0,r4
0000f6  4942              LDR      r1,|L43.512|
0000f8  6809              LDR      r1,[r1,#0]  ; f_pSuiteCleanupFailureMessageHandler
0000fa  4788              BLX      r1
                  |L43.252|
;;;910            }
;;;911            pRunSummary->nSuitesFailed++;
0000fc  6ba8              LDR      r0,[r5,#0x38]
0000fe  1c40              ADDS     r0,r0,#1
000100  63a8              STR      r0,[r5,#0x38]
;;;912            add_failure(&f_failure_list, &f_run_summary, CUF_SuiteCleanupFailed,
000102  2000              MOVS     r0,#0
000104  a128              ADR      r1,|L43.424|
000106  a23f              ADR      r2,|L43.516|
000108  4603              MOV      r3,r0
00010a  e9cd1401          STRD     r1,r4,[sp,#4]
00010e  9200              STR      r2,[sp,#0]
000110  9003              STR      r0,[sp,#0xc]
000112  2203              MOVS     r2,#3
000114  4933              LDR      r1,|L43.484|
000116  4834              LDR      r0,|L43.488|
000118  f7fffffe          BL       add_failure
;;;913                        0, _("Suite cleanup failed."), _("CUnit System"), pSuite, NULL);
;;;914            result = (CUE_SUCCESS == result) ? CUE_SCLEAN_FAILED : result;
00011c  b917              CBNZ     r7,|L43.292|
00011e  2017              MOVS     r0,#0x17
000120  e001              B        |L43.294|
000122  e002              B        |L43.298|
                  |L43.292|
000124  4638              MOV      r0,r7
                  |L43.294|
000126  4607              MOV      r7,r0
000128  e015              B        |L43.342|
                  |L43.298|
;;;915          }
;;;916        }
;;;917      }
;;;918    
;;;919      /* otherwise record inactive suite and failure if appropriate */
;;;920      else {
;;;921        f_run_summary.nSuitesInactive++;
00012a  482e              LDR      r0,|L43.484|
00012c  6bc0              LDR      r0,[r0,#0x3c]  ; f_run_summary
00012e  1c40              ADDS     r0,r0,#1
000130  492c              LDR      r1,|L43.484|
000132  63c8              STR      r0,[r1,#0x3c]  ; f_run_summary
;;;922        if (CU_FALSE != f_failure_on_inactive) {
000134  482d              LDR      r0,|L43.492|
000136  6800              LDR      r0,[r0,#0]  ; f_failure_on_inactive
000138  b168              CBZ      r0,|L43.342|
;;;923          add_failure(&f_failure_list, &f_run_summary, CUF_SuiteInactive,
00013a  2000              MOVS     r0,#0
00013c  a11a              ADR      r1,|L43.424|
00013e  a237              ADR      r2,|L43.540|
000140  4603              MOV      r3,r0
000142  e9cd1401          STRD     r1,r4,[sp,#4]
000146  9200              STR      r2,[sp,#0]
000148  9003              STR      r0,[sp,#0xc]
00014a  2201              MOVS     r2,#1
00014c  4925              LDR      r1,|L43.484|
00014e  4826              LDR      r0,|L43.488|
000150  f7fffffe          BL       add_failure
;;;924                      0, _("Suite inactive"), _("CUnit System"), pSuite, NULL);
;;;925          result = CUE_SUITE_INACTIVE;
000154  2719              MOVS     r7,#0x19
                  |L43.342|
;;;926        }
;;;927      }
;;;928    
;;;929      /* if additional failures have occurred... */
;;;930      if (pRunSummary->nFailureRecords > nStartFailures) {
000156  6d68              LDR      r0,[r5,#0x54]
000158  4550              CMP      r0,r10
00015a  d909              BLS      |L43.368|
;;;931        if (NULL != pLastFailure) {
00015c  f1b80f00          CMP      r8,#0
000160  d002              BEQ      |L43.360|
;;;932          pLastFailure = pLastFailure->pNext;  /* was a previous failure, so go to next one */
000162  f8d88018          LDR      r8,[r8,#0x18]
000166  e005              B        |L43.372|
                  |L43.360|
;;;933        }
;;;934        else {
;;;935          pLastFailure = f_failure_list;       /* no previous failure - go to 1st one */
000168  481f              LDR      r0,|L43.488|
00016a  f8d08000          LDR      r8,[r0,#0]  ; f_failure_list
00016e  e001              B        |L43.372|
                  |L43.368|
;;;936        }
;;;937      }
;;;938      else {
;;;939        pLastFailure = NULL;                   /* no additional failure - set to NULL */
000170  f04f0800          MOV      r8,#0
                  |L43.372|
;;;940      }
;;;941    
;;;942      /* run handler for suite completion, if any */
;;;943      if (NULL != f_pSuiteCompleteMessageHandler) {
000174  482d              LDR      r0,|L43.556|
000176  6800              LDR      r0,[r0,#0]  ; f_pSuiteCompleteMessageHandler
000178  b120              CBZ      r0,|L43.388|
;;;944        (*f_pSuiteCompleteMessageHandler)(pSuite, pLastFailure);
00017a  4641              MOV      r1,r8
00017c  4620              MOV      r0,r4
00017e  4a2b              LDR      r2,|L43.556|
000180  6812              LDR      r2,[r2,#0]  ; f_pSuiteCompleteMessageHandler
000182  4790              BLX      r2
                  |L43.388|
;;;945      }
;;;946    
;;;947      f_pCurSuite = NULL;
000184  2000              MOVS     r0,#0
000186  4905              LDR      r1,|L43.412|
000188  6008              STR      r0,[r1,#0]  ; f_pCurSuite
;;;948      return result;
00018a  4638              MOV      r0,r7
;;;949    }
00018c  b004              ADD      sp,sp,#0x10
00018e  e8bd87f0          POP      {r4-r10,pc}
;;;950    
                          ENDP

000192  0000              DCW      0x0000
                  |L43.404|
                          DCD      f_last_failure
                  |L43.408|
                          DCD      f_pCurTest
                  |L43.412|
                          DCD      f_pCurSuite
                  |L43.416|
                          DCD      f_pSuiteStartMessageHandler
                  |L43.420|
                          DCD      f_pSuiteInitFailureMessageHandler
                  |L43.424|
0001a8  43556e69          DCB      "CUnit System",0
0001ac  74205379
0001b0  7374656d
0001b4  00      
0001b5  00                DCB      0
0001b6  00                DCB      0
0001b7  00                DCB      0
                  |L43.440|
0001b8  53756974          DCB      "Suite Initialization failed - Suite Skipped",0
0001bc  6520496e
0001c0  69746961
0001c4  6c697a61
0001c8  74696f6e
0001cc  20666169
0001d0  6c656420
0001d4  2d205375
0001d8  69746520
0001dc  536b6970
0001e0  70656400
                  |L43.484|
                          DCD      f_run_summary
                  |L43.488|
                          DCD      f_failure_list
                  |L43.492|
                          DCD      f_failure_on_inactive
                  |L43.496|
0001f0  54657374          DCB      "Test inactive",0
0001f4  20696e61
0001f8  63746976
0001fc  6500    
0001fe  00                DCB      0
0001ff  00                DCB      0
                  |L43.512|
                          DCD      f_pSuiteCleanupFailureMessageHandler
                  |L43.516|
000204  53756974          DCB      "Suite cleanup failed.",0
000208  6520636c
00020c  65616e75
000210  70206661
000214  696c6564
000218  2e00    
00021a  00                DCB      0
00021b  00                DCB      0
                  |L43.540|
00021c  53756974          DCB      "Suite inactive",0
000220  6520696e
000224  61637469
000228  766500  
00022b  00                DCB      0
                  |L43.556|
                          DCD      f_pSuiteCompleteMessageHandler

                          AREA ||i.run_single_test||, CODE, READONLY, ALIGN=2

                  run_single_test PROC
;;;966     */
;;;967    static CU_ErrorCode run_single_test(CU_pTest pTest, CU_pRunSummary pRunSummary)
000000  b570              PUSH     {r4-r6,lr}
;;;968    {
000002  b0ae              SUB      sp,sp,#0xb8
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;969      volatile unsigned int nStartFailures;
;;;970      /* keep track of the last failure BEFORE running the test */
;;;971      volatile CU_pFailureRecord pLastFailure = f_last_failure;
000008  4837              LDR      r0,|L44.232|
00000a  6800              LDR      r0,[r0,#0]  ; f_last_failure
00000c  902c              STR      r0,[sp,#0xb0]
;;;972      jmp_buf buf;
;;;973      CU_ErrorCode result = CUE_SUCCESS;
00000e  2600              MOVS     r6,#0
;;;974    
;;;975      assert(NULL != f_pCurSuite);
;;;976      assert(CU_FALSE != f_pCurSuite->fActive);
;;;977      assert(NULL != pTest);
;;;978      assert(NULL != pRunSummary);
;;;979    
;;;980      nStartFailures = pRunSummary->nFailureRecords;
000010  6d68              LDR      r0,[r5,#0x54]
000012  902d              STR      r0,[sp,#0xb4]
;;;981    
;;;982      f_pCurTest = pTest;
000014  4835              LDR      r0,|L44.236|
000016  6004              STR      r4,[r0,#0]  ; f_pCurTest
;;;983    
;;;984      if (NULL != f_pTestStartMessageHandler) {
000018  4835              LDR      r0,|L44.240|
00001a  6800              LDR      r0,[r0,#0]  ; f_pTestStartMessageHandler
00001c  b130              CBZ      r0,|L44.44|
;;;985        (*f_pTestStartMessageHandler)(f_pCurTest, f_pCurSuite);
00001e  4835              LDR      r0,|L44.244|
000020  6801              LDR      r1,[r0,#0]  ; f_pCurSuite
000022  4832              LDR      r0,|L44.236|
000024  6800              LDR      r0,[r0,#0]  ; f_pCurTest
000026  4a32              LDR      r2,|L44.240|
000028  6812              LDR      r2,[r2,#0]  ; f_pTestStartMessageHandler
00002a  4790              BLX      r2
                  |L44.44|
;;;986      }
;;;987    
;;;988      /* run test if it is active */
;;;989      if (CU_FALSE != pTest->fActive) {
00002c  6860              LDR      r0,[r4,#4]
00002e  b1e0              CBZ      r0,|L44.106|
;;;990    
;;;991        if (NULL != f_pCurSuite->pSetUpFunc) {
000030  4830              LDR      r0,|L44.244|
000032  6800              LDR      r0,[r0,#0]  ; f_pCurSuite
000034  6940              LDR      r0,[r0,#0x14]
000036  b118              CBZ      r0,|L44.64|
;;;992          (*f_pCurSuite->pSetUpFunc)();
000038  492e              LDR      r1,|L44.244|
00003a  6809              LDR      r1,[r1,#0]  ; f_pCurSuite
00003c  6948              LDR      r0,[r1,#0x14]
00003e  4780              BLX      r0
                  |L44.64|
;;;993        }
;;;994    
;;;995        /* set jmp_buf and run test */
;;;996        pTest->pJumpBuf = &buf;
000040  a804              ADD      r0,sp,#0x10
000042  60e0              STR      r0,[r4,#0xc]
;;;997        if (0 == setjmp(buf)) {
000044  f7fffffe          BL       setjmp
000048  b918              CBNZ     r0,|L44.82|
;;;998          if (NULL != pTest->pTestFunc) {
00004a  68a0              LDR      r0,[r4,#8]
00004c  b108              CBZ      r0,|L44.82|
;;;999            (*pTest->pTestFunc)();
00004e  68a0              LDR      r0,[r4,#8]
000050  4780              BLX      r0
                  |L44.82|
;;;1000         }
;;;1001       }
;;;1002   
;;;1003       if (NULL != f_pCurSuite->pTearDownFunc) {
000052  4828              LDR      r0,|L44.244|
000054  6800              LDR      r0,[r0,#0]  ; f_pCurSuite
000056  6980              LDR      r0,[r0,#0x18]
000058  b118              CBZ      r0,|L44.98|
;;;1004          (*f_pCurSuite->pTearDownFunc)();
00005a  4926              LDR      r1,|L44.244|
00005c  6809              LDR      r1,[r1,#0]  ; f_pCurSuite
00005e  6988              LDR      r0,[r1,#0x18]
000060  4780              BLX      r0
                  |L44.98|
;;;1005       }
;;;1006   
;;;1007       pRunSummary->nTestsRun++;
000062  6c28              LDR      r0,[r5,#0x40]
000064  1c40              ADDS     r0,r0,#1
000066  6428              STR      r0,[r5,#0x40]
000068  e018              B        |L44.156|
                  |L44.106|
;;;1008     }
;;;1009     else {
;;;1010       f_run_summary.nTestsInactive++;
00006a  4823              LDR      r0,|L44.248|
00006c  6c80              LDR      r0,[r0,#0x48]  ; f_run_summary
00006e  1c40              ADDS     r0,r0,#1
000070  4921              LDR      r1,|L44.248|
000072  6488              STR      r0,[r1,#0x48]  ; f_run_summary
;;;1011       if (CU_FALSE != f_failure_on_inactive) {
000074  4821              LDR      r0,|L44.252|
000076  6800              LDR      r0,[r0,#0]  ; f_failure_on_inactive
000078  b178              CBZ      r0,|L44.154|
;;;1012         add_failure(&f_failure_list, &f_run_summary, CUF_TestInactive,
00007a  481c              LDR      r0,|L44.236|
00007c  6800              LDR      r0,[r0,#0]  ; f_pCurTest
00007e  491d              LDR      r1,|L44.244|
000080  6809              LDR      r1,[r1,#0]  ; f_pCurSuite
000082  a21f              ADR      r2,|L44.256|
000084  a322              ADR      r3,|L44.272|
000086  e9cd3200          STRD     r3,r2,[sp,#0]
00008a  e9cd1002          STRD     r1,r0,[sp,#8]
00008e  2300              MOVS     r3,#0
000090  2204              MOVS     r2,#4
000092  4919              LDR      r1,|L44.248|
000094  4822              LDR      r0,|L44.288|
000096  f7fffffe          BL       add_failure
                  |L44.154|
;;;1013                     0, _("Test inactive"), _("CUnit System"), f_pCurSuite, f_pCurTest);
;;;1014       }
;;;1015       result = CUE_TEST_INACTIVE;
00009a  2622              MOVS     r6,#0x22
                  |L44.156|
;;;1016     }
;;;1017   
;;;1018     /* if additional failures have occurred... */
;;;1019     if (pRunSummary->nFailureRecords > nStartFailures) {
00009c  6d68              LDR      r0,[r5,#0x54]
00009e  992d              LDR      r1,[sp,#0xb4]
0000a0  4288              CMP      r0,r1
0000a2  d90c              BLS      |L44.190|
;;;1020       pRunSummary->nTestsFailed++;
0000a4  6c68              LDR      r0,[r5,#0x44]
0000a6  1c40              ADDS     r0,r0,#1
0000a8  6468              STR      r0,[r5,#0x44]
;;;1021       if (NULL != pLastFailure) {
0000aa  982c              LDR      r0,[sp,#0xb0]
0000ac  b118              CBZ      r0,|L44.182|
;;;1022         pLastFailure = pLastFailure->pNext;  /* was a previous failure, so go to next one */
0000ae  982c              LDR      r0,[sp,#0xb0]
0000b0  6980              LDR      r0,[r0,#0x18]
0000b2  902c              STR      r0,[sp,#0xb0]
0000b4  e005              B        |L44.194|
                  |L44.182|
;;;1023       }
;;;1024       else {
;;;1025         pLastFailure = f_failure_list;       /* no previous failure - go to 1st one */
0000b6  481a              LDR      r0,|L44.288|
0000b8  6800              LDR      r0,[r0,#0]  ; f_failure_list
0000ba  902c              STR      r0,[sp,#0xb0]
0000bc  e001              B        |L44.194|
                  |L44.190|
;;;1026       }
;;;1027     }
;;;1028     else {
;;;1029       pLastFailure = NULL;                   /* no additional failure - set to NULL */
0000be  2000              MOVS     r0,#0
0000c0  902c              STR      r0,[sp,#0xb0]
                  |L44.194|
;;;1030     }
;;;1031   
;;;1032     if (NULL != f_pTestCompleteMessageHandler) {
0000c2  4818              LDR      r0,|L44.292|
0000c4  6800              LDR      r0,[r0,#0]  ; f_pTestCompleteMessageHandler
0000c6  b138              CBZ      r0,|L44.216|
;;;1033       (*f_pTestCompleteMessageHandler)(f_pCurTest, f_pCurSuite, pLastFailure);
0000c8  480a              LDR      r0,|L44.244|
0000ca  9a2c              LDR      r2,[sp,#0xb0]
0000cc  6801              LDR      r1,[r0,#0]  ; f_pCurSuite
0000ce  4807              LDR      r0,|L44.236|
0000d0  6800              LDR      r0,[r0,#0]  ; f_pCurTest
0000d2  4b14              LDR      r3,|L44.292|
0000d4  681b              LDR      r3,[r3,#0]  ; f_pTestCompleteMessageHandler
0000d6  4798              BLX      r3
                  |L44.216|
;;;1034     }
;;;1035   
;;;1036     pTest->pJumpBuf = NULL;
0000d8  2000              MOVS     r0,#0
0000da  60e0              STR      r0,[r4,#0xc]
;;;1037     f_pCurTest = NULL;
0000dc  4903              LDR      r1,|L44.236|
0000de  6008              STR      r0,[r1,#0]  ; f_pCurTest
;;;1038   
;;;1039     return result;
0000e0  4630              MOV      r0,r6
;;;1040   }
0000e2  b02e              ADD      sp,sp,#0xb8
0000e4  bd70              POP      {r4-r6,pc}
;;;1041   
                          ENDP

0000e6  0000              DCW      0x0000
                  |L44.232|
                          DCD      f_last_failure
                  |L44.236|
                          DCD      f_pCurTest
                  |L44.240|
                          DCD      f_pTestStartMessageHandler
                  |L44.244|
                          DCD      f_pCurSuite
                  |L44.248|
                          DCD      f_run_summary
                  |L44.252|
                          DCD      f_failure_on_inactive
                  |L44.256|
000100  43556e69          DCB      "CUnit System",0
000104  74205379
000108  7374656d
00010c  00      
00010d  00                DCB      0
00010e  00                DCB      0
00010f  00                DCB      0
                  |L44.272|
000110  54657374          DCB      "Test inactive",0
000114  20696e61
000118  63746976
00011c  6500    
00011e  00                DCB      0
00011f  00                DCB      0
                  |L44.288|
                          DCD      f_failure_list
                  |L44.292|
                          DCD      f_pTestCompleteMessageHandler

                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  f_run_summary
                          %        96

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  252a7325          DCB      "%*s%*s%*s%*s%*s%*s%*s\n%*s%*s%*u%*u%*s%*u%*u\n%*s%*s%*u"
000004  2a73252a
000008  73252a73
00000c  252a7325
000010  2a73252a
000014  730a252a
000018  73252a73
00001c  252a7525
000020  2a75252a
000024  73252a75
000028  252a750a
00002c  252a7325
000030  2a73252a
000034  75      
000035  252a7525          DCB      "%*u%*u%*u%*u\n%*s%*s%*u%*u%*u%*u%*s\n\n%*s%8.3f%*s",0
000039  2a75252a
00003d  75252a75
000041  0a252a73
000045  252a7325
000049  2a75252a
00004d  75252a75
000051  252a7525
000055  2a730a0a
000059  252a7325
00005d  382e3366
000061  252a7300

                          AREA ||.data||, DATA, ALIGN=2

                  f_bTestIsRunning
                          DCD      0x00000000
                  f_pCurSuite
                          DCD      0x00000000
                  f_pCurTest
                          DCD      0x00000000
                  f_failure_list
                          DCD      0x00000000
                  f_last_failure
                          DCD      0x00000000
                  f_failure_on_inactive
                          DCD      0x00000001
                  f_start_time
                          DCD      0x00000000
                  f_pSuiteStartMessageHandler
                          DCD      0x00000000
                  f_pTestStartMessageHandler
                          DCD      0x00000000
                  f_pTestCompleteMessageHandler
                          DCD      0x00000000
                  f_pSuiteCompleteMessageHandler
                          DCD      0x00000000
                  f_pAllTestsCompleteMessageHandler
                          DCD      0x00000000
                  f_pSuiteInitFailureMessageHandler
                          DCD      0x00000000
                  f_pSuiteCleanupFailureMessageHandler
                          DCD      0x00000000
