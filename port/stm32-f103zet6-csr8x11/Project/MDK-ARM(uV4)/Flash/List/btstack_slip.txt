; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\btstack_slip.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\btstack_slip.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\ut_manager\Cunit\Headers -I..\..\Middleware\ut_manager\Cunit\interface -I..\..\User\bt\inc -I..\..\Middleware\at_command -I..\..\..\..\src -I..\..\..\..\src\ble\gatt-service -I..\..\..\..\src\ble -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=522 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DNDEBUG --omf_browse=.\flash\obj\btstack_slip.crf ..\..\..\..\src\btstack_slip.c]
                          THUMB

                          AREA ||i.btstack_slip_decoder_frame_size||, CODE, READONLY, ALIGN=2

                  btstack_slip_decoder_frame_size PROC
;;;242    
;;;243    uint16_t btstack_slip_decoder_frame_size(void){
000000  4804              LDR      r0,|L1.20|
;;;244    	switch (decoder_state){
000002  7800              LDRB     r0,[r0,#0]  ; decoder_state
000004  2805              CMP      r0,#5
000006  d102              BNE      |L1.14|
;;;245    		case SLIP_DECODER_COMPLETE:
;;;246    			return decoder_pos;
000008  4803              LDR      r0,|L1.24|
00000a  8800              LDRH     r0,[r0,#0]  ; decoder_pos
                  |L1.12|
;;;247    		default:
;;;248    			return 0;
;;;249    	}
;;;250    }
00000c  4770              BX       lr
                  |L1.14|
00000e  2000              MOVS     r0,#0                 ;248
000010  e7fc              B        |L1.12|
                          ENDP

000012  0000              DCW      0x0000
                  |L1.20|
                          DCD      decoder_state
                  |L1.24|
                          DCD      decoder_pos

                          AREA ||i.btstack_slip_decoder_init||, CODE, READONLY, ALIGN=2

                  btstack_slip_decoder_init PROC
;;;164     */
;;;165    void btstack_slip_decoder_init(uint8_t * buffer, uint16_t max_size){
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;166    	decoder_buffer = buffer;
000006  4803              LDR      r0,|L2.20|
000008  6005              STR      r5,[r0,#0]  ; decoder_buffer
;;;167    	decoder_max_size = max_size;
00000a  4803              LDR      r0,|L2.24|
00000c  8004              STRH     r4,[r0,#0]
;;;168    	btstack_slip_decoder_reset();
00000e  f7fffffe          BL       btstack_slip_decoder_reset
;;;169    }
000012  bd70              POP      {r4-r6,pc}
;;;170    
                          ENDP

                  |L2.20|
                          DCD      decoder_buffer
                  |L2.24|
                          DCD      decoder_max_size

                          AREA ||i.btstack_slip_decoder_process||, CODE, READONLY, ALIGN=2

                  btstack_slip_decoder_process PROC
;;;175    
;;;176    void btstack_slip_decoder_process(uint8_t input){
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;177    	switch(decoder_state){
000004  4830              LDR      r0,|L3.200|
000006  7800              LDRB     r0,[r0,#0]  ; decoder_state
000008  2806              CMP      r0,#6
00000a  d25a              BCS      |L3.194|
00000c  e8dff000          TBB      [pc,r0]
000010  59034015          DCB      0x59,0x03,0x40,0x15
000014  280c              DCB      0x28,0x0c
;;;178            case SLIP_DECODER_UNKNOWN:
;;;179                if (input != BTSTACK_SLIP_SOF) break;
000016  2cc0              CMP      r4,#0xc0
000018  d000              BEQ      |L3.28|
00001a  e053              B        |L3.196|
                  |L3.28|
;;;180                btstack_slip_decoder_reset();
00001c  f7fffffe          BL       btstack_slip_decoder_reset
;;;181                decoder_state = SLIP_DECODER_X_C0;
000020  2003              MOVS     r0,#3
000022  4929              LDR      r1,|L3.200|
000024  7008              STRB     r0,[r1,#0]
;;;182                break;
000026  e04d              B        |L3.196|
;;;183            case SLIP_DECODER_COMPLETE:
;;;184            	log_error("btstack_slip_decoder_process called in state COMPLETE");
000028  23b8              MOVS     r3,#0xb8
00002a  a228              ADR      r2,|L3.204|
00002c  a12b              ADR      r1,|L3.220|
00002e  2002              MOVS     r0,#2
000030  f7fffffe          BL       hci_dump_log
;;;185                btstack_slip_decoder_reset();
000034  f7fffffe          BL       btstack_slip_decoder_reset
;;;186            	break;
000038  e044              B        |L3.196|
;;;187            case SLIP_DECODER_X_C0:
;;;188                switch(input){
00003a  2cc0              CMP      r4,#0xc0
00003c  d002              BEQ      |L3.68|
00003e  2cdb              CMP      r4,#0xdb
000040  d105              BNE      |L3.78|
000042  e000              B        |L3.70|
                  |L3.68|
;;;189                    case BTSTACK_SLIP_SOF:
;;;190                        break;
000044  e00a              B        |L3.92|
                  |L3.70|
;;;191                    case 0xdb:
;;;192                        decoder_state = SLIP_DECODER_X_DB;
000046  2004              MOVS     r0,#4
000048  491f              LDR      r1,|L3.200|
00004a  7008              STRB     r0,[r1,#0]
;;;193                        break;
00004c  e006              B        |L3.92|
                  |L3.78|
;;;194                    default:
;;;195                        btstack_slip_decoder_store_byte(input);
00004e  4620              MOV      r0,r4
000050  f7fffffe          BL       btstack_slip_decoder_store_byte
;;;196                        decoder_state = SLIP_DECODER_ACTIVE;
000054  2002              MOVS     r0,#2
000056  491c              LDR      r1,|L3.200|
000058  7008              STRB     r0,[r1,#0]
;;;197                        break; 
00005a  bf00              NOP      
                  |L3.92|
00005c  bf00              NOP                            ;190
;;;198                }                   
;;;199                break;
00005e  e031              B        |L3.196|
;;;200            case SLIP_DECODER_X_DB:
;;;201                switch(input){
000060  2cdc              CMP      r4,#0xdc
000062  d002              BEQ      |L3.106|
000064  2cdd              CMP      r4,#0xdd
000066  d10e              BNE      |L3.134|
000068  e006              B        |L3.120|
                  |L3.106|
;;;202                    case 0xdc:
;;;203                        btstack_slip_decoder_store_byte(BTSTACK_SLIP_SOF);
00006a  20c0              MOVS     r0,#0xc0
00006c  f7fffffe          BL       btstack_slip_decoder_store_byte
;;;204                        decoder_state = SLIP_DECODER_ACTIVE;
000070  2002              MOVS     r0,#2
000072  4915              LDR      r1,|L3.200|
000074  7008              STRB     r0,[r1,#0]
;;;205                        break;
000076  e009              B        |L3.140|
                  |L3.120|
;;;206                    case 0xdd:
;;;207                        btstack_slip_decoder_store_byte(0xdb);
000078  20db              MOVS     r0,#0xdb
00007a  f7fffffe          BL       btstack_slip_decoder_store_byte
;;;208                        decoder_state = SLIP_DECODER_ACTIVE;
00007e  2002              MOVS     r0,#2
000080  4911              LDR      r1,|L3.200|
000082  7008              STRB     r0,[r1,#0]
;;;209                        break;
000084  e002              B        |L3.140|
                  |L3.134|
;;;210                    default:
;;;211                        btstack_slip_decoder_reset();
000086  f7fffffe          BL       btstack_slip_decoder_reset
;;;212                        break;
00008a  bf00              NOP      
                  |L3.140|
00008c  bf00              NOP                            ;205
;;;213                }
;;;214                break;
00008e  e019              B        |L3.196|
;;;215            case SLIP_DECODER_ACTIVE:
;;;216                switch(input){
000090  2cc0              CMP      r4,#0xc0
000092  d002              BEQ      |L3.154|
000094  2cdb              CMP      r4,#0xdb
000096  d10e              BNE      |L3.182|
000098  e009              B        |L3.174|
                  |L3.154|
;;;217                    case BTSTACK_SLIP_SOF:
;;;218                        if (decoder_pos != 0){
00009a  4820              LDR      r0,|L3.284|
00009c  8800              LDRH     r0,[r0,#0]  ; decoder_pos
00009e  b118              CBZ      r0,|L3.168|
;;;219                        	decoder_state = SLIP_DECODER_COMPLETE;
0000a0  2005              MOVS     r0,#5
0000a2  4909              LDR      r1,|L3.200|
0000a4  7008              STRB     r0,[r1,#0]
0000a6  e001              B        |L3.172|
                  |L3.168|
;;;220                        } else {
;;;221    	                    btstack_slip_decoder_reset();
0000a8  f7fffffe          BL       btstack_slip_decoder_reset
                  |L3.172|
;;;222                        }
;;;223                        break;
0000ac  e007              B        |L3.190|
                  |L3.174|
;;;224                    case 0xdb:
;;;225                        decoder_state = SLIP_DECODER_X_DB;
0000ae  2004              MOVS     r0,#4
0000b0  4905              LDR      r1,|L3.200|
0000b2  7008              STRB     r0,[r1,#0]
;;;226                        break;
0000b4  e003              B        |L3.190|
                  |L3.182|
;;;227                    default:
;;;228                        btstack_slip_decoder_store_byte(input);
0000b6  4620              MOV      r0,r4
0000b8  f7fffffe          BL       btstack_slip_decoder_store_byte
;;;229                        break;
0000bc  bf00              NOP      
                  |L3.190|
0000be  bf00              NOP                            ;223
;;;230                }
;;;231                break;
0000c0  e000              B        |L3.196|
                  |L3.194|
;;;232    		default:
;;;233    			btstack_assert(false);
;;;234    			break;
0000c2  bf00              NOP      
                  |L3.196|
0000c4  bf00              NOP                            ;179
;;;235        }
;;;236    }
0000c6  bd10              POP      {r4,pc}
;;;237    
                          ENDP

                  |L3.200|
                          DCD      decoder_state
                  |L3.204|
0000cc  62747374          DCB      "btstack_slip.c",0
0000d0  61636b5f
0000d4  736c6970
0000d8  2e6300  
0000db  00                DCB      0
                  |L3.220|
0000dc  25732e25          DCB      "%s.%u: btstack_slip_decoder_process called in state COM"
0000e0  753a2062
0000e4  74737461
0000e8  636b5f73
0000ec  6c69705f
0000f0  6465636f
0000f4  6465725f
0000f8  70726f63
0000fc  65737320
000100  63616c6c
000104  65642069
000108  6e207374
00010c  61746520
000110  434f4d  
000113  504c4554          DCB      "PLETE",0
000117  4500    
000119  00                DCB      0
00011a  00                DCB      0
00011b  00                DCB      0
                  |L3.284|
                          DCD      decoder_pos

                          AREA ||i.btstack_slip_decoder_reset||, CODE, READONLY, ALIGN=2

                  btstack_slip_decoder_reset PROC
;;;146    
;;;147    static void btstack_slip_decoder_reset(void){
000000  2001              MOVS     r0,#1
;;;148    	decoder_state = SLIP_DECODER_UNKNOWN;
000002  4903              LDR      r1,|L4.16|
000004  7008              STRB     r0,[r1,#0]
;;;149    	decoder_pos = 0;
000006  2000              MOVS     r0,#0
000008  4902              LDR      r1,|L4.20|
00000a  8008              STRH     r0,[r1,#0]
;;;150    }
00000c  4770              BX       lr
;;;151    
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      decoder_state
                  |L4.20|
                          DCD      decoder_pos

                          AREA ||i.btstack_slip_decoder_store_byte||, CODE, READONLY, ALIGN=2

                  btstack_slip_decoder_store_byte PROC
;;;151    
;;;152    static void btstack_slip_decoder_store_byte(uint8_t input){
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;153    	if (decoder_pos >= decoder_max_size){
000004  480b              LDR      r0,|L5.52|
000006  8800              LDRH     r0,[r0,#0]  ; decoder_pos
000008  490b              LDR      r1,|L5.56|
00000a  8809              LDRH     r1,[r1,#0]  ; decoder_max_size
00000c  4288              CMP      r0,r1
00000e  db07              BLT      |L5.32|
;;;154    	    log_error("btstack_slip_decoder_store_byte: packet to long");
000010  239a              MOVS     r3,#0x9a
000012  a20a              ADR      r2,|L5.60|
000014  a10d              ADR      r1,|L5.76|
000016  2002              MOVS     r0,#2
000018  f7fffffe          BL       hci_dump_log
;;;155    	    btstack_slip_decoder_reset();
00001c  f7fffffe          BL       btstack_slip_decoder_reset
                  |L5.32|
;;;156    	}
;;;157    	decoder_buffer[decoder_pos++] = input;
000020  4804              LDR      r0,|L5.52|
000022  8801              LDRH     r1,[r0,#0]  ; decoder_pos
000024  8800              LDRH     r0,[r0,#0]  ; decoder_pos
000026  1c40              ADDS     r0,r0,#1
000028  4a02              LDR      r2,|L5.52|
00002a  8010              STRH     r0,[r2,#0]
00002c  4815              LDR      r0,|L5.132|
00002e  6800              LDR      r0,[r0,#0]  ; decoder_buffer
000030  5444              STRB     r4,[r0,r1]
;;;158    }
000032  bd10              POP      {r4,pc}
;;;159    
                          ENDP

                  |L5.52|
                          DCD      decoder_pos
                  |L5.56|
                          DCD      decoder_max_size
                  |L5.60|
00003c  62747374          DCB      "btstack_slip.c",0
000040  61636b5f
000044  736c6970
000048  2e6300  
00004b  00                DCB      0
                  |L5.76|
00004c  25732e25          DCB      "%s.%u: btstack_slip_decoder_store_byte: packet to long",0
000050  753a2062
000054  74737461
000058  636b5f73
00005c  6c69705f
000060  6465636f
000064  6465725f
000068  73746f72
00006c  655f6279
000070  74653a20
000074  7061636b
000078  65742074
00007c  6f206c6f
000080  6e6700  
000083  00                DCB      0
                  |L5.132|
                          DCD      decoder_buffer

                          AREA ||i.btstack_slip_encoder_get_byte||, CODE, READONLY, ALIGN=2

                  btstack_slip_encoder_get_byte PROC
;;;103     */
;;;104    uint8_t btstack_slip_encoder_get_byte(void){
000000  b538              PUSH     {r3-r5,lr}
;;;105    	uint8_t next_byte;
;;;106    	switch (encoder_state){
000002  4827              LDR      r0,|L6.160|
000004  7800              LDRB     r0,[r0,#0]  ; encoder_state
000006  b130              CBZ      r0,|L6.22|
000008  2801              CMP      r0,#1
00000a  d023              BEQ      |L6.84|
00000c  2802              CMP      r0,#2
00000e  d026              BEQ      |L6.94|
000010  2803              CMP      r0,#3
000012  d12e              BNE      |L6.114|
000014  e028              B        |L6.104|
                  |L6.22|
;;;107    		case SLIP_ENCODER_DEFAULT:
;;;108    			next_byte = *encoder_data++;
000016  4823              LDR      r0,|L6.164|
000018  6800              LDR      r0,[r0,#0]  ; encoder_data
00001a  7804              LDRB     r4,[r0,#0]
00001c  4821              LDR      r0,|L6.164|
00001e  6800              LDR      r0,[r0,#0]  ; encoder_data
000020  1c40              ADDS     r0,r0,#1
000022  4920              LDR      r1,|L6.164|
000024  6008              STR      r0,[r1,#0]  ; encoder_data
;;;109    			encoder_len--;
000026  4820              LDR      r0,|L6.168|
000028  8800              LDRH     r0,[r0,#0]  ; encoder_len
00002a  1e40              SUBS     r0,r0,#1
00002c  491e              LDR      r1,|L6.168|
00002e  8008              STRH     r0,[r1,#0]
;;;110    			switch (next_byte){
000030  2cc0              CMP      r4,#0xc0
000032  d002              BEQ      |L6.58|
000034  2cdb              CMP      r4,#0xdb
000036  d10a              BNE      |L6.78|
000038  e004              B        |L6.68|
                  |L6.58|
;;;111    				case BTSTACK_SLIP_SOF:
;;;112    					encoder_state = SLIP_ENCODER_SEND_DC;
00003a  2002              MOVS     r0,#2
00003c  4918              LDR      r1,|L6.160|
00003e  7008              STRB     r0,[r1,#0]
;;;113    					next_byte = 0xdb;
000040  24db              MOVS     r4,#0xdb
;;;114    					break;
000042  e005              B        |L6.80|
                  |L6.68|
;;;115    				case 0xdb:
;;;116    					encoder_state = SLIP_ENCODER_SEND_DD;
000044  2003              MOVS     r0,#3
000046  4916              LDR      r1,|L6.160|
000048  7008              STRB     r0,[r1,#0]
;;;117    					next_byte = 0xdb;
00004a  24db              MOVS     r4,#0xdb
;;;118    				default:
00004c  bf00              NOP      
                  |L6.78|
;;;119                        break;
00004e  bf00              NOP      
                  |L6.80|
000050  bf00              NOP                            ;114
;;;120    			}
;;;121    			break;
000052  e019              B        |L6.136|
                  |L6.84|
;;;122    		case SLIP_ENCODER_SEND_C0:
;;;123    			encoder_state = SLIP_ENCODER_DEFAULT;
000054  2000              MOVS     r0,#0
000056  4912              LDR      r1,|L6.160|
000058  7008              STRB     r0,[r1,#0]
;;;124    			return 0xc0;
00005a  20c0              MOVS     r0,#0xc0
                  |L6.92|
;;;125    		case SLIP_ENCODER_SEND_DC:
;;;126    			encoder_state = SLIP_ENCODER_DEFAULT;
;;;127    			next_byte = 0xdc;
;;;128    			break;
;;;129    		case SLIP_ENCODER_SEND_DD:
;;;130    			encoder_state = SLIP_ENCODER_DEFAULT;
;;;131    			next_byte = 0x0dd;
;;;132    			break;
;;;133            default:
;;;134                log_error("btstack_slip_encoder_get_byte invalid state %x", encoder_state);
;;;135                return 0x00;
;;;136    	}
;;;137    
;;;138    	// After last byte, send CO SOF again
;;;139    	if ((encoder_state == SLIP_ENCODER_DEFAULT) && (encoder_len == 0)){
;;;140    		encoder_state = SLIP_ENCODER_SEND_C0;
;;;141    	}
;;;142    	return next_byte;
;;;143    }
00005c  bd38              POP      {r3-r5,pc}
                  |L6.94|
00005e  2000              MOVS     r0,#0                 ;126
000060  490f              LDR      r1,|L6.160|
000062  7008              STRB     r0,[r1,#0]            ;126
000064  24dc              MOVS     r4,#0xdc              ;127
000066  e00f              B        |L6.136|
                  |L6.104|
000068  2000              MOVS     r0,#0                 ;130
00006a  490d              LDR      r1,|L6.160|
00006c  7008              STRB     r0,[r1,#0]            ;130
00006e  24dd              MOVS     r4,#0xdd              ;131
000070  e00a              B        |L6.136|
                  |L6.114|
000072  480b              LDR      r0,|L6.160|
000074  7800              LDRB     r0,[r0,#0]            ;134  ; encoder_state
000076  2386              MOVS     r3,#0x86              ;134
000078  a20c              ADR      r2,|L6.172|
00007a  a110              ADR      r1,|L6.188|
00007c  9000              STR      r0,[sp,#0]            ;134
00007e  2002              MOVS     r0,#2                 ;134
000080  f7fffffe          BL       hci_dump_log
000084  2000              MOVS     r0,#0                 ;135
000086  e7e9              B        |L6.92|
                  |L6.136|
000088  bf00              NOP                            ;121
00008a  4805              LDR      r0,|L6.160|
00008c  7800              LDRB     r0,[r0,#0]            ;139  ; encoder_state
00008e  b928              CBNZ     r0,|L6.156|
000090  4805              LDR      r0,|L6.168|
000092  8800              LDRH     r0,[r0,#0]            ;139  ; encoder_len
000094  b910              CBNZ     r0,|L6.156|
000096  2001              MOVS     r0,#1                 ;140
000098  4901              LDR      r1,|L6.160|
00009a  7008              STRB     r0,[r1,#0]            ;140
                  |L6.156|
00009c  4620              MOV      r0,r4                 ;142
00009e  e7dd              B        |L6.92|
;;;144    
                          ENDP

                  |L6.160|
                          DCD      encoder_state
                  |L6.164|
                          DCD      encoder_data
                  |L6.168|
                          DCD      encoder_len
                  |L6.172|
0000ac  62747374          DCB      "btstack_slip.c",0
0000b0  61636b5f
0000b4  736c6970
0000b8  2e6300  
0000bb  00                DCB      0
                  |L6.188|
0000bc  25732e25          DCB      "%s.%u: btstack_slip_encoder_get_byte invalid state %x",0
0000c0  753a2062
0000c4  74737461
0000c8  636b5f73
0000cc  6c69705f
0000d0  656e636f
0000d4  6465725f
0000d8  6765745f
0000dc  62797465
0000e0  20696e76
0000e4  616c6964
0000e8  20737461
0000ec  74652025
0000f0  7800    
0000f2  00                DCB      0
0000f3  00                DCB      0

                          AREA ||i.btstack_slip_encoder_has_data||, CODE, READONLY, ALIGN=2

                  btstack_slip_encoder_has_data PROC
;;;94      */
;;;95     int  btstack_slip_encoder_has_data(void){
000000  4805              LDR      r0,|L7.24|
;;;96     	if (encoder_state != SLIP_ENCODER_DEFAULT) return 1;
000002  7800              LDRB     r0,[r0,#0]  ; encoder_state
000004  b108              CBZ      r0,|L7.10|
000006  2001              MOVS     r0,#1
                  |L7.8|
;;;97     	return encoder_len > 0u;
;;;98     }
000008  4770              BX       lr
                  |L7.10|
00000a  4804              LDR      r0,|L7.28|
00000c  8800              LDRH     r0,[r0,#0]            ;97  ; encoder_len
00000e  b108              CBZ      r0,|L7.20|
000010  2001              MOVS     r0,#1                 ;97
000012  e7f9              B        |L7.8|
                  |L7.20|
000014  2000              MOVS     r0,#0                 ;97
000016  e7f7              B        |L7.8|
;;;99     
                          ENDP

                  |L7.24|
                          DCD      encoder_state
                  |L7.28|
                          DCD      encoder_len

                          AREA ||i.btstack_slip_encoder_start||, CODE, READONLY, ALIGN=2

                  btstack_slip_encoder_start PROC
;;;83      */
;;;84     void btstack_slip_encoder_start(const uint8_t * data, uint16_t len){
000000  2201              MOVS     r2,#1
;;;85     	// start with C0 SOF
;;;86     	encoder_state = SLIP_ENCODER_SEND_C0;
000002  4b03              LDR      r3,|L8.16|
000004  701a              STRB     r2,[r3,#0]
;;;87     	encoder_data  = data;
000006  4a03              LDR      r2,|L8.20|
000008  6010              STR      r0,[r2,#0]  ; encoder_data
;;;88     	encoder_len   = len;
00000a  4a03              LDR      r2,|L8.24|
00000c  8011              STRH     r1,[r2,#0]
;;;89     }
00000e  4770              BX       lr
;;;90     
                          ENDP

                  |L8.16|
                          DCD      encoder_state
                  |L8.20|
                          DCD      encoder_data
                  |L8.24|
                          DCD      encoder_len

                          AREA ||.data||, DATA, ALIGN=2

                  encoder_state
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  encoder_data
                          DCD      0x00000000
                  encoder_len
000008  0000              DCB      0x00,0x00
                  decoder_state
00000a  0000              DCB      0x00,0x00
                  decoder_buffer
                          DCD      0x00000000
                  decoder_max_size
000010  0000              DCB      0x00,0x00
                  decoder_pos
000012  0000              DCB      0x00,0x00
