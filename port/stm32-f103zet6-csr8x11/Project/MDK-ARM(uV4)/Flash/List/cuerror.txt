; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\cuerror.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\cuerror.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\Middleware\blue_angel\inc -I..\..\Middleware\bt_callback_manager -I..\..\Middleware\blue_angel\btif -I..\..\Middleware\blue_angel\common -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\src\common -I..\..\Middleware\blue_angel\src\inc -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\platform\rtos -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\ut_manager\Cunit\Headers -I..\..\Middleware\ut_manager\Cunit\interface -I..\..\Middleware\blue_angel\platform\test -I..\..\Middleware\blue_angel\driver -I..\..\Middleware\blue_angel\src\core\hci -I..\..\User\bt\inc -I..\..\Middleware\bt_callback_manager -I..\..\Middleware\at_command -I..\..\Middleware\blue_angel\src\core\gap -I..\..\Middleware\blue_angel\src\core\l2cap -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=522 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DNDEBUG --omf_browse=.\flash\obj\cuerror.crf ..\..\Middleware\ut_manager\Cunit\Sources\Framework\CUError.c]
                          THUMB

                          AREA ||i.CU_get_error||, CODE, READONLY, ALIGN=2

                  CU_get_error PROC
;;;85     /*------------------------------------------------------------------------*/
;;;86     CU_ErrorCode CU_get_error(void)
000000  4801              LDR      r0,|L1.8|
;;;87     {
;;;88     	return g_error_number;
000002  7800              LDRB     r0,[r0,#0]  ; g_error_number
;;;89     }
000004  4770              BX       lr
;;;90     
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      g_error_number

                          AREA ||i.CU_get_error_action||, CODE, READONLY, ALIGN=2

                  CU_get_error_action PROC
;;;103    /*------------------------------------------------------------------------*/
;;;104    CU_ErrorAction CU_get_error_action(void)
000000  4801              LDR      r0,|L2.8|
;;;105    {
;;;106      return g_error_action;
000002  7800              LDRB     r0,[r0,#0]  ; g_error_action
;;;107    }
000004  4770              BX       lr
;;;108    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      g_error_action

                          AREA ||i.CU_get_error_msg||, CODE, READONLY, ALIGN=2

                  CU_get_error_msg PROC
;;;91     /*------------------------------------------------------------------------*/
;;;92     const char* CU_get_error_msg(void)
000000  b510              PUSH     {r4,lr}
;;;93     {
;;;94     	return get_error_desc(g_error_number);
000002  4802              LDR      r0,|L3.12|
000004  7800              LDRB     r0,[r0,#0]  ; g_error_number
000006  f7fffffe          BL       get_error_desc
;;;95     }
00000a  bd10              POP      {r4,pc}
;;;96     
                          ENDP

                  |L3.12|
                          DCD      g_error_number

                          AREA ||i.CU_set_error||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  CU_set_error PROC
;;;62      *=================================================================*/
;;;63     void CU_set_error(CU_ErrorCode error)
000000  b570              PUSH     {r4-r6,lr}
;;;64     {
000002  4604              MOV      r4,r0
;;;65       if ((error != CUE_SUCCESS) && (g_error_action == CUEA_ABORT)) {
000004  b17c              CBZ      r4,|L4.38|
000006  4809              LDR      r0,|L4.44|
000008  7800              LDRB     r0,[r0,#0]  ; g_error_action
00000a  2802              CMP      r0,#2
00000c  d10b              BNE      |L4.38|
;;;66     #ifndef CUNIT_DO_NOT_DEFINE_UNLESS_BUILDING_TESTS
;;;67     #ifdef __CUNIT_USE_FILE_SYSTEM__
;;;68         fprintf(stderr, _("\nAborting due to error #%d: %s\n"),
;;;69                 (int)error,
;;;70                 get_error_desc(error));
;;;71     #else
;;;72         printf(_("\nAborting due to error #%d: %s\n"),
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       get_error_desc
000014  4605              MOV      r5,r0
000016  462a              MOV      r2,r5
000018  4621              MOV      r1,r4
00001a  a005              ADR      r0,|L4.48|
00001c  f7fffffe          BL       __2printf
;;;73                 (int)error,
;;;74                 get_error_desc(error));	
;;;75     #endif
;;;76         exit((int)error);
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       exit
                  |L4.38|
;;;77     #else
;;;78         test_exit(error);
;;;79     #endif
;;;80       }
;;;81     
;;;82       g_error_number = error;
000026  480a              LDR      r0,|L4.80|
000028  7004              STRB     r4,[r0,#0]
;;;83     }
00002a  bd70              POP      {r4-r6,pc}
;;;84     
                          ENDP

                  |L4.44|
                          DCD      g_error_action
                  |L4.48|
000030  0a41626f          DCB      "\nAborting due to error #%d: %s\n",0
000034  7274696e
000038  67206475
00003c  6520746f
000040  20657272
000044  6f722023
000048  25643a20
00004c  25730a00
                  |L4.80|
                          DCD      g_error_number

                          AREA ||i.CU_set_error_action||, CODE, READONLY, ALIGN=2

                  CU_set_error_action PROC
;;;97     /*------------------------------------------------------------------------*/
;;;98     void CU_set_error_action(CU_ErrorAction action)
000000  4901              LDR      r1,|L5.8|
;;;99     {
;;;100      g_error_action = action;
000002  7008              STRB     r0,[r1,#0]
;;;101    }
000004  4770              BX       lr
;;;102    
                          ENDP

000006  0000              DCW      0x0000
                  |L5.8|
                          DCD      g_error_action

                          AREA ||i.get_error_desc||, CODE, READONLY, ALIGN=2

                  get_error_desc PROC
;;;120     */
;;;121    static const char* get_error_desc(CU_ErrorCode iError)
000000  4601              MOV      r1,r0
;;;122    {
;;;123      int iMaxIndex;
;;;124    
;;;125      static const char* ErrorDescription[] = {
;;;126        N_("No Error."),                             /* CUE_SUCCESS - 0 */
;;;127        N_("Memory allocation failed."),            /* CUE_NOMEMORY - 1 */
;;;128        "",
;;;129        "",
;;;130        "",
;;;131        "",
;;;132        "",
;;;133        "",
;;;134        "",
;;;135        "",
;;;136        N_("Test registry does not exist."),          /* CUE_NOREGISTRY - 10 */
;;;137        N_("Registry already exists."),               /* CUE_REGISTRY_EXISTS - 11 */
;;;138        "",
;;;139        "",
;;;140        "",
;;;141        "",
;;;142        "",
;;;143        "",
;;;144        "",
;;;145        "",
;;;146        N_("NULL suite not allowed."),                /* CUE_NOSUITE - 20 */
;;;147        N_("Suite name cannot be NULL."),             /* CUE_NO_SUITENAME - 21 */
;;;148        N_("Suite initialization function failed."),  /* CUE_SINIT_FAILED - 22 */
;;;149        N_("Suite cleanup function failed."),         /* CUE_SCLEAN_FAILED - 23 */
;;;150        N_("Suite having name already registered."),  /* CUE_DUP_SUITE - 24 */
;;;151        N_("Requested suite is not active."),         /* CUE_SUITE_INACTIVE - 25 */
;;;152        "",
;;;153        "",
;;;154        "",
;;;155        "",
;;;156        N_("NULL test or test function not allowed."),/* CUE_NOTEST - 30 */
;;;157        N_("Test name cannot be NULL."),              /* CUE_NO_TESTNAME - 31 */
;;;158        N_("Test having this name already in suite."),/* CUE_DUP_TEST - 32 */
;;;159        N_("Test not registered in specified suite."),/* CUE_TEST_NOT_IN_SUITE - 33 */
;;;160        N_("Requested test is not active"),           /* CUE_TEST_INACTIVE - 34 */
;;;161        "",
;;;162        "",
;;;163        "",
;;;164        "",
;;;165        "",
;;;166        N_("Error opening file."),                    /* CUE_FOPEN_FAILED - 40 */
;;;167        N_("Error closing file."),                    /* CUE_FCLOSE_FAILED - 41 */
;;;168        N_("Bad file name."),                         /* CUE_BAD_FILENAME - 42 */
;;;169        N_("Error during write to file."),            /* CUE_WRITE_ERROR - 43 */
;;;170        N_("Undefined Error")
;;;171      };
;;;172    
;;;173      iMaxIndex = (int)(sizeof(ErrorDescription)/sizeof(char *) - 1);
000002  222c              MOVS     r2,#0x2c
;;;174      if ((int)iError < 0) {
000004  2900              CMP      r1,#0
000006  da02              BGE      |L6.14|
;;;175        return _(ErrorDescription[0]);
000008  4806              LDR      r0,|L6.36|
00000a  6800              LDR      r0,[r0,#0]  ; ErrorDescription
                  |L6.12|
;;;176      }
;;;177      else if ((int)iError > iMaxIndex) {
;;;178        return _(ErrorDescription[iMaxIndex]);
;;;179      }
;;;180      else {
;;;181        return _(ErrorDescription[(int)iError]);
;;;182      }
;;;183    }
00000c  4770              BX       lr
                  |L6.14|
00000e  4291              CMP      r1,r2                 ;177
000010  dd03              BLE      |L6.26|
000012  4804              LDR      r0,|L6.36|
000014  f8500022          LDR      r0,[r0,r2,LSL #2]     ;178
000018  e7f8              B        |L6.12|
                  |L6.26|
00001a  4802              LDR      r0,|L6.36|
00001c  f8500021          LDR      r0,[r0,r1,LSL #2]     ;181
000020  e7f4              B        |L6.12|
;;;184    
                          ENDP

000022  0000              DCW      0x0000
                  |L6.36|
                          DCD      ErrorDescription

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  4e6f2045          DCB      "No Error.",0
000004  72726f72
000008  2e00    
00000a  00                DCB      0
00000b  00                DCB      0
00000c  4d656d6f          DCB      "Memory allocation failed.",0
000010  72792061
000014  6c6c6f63
000018  6174696f
00001c  6e206661
000020  696c6564
000024  2e00    
000026  00                DCB      0
000027  00                DCB      0
000028  00                DCB      0
000029  00                DCB      0
00002a  00                DCB      0
00002b  00                DCB      0
00002c  54657374          DCB      "Test registry does not exist.",0
000030  20726567
000034  69737472
000038  7920646f
00003c  6573206e
000040  6f742065
000044  78697374
000048  2e00    
00004a  00                DCB      0
00004b  00                DCB      0
00004c  52656769          DCB      "Registry already exists.",0
000050  73747279
000054  20616c72
000058  65616479
00005c  20657869
000060  7374732e
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0
000068  4e554c4c          DCB      "NULL suite not allowed.",0
00006c  20737569
000070  7465206e
000074  6f742061
000078  6c6c6f77
00007c  65642e00
000080  53756974          DCB      "Suite name cannot be NULL.",0
000084  65206e61
000088  6d652063
00008c  616e6e6f
000090  74206265
000094  204e554c
000098  4c2e00  
00009b  00                DCB      0
00009c  53756974          DCB      "Suite initialization function failed.",0
0000a0  6520696e
0000a4  69746961
0000a8  6c697a61
0000ac  74696f6e
0000b0  2066756e
0000b4  6374696f
0000b8  6e206661
0000bc  696c6564
0000c0  2e00    
0000c2  00                DCB      0
0000c3  00                DCB      0
0000c4  53756974          DCB      "Suite cleanup function failed.",0
0000c8  6520636c
0000cc  65616e75
0000d0  70206675
0000d4  6e637469
0000d8  6f6e2066
0000dc  61696c65
0000e0  642e00  
0000e3  00                DCB      0
0000e4  53756974          DCB      "Suite having name already registered.",0
0000e8  65206861
0000ec  76696e67
0000f0  206e616d
0000f4  6520616c
0000f8  72656164
0000fc  79207265
000100  67697374
000104  65726564
000108  2e00    
00010a  00                DCB      0
00010b  00                DCB      0
00010c  52657175          DCB      "Requested suite is not active.",0
000110  65737465
000114  64207375
000118  69746520
00011c  6973206e
000120  6f742061
000124  63746976
000128  652e00  
00012b  00                DCB      0
00012c  4e554c4c          DCB      "NULL test or test function not allowed.",0
000130  20746573
000134  74206f72
000138  20746573
00013c  74206675
000140  6e637469
000144  6f6e206e
000148  6f742061
00014c  6c6c6f77
000150  65642e00
000154  54657374          DCB      "Test name cannot be NULL.",0
000158  206e616d
00015c  65206361
000160  6e6e6f74
000164  20626520
000168  4e554c4c
00016c  2e00    
00016e  00                DCB      0
00016f  00                DCB      0
000170  54657374          DCB      "Test having this name already in suite.",0
000174  20686176
000178  696e6720
00017c  74686973
000180  206e616d
000184  6520616c
000188  72656164
00018c  7920696e
000190  20737569
000194  74652e00
000198  54657374          DCB      "Test not registered in specified suite.",0
00019c  206e6f74
0001a0  20726567
0001a4  69737465
0001a8  72656420
0001ac  696e2073
0001b0  70656369
0001b4  66696564
0001b8  20737569
0001bc  74652e00
0001c0  52657175          DCB      "Requested test is not active",0
0001c4  65737465
0001c8  64207465
0001cc  73742069
0001d0  73206e6f
0001d4  74206163
0001d8  74697665
0001dc  00      
0001dd  00                DCB      0
0001de  00                DCB      0
0001df  00                DCB      0
0001e0  4572726f          DCB      "Error opening file.",0
0001e4  72206f70
0001e8  656e696e
0001ec  67206669
0001f0  6c652e00
0001f4  4572726f          DCB      "Error closing file.",0
0001f8  7220636c
0001fc  6f73696e
000200  67206669
000204  6c652e00
000208  42616420          DCB      "Bad file name.",0
00020c  66696c65
000210  206e616d
000214  652e00  
000217  00                DCB      0
000218  4572726f          DCB      "Error during write to file.",0
00021c  72206475
000220  72696e67
000224  20777269
000228  74652074
00022c  6f206669
000230  6c652e00
000234  556e6465          DCB      "Undefined Error",0
000238  66696e65
00023c  64204572
000240  726f7200

                          AREA ||.data||, DATA, ALIGN=2

                  g_error_number
000000  00                DCB      0x00
                  g_error_action
000001  000000            DCB      0x00,0x00,0x00
                  ErrorDescription
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0xc
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x2c
                          DCD      ||.conststring||+0x4c
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x68
                          DCD      ||.conststring||+0x80
                          DCD      ||.conststring||+0x9c
                          DCD      ||.conststring||+0xc4
                          DCD      ||.conststring||+0xe4
                          DCD      ||.conststring||+0x10c
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x12c
                          DCD      ||.conststring||+0x154
                          DCD      ||.conststring||+0x170
                          DCD      ||.conststring||+0x198
                          DCD      ||.conststring||+0x1c0
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x28
                          DCD      ||.conststring||+0x1e0
                          DCD      ||.conststring||+0x1f4
                          DCD      ||.conststring||+0x208
                          DCD      ||.conststring||+0x218
                          DCD      ||.conststring||+0x234
