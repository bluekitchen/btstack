; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\flash\obj\misc.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\misc.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\FreeRTOS\include -I..\..\FreeRTOS\portable\RVDS\ARM_CM3 -I..\..\Middleware\blue_angel\inc -I..\..\Middleware\bt_callback_manager -I..\..\Middleware\blue_angel\btif -I..\..\Middleware\blue_angel\common -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\src\common -I..\..\Middleware\blue_angel\src\inc -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\blue_angel\platform\rtos -I..\..\Middleware\blue_angel\platform -I..\..\Middleware\ut_manager\Cunit\Headers -I..\..\Middleware\ut_manager\Cunit\interface -I..\..\Middleware\blue_angel\platform\test -I..\..\Middleware\blue_angel\driver -I..\..\Middleware\blue_angel\src\core\hci -I..\..\User\bt\inc -I..\..\Middleware\bt_callback_manager -I..\..\Middleware\at_command -I..\..\Middleware\blue_angel\src\core\gap -I..\..\Middleware\blue_angel\src\core\l2cap -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=522 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DNDEBUG --omf_browse=.\flash\obj\misc.crf ..\..\Libraries\STM32F10x_StdPeriph_Driver\src\misc.c]
                          THUMB

                          AREA ||i.NVIC_Init||, CODE, READONLY, ALIGN=2

                  NVIC_Init PROC
;;;117      */
;;;118    void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;119    {
000004  4604              MOV      r4,r0
;;;120      uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
000006  2500              MOVS     r5,#0
000008  2700              MOVS     r7,#0
00000a  260f              MOVS     r6,#0xf
;;;121      
;;;122      /* Check the parameters */
;;;123      assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
00000c  78e0              LDRB     r0,[r4,#3]
00000e  b110              CBZ      r0,|L1.22|
000010  78e0              LDRB     r0,[r4,#3]
000012  2801              CMP      r0,#1
000014  d100              BNE      |L1.24|
                  |L1.22|
000016  e003              B        |L1.32|
                  |L1.24|
000018  217b              MOVS     r1,#0x7b
00001a  a021              ADR      r0,|L1.160|
00001c  f7fffffe          BL       assert_failed
                  |L1.32|
;;;124      assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
000020  7860              LDRB     r0,[r4,#1]
000022  2810              CMP      r0,#0x10
000024  da00              BGE      |L1.40|
000026  e003              B        |L1.48|
                  |L1.40|
000028  217c              MOVS     r1,#0x7c
00002a  a01d              ADR      r0,|L1.160|
00002c  f7fffffe          BL       assert_failed
                  |L1.48|
;;;125      assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
000030  78a0              LDRB     r0,[r4,#2]
000032  2810              CMP      r0,#0x10
000034  da00              BGE      |L1.56|
000036  e003              B        |L1.64|
                  |L1.56|
000038  217d              MOVS     r1,#0x7d
00003a  a019              ADR      r0,|L1.160|
00003c  f7fffffe          BL       assert_failed
                  |L1.64|
;;;126        
;;;127      if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
000040  78e0              LDRB     r0,[r4,#3]
000042  b300              CBZ      r0,|L1.134|
;;;128      {
;;;129        /* Compute the Corresponding IRQ Priority --------------------------------*/    
;;;130        tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
000044  4824              LDR      r0,|L1.216|
000046  6800              LDR      r0,[r0,#0]
000048  f40060e0          AND      r0,r0,#0x700
00004c  f5c060e0          RSB      r0,r0,#0x700
000050  0a05              LSRS     r5,r0,#8
;;;131        tmppre = (0x4 - tmppriority);
000052  f1c50704          RSB      r7,r5,#4
;;;132        tmpsub = tmpsub >> tmppriority;
000056  40ee              LSRS     r6,r6,r5
;;;133    
;;;134        tmppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
000058  7860              LDRB     r0,[r4,#1]
00005a  fa00f507          LSL      r5,r0,r7
;;;135        tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
00005e  78a0              LDRB     r0,[r4,#2]
000060  4030              ANDS     r0,r0,r6
000062  4305              ORRS     r5,r5,r0
;;;136        tmppriority = tmppriority << 0x04;
000064  012d              LSLS     r5,r5,#4
;;;137            
;;;138        NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
000066  481d              LDR      r0,|L1.220|
000068  7822              LDRB     r2,[r4,#0]
00006a  5485              STRB     r5,[r0,r2]
;;;139        
;;;140        /* Enable the Selected IRQ Channels --------------------------------------*/
;;;141        NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
00006c  7820              LDRB     r0,[r4,#0]
00006e  f000011f          AND      r1,r0,#0x1f
000072  2001              MOVS     r0,#1
000074  4088              LSLS     r0,r0,r1
000076  7821              LDRB     r1,[r4,#0]
000078  1149              ASRS     r1,r1,#5
00007a  0089              LSLS     r1,r1,#2
00007c  f10121e0          ADD      r1,r1,#0xe000e000
000080  f8c10100          STR      r0,[r1,#0x100]
000084  e009              B        |L1.154|
                  |L1.134|
;;;142          (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
;;;143      }
;;;144      else
;;;145      {
;;;146        /* Disable the Selected IRQ Channels -------------------------------------*/
;;;147        NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
000086  7820              LDRB     r0,[r4,#0]
000088  f000011f          AND      r1,r0,#0x1f
00008c  2001              MOVS     r0,#1
00008e  4088              LSLS     r0,r0,r1
000090  4913              LDR      r1,|L1.224|
000092  7822              LDRB     r2,[r4,#0]
000094  1152              ASRS     r2,r2,#5
000096  f8410022          STR      r0,[r1,r2,LSL #2]
                  |L1.154|
;;;148          (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
;;;149      }
;;;150    }
00009a  e8bd81f0          POP      {r4-r8,pc}
;;;151    
                          ENDP

00009e  0000              DCW      0x0000
                  |L1.160|
0000a0  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\mis"
0000a4  2e5c4c69
0000a8  62726172
0000ac  6965735c
0000b0  53544d33
0000b4  32463130
0000b8  785f5374
0000bc  64506572
0000c0  6970685f
0000c4  44726976
0000c8  65725c73
0000cc  72635c6d
0000d0  6973    
0000d2  632e6300          DCB      "c.c",0
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L1.216|
                          DCD      0xe000ed0c
                  |L1.220|
                          DCD      0xe000e400
                  |L1.224|
                          DCD      0xe000e180

                          AREA ||i.NVIC_PriorityGroupConfig||, CODE, READONLY, ALIGN=2

                  NVIC_PriorityGroupConfig PROC
;;;101      */
;;;102    void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
000000  b510              PUSH     {r4,lr}
;;;103    {
000002  4604              MOV      r4,r0
;;;104      /* Check the parameters */
;;;105      assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
000004  f5b46fe0          CMP      r4,#0x700
000008  d00b              BEQ      |L2.34|
00000a  f5b46fc0          CMP      r4,#0x600
00000e  d008              BEQ      |L2.34|
000010  f5b46fa0          CMP      r4,#0x500
000014  d005              BEQ      |L2.34|
000016  f5b46f80          CMP      r4,#0x400
00001a  d002              BEQ      |L2.34|
00001c  f5b47f40          CMP      r4,#0x300
000020  d100              BNE      |L2.36|
                  |L2.34|
000022  e003              B        |L2.44|
                  |L2.36|
000024  2169              MOVS     r1,#0x69
000026  a004              ADR      r0,|L2.56|
000028  f7fffffe          BL       assert_failed
                  |L2.44|
;;;106      
;;;107      /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
;;;108      SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
00002c  4810              LDR      r0,|L2.112|
00002e  4320              ORRS     r0,r0,r4
000030  4910              LDR      r1,|L2.116|
000032  6008              STR      r0,[r1,#0]
;;;109    }
000034  bd10              POP      {r4,pc}
;;;110    
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
000038  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\mis"
00003c  2e5c4c69
000040  62726172
000044  6965735c
000048  53544d33
00004c  32463130
000050  785f5374
000054  64506572
000058  6970685f
00005c  44726976
000060  65725c73
000064  72635c6d
000068  6973    
00006a  632e6300          DCB      "c.c",0
00006e  00                DCB      0
00006f  00                DCB      0
                  |L2.112|
                          DCD      0x05fa0000
                  |L2.116|
                          DCD      0xe000ed0c

                          AREA ||i.NVIC_SetVectorTable||, CODE, READONLY, ALIGN=2

                  NVIC_SetVectorTable PROC
;;;161      */
;;;162    void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
000000  b570              PUSH     {r4-r6,lr}
;;;163    { 
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;164      /* Check the parameters */
;;;165      assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
000006  f1b45f00          CMP      r4,#0x20000000
00000a  d002              BEQ      |L3.18|
00000c  f1b46f00          CMP      r4,#0x8000000
000010  d100              BNE      |L3.20|
                  |L3.18|
000012  e003              B        |L3.28|
                  |L3.20|
000014  21a5              MOVS     r1,#0xa5
000016  a009              ADR      r0,|L3.60|
000018  f7fffffe          BL       assert_failed
                  |L3.28|
;;;166      assert_param(IS_NVIC_OFFSET(Offset));  
00001c  4815              LDR      r0,|L3.116|
00001e  4285              CMP      r5,r0
000020  d200              BCS      |L3.36|
000022  e003              B        |L3.44|
                  |L3.36|
000024  21a6              MOVS     r1,#0xa6
000026  a005              ADR      r0,|L3.60|
000028  f7fffffe          BL       assert_failed
                  |L3.44|
;;;167       
;;;168      SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
00002c  4912              LDR      r1,|L3.120|
00002e  ea050001          AND      r0,r5,r1
000032  4320              ORRS     r0,r0,r4
000034  4911              LDR      r1,|L3.124|
000036  6008              STR      r0,[r1,#0]
;;;169    }
000038  bd70              POP      {r4-r6,pc}
;;;170    
                          ENDP

00003a  0000              DCW      0x0000
                  |L3.60|
00003c  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\mis"
000040  2e5c4c69
000044  62726172
000048  6965735c
00004c  53544d33
000050  32463130
000054  785f5374
000058  64506572
00005c  6970685f
000060  44726976
000064  65725c73
000068  72635c6d
00006c  6973    
00006e  632e6300          DCB      "c.c",0
000072  00                DCB      0
000073  00                DCB      0
                  |L3.116|
                          DCD      0x000fffff
                  |L3.120|
                          DCD      0x1fffff80
                  |L3.124|
                          DCD      0xe000ed08

                          AREA ||i.NVIC_SystemLPConfig||, CODE, READONLY, ALIGN=2

                  NVIC_SystemLPConfig PROC
;;;180      */
;;;181    void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;182    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;183      /* Check the parameters */
;;;184      assert_param(IS_NVIC_LP(LowPowerMode));
000006  2c10              CMP      r4,#0x10
000008  d003              BEQ      |L4.18|
00000a  2c04              CMP      r4,#4
00000c  d001              BEQ      |L4.18|
00000e  2c02              CMP      r4,#2
000010  d100              BNE      |L4.20|
                  |L4.18|
000012  e003              B        |L4.28|
                  |L4.20|
000014  21b8              MOVS     r1,#0xb8
000016  a00c              ADR      r0,|L4.72|
000018  f7fffffe          BL       assert_failed
                  |L4.28|
;;;185      assert_param(IS_FUNCTIONAL_STATE(NewState));  
00001c  b10d              CBZ      r5,|L4.34|
00001e  2d01              CMP      r5,#1
000020  d100              BNE      |L4.36|
                  |L4.34|
000022  e003              B        |L4.44|
                  |L4.36|
000024  21b9              MOVS     r1,#0xb9
000026  a008              ADR      r0,|L4.72|
000028  f7fffffe          BL       assert_failed
                  |L4.44|
;;;186      
;;;187      if (NewState != DISABLE)
00002c  b12d              CBZ      r5,|L4.58|
;;;188      {
;;;189        SCB->SCR |= LowPowerMode;
00002e  4814              LDR      r0,|L4.128|
000030  6800              LDR      r0,[r0,#0]
000032  4320              ORRS     r0,r0,r4
000034  4912              LDR      r1,|L4.128|
000036  6008              STR      r0,[r1,#0]
000038  e004              B        |L4.68|
                  |L4.58|
;;;190      }
;;;191      else
;;;192      {
;;;193        SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
00003a  4811              LDR      r0,|L4.128|
00003c  6800              LDR      r0,[r0,#0]
00003e  43a0              BICS     r0,r0,r4
000040  490f              LDR      r1,|L4.128|
000042  6008              STR      r0,[r1,#0]
                  |L4.68|
;;;194      }
;;;195    }
000044  bd70              POP      {r4-r6,pc}
;;;196    
                          ENDP

000046  0000              DCW      0x0000
                  |L4.72|
000048  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\mis"
00004c  2e5c4c69
000050  62726172
000054  6965735c
000058  53544d33
00005c  32463130
000060  785f5374
000064  64506572
000068  6970685f
00006c  44726976
000070  65725c73
000074  72635c6d
000078  6973    
00007a  632e6300          DCB      "c.c",0
00007e  00                DCB      0
00007f  00                DCB      0
                  |L4.128|
                          DCD      0xe000ed10

                          AREA ||i.SysTick_CLKSourceConfig||, CODE, READONLY, ALIGN=2

                  SysTick_CLKSourceConfig PROC
;;;204      */
;;;205    void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
000000  b510              PUSH     {r4,lr}
;;;206    {
000002  4604              MOV      r4,r0
;;;207      /* Check the parameters */
;;;208      assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
000004  2c04              CMP      r4,#4
000006  d001              BEQ      |L5.12|
000008  1d60              ADDS     r0,r4,#5
00000a  b900              CBNZ     r0,|L5.14|
                  |L5.12|
00000c  e003              B        |L5.22|
                  |L5.14|
00000e  21d0              MOVS     r1,#0xd0
000010  a00b              ADR      r0,|L5.64|
000012  f7fffffe          BL       assert_failed
                  |L5.22|
;;;209      if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
000016  2c04              CMP      r4,#4
000018  d108              BNE      |L5.44|
;;;210      {
;;;211        SysTick->CTRL |= SysTick_CLKSource_HCLK;
00001a  f04f20e0          MOV      r0,#0xe000e000
00001e  6900              LDR      r0,[r0,#0x10]
000020  f0400004          ORR      r0,r0,#4
000024  f04f21e0          MOV      r1,#0xe000e000
000028  6108              STR      r0,[r1,#0x10]
00002a  e007              B        |L5.60|
                  |L5.44|
;;;212      }
;;;213      else
;;;214      {
;;;215        SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
00002c  f04f20e0          MOV      r0,#0xe000e000
000030  6900              LDR      r0,[r0,#0x10]
000032  f0200004          BIC      r0,r0,#4
000036  f04f21e0          MOV      r1,#0xe000e000
00003a  6108              STR      r0,[r1,#0x10]
                  |L5.60|
;;;216      }
;;;217    }
00003c  bd10              POP      {r4,pc}
;;;218    
                          ENDP

00003e  0000              DCW      0x0000
                  |L5.64|
000040  2e2e5c2e          DCB      "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\mis"
000044  2e5c4c69
000048  62726172
00004c  6965735c
000050  53544d33
000054  32463130
000058  785f5374
00005c  64506572
000060  6970685f
000064  44726976
000068  65725c73
00006c  72635c6d
000070  6973    
000072  632e6300          DCB      "c.c",0
000076  00                DCB      0
000077  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32F10x_StdPeriph_Driver\\src\\misc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_misc_c_d0fc1254____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_misc_c_d0fc1254____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_misc_c_d0fc1254____REVSH|
#line 128
|__asm___6_misc_c_d0fc1254____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
