/* new todo file for BTstack */

Last milestone reached: Restart client app without restarting BTdaemon possible

NEXT:
- automatic HCI link disconnect
  - periodically (e.g., 5 seconds) close HCI connections without active L2CAP channel
- automatic turn off Bluetooth after X minutes idle
- turn off Bluetooth on ctrl-c
- automatic start/stop of BTdaemon
  - start BTdaemon by client lib
  - stop  BTdaemon after X minutes idle
- iPhone status icon support
  - bt_control_iphone.c -> bt_control_iphone.m
  - call SpringBoard on/off BT
  - create BTstack icon. Flipped B in red
=== BTdaemon can run always
- implement rest of L2CAP state machine
  - incoming connections
    - list of supported PSM
	- commands and events
=== Incoming L2CAP supported
- client/server part using unix domain sockets (portable and fast)
- implement rest of L2CAP state machine
  - error handling
  - error notification
  - flow control
  - reassembly/segmentation
- DEMOS:
  - BTstack-cmd
    - info
	- inquiry
	- remote name
	- open/close l2cap connection
    - evtl. SDP browser

== Release Version 0.1
- implement RFCOMM
- implement SDP
- implement PAN

== Release Version 0.2
- naming conventions for various layers
  - if all control is done by pseudo hci commands, only bt_send_cmd(&cmd_name, ... ) is needed anyway
- auto-generate code for sending commands from structured text input file
- devise concept for access to event data
  - auto-generate event struct getter? STRUCTURE_get_FIELD
