/* new todo file for BTstack */

Last milestone reached: create script to build APT package for BTdeamon, Resources, and BTstack client library


NEXT:
- decide on error reporting from BTdaemon
  - command_status_event with custom errors
  - hci open failed 
  - btstack error
- provide test version by setting up APT repository within BTstack SVN
  - instructions: http://www.saurik.com/id/7
- create new GPG key for gmail account and sign APT package
- bug: Status bar icon in wrong state (on instead of connected) with WiiMoteDemo 
- bug: debug BlueTool's "I'm not a Bluetooth stack" error message

== Release Version 0.1

- implement rest of L2CAP state machine
  - incoming connections
    - list of supported PSM
	- commands and events
- detect and handle iPhone sleep mode
  - see iPhone imnsomnia project at http://code.google.com/p/iphone-insomnia/
  - can we get willGoToSleep event, should we should down?
  - would be nice, if we could get woken up by Bluetooth data
- CocoaTouch User Interface Components
  - Inquiry
  - Alerts and shutdown of Apple's stack
  
== Release 0.2 - Incoming L2CAP supported + UI Support

- better deal with Apple stack
  - figure out how to shut it down
  - user interface
- extend SpringBoard feedback
  - show alerts/messages using SpringBoardAcccess, e.g. Bluetooth disconnected by remote device
  - add code to notify about remote disconnets
- configuration: /etc/btstack
  - single Bluetooth module supported
  - transport type: H4, H5, USB
  - h4/h5: UART path
  - usb: product/vendor ID
  - logging mode: text, bluez, packetlogger
- implement rest of L2CAP state machine
  - error handling
  - error notification
  - flow control
  - reassembly/segmentation
- automatic disable of alternative Bluetooth Stack (e.g., BTServer on iPhone)
- DEMOS:
  - BTstack-cmd
    - info
	- inquiry
	- remote name
	- open/close l2cap connection
    - evtl. SDP browser

== Release Version 0.3
- implement RFCOMM
- implement SDP
- implement PAN

== Release Version 0.4
- auto-generate code for sending commands from structured text input file
- devise concept for access to event data
  - auto-generate event struct getter? STRUCTURE_get_FIELD
- Bluetooth low-power modes useful
