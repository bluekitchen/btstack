/* new todo file for BTstack */

UNTIL 13. August 2009 : Google Open Source Jam
- naming conventions for various layers
  - if all control is done by pseudo hci commands, only bt_send_cmd(&cmd_name, ... ) is needed
- move L2CAP code from btstack.c to l2cap.c
  - connections are managed in BTdaemon
  - source_cids and signaling_ids are assigned in BTdaemon
  - create pseudo hci commands for create/destroy l2cap channel
- implement new L2CAP data interface, similar to unix sockets
  - send data (channel, data, len)
  - data callback(channel, data, len)
- DEMOS:
  - Python lightBlue: only L2CAP outgoing, or RFCOMM
  - BTstack-cmd
    - info
	- inquiry
	- remote name
	- open/close l2cap connection
    - evtl. SDP browser
  - evtl. WiiMote
  - evtl. RFCOMM to BT GPS
  
NEXT:
- WiiMote - http://wiibrew.org/wiki/Wiimote#Bluetooth_Communication
  - turn on accellerometer by sending packet 52 12 00 33 over PSM 0x13 OR 0x11
- implement rest of L2CAP state machine
  - incoming
  - error handling
  - error notification
  - reassembly is best done in BTdaemon, assigning source_cids too.
- client/server part using unix domain sockets (portable and fast)
- implement RFCOMM
- implement
- use linked_list for: 
  - event handler
  - data handler
- implement PAN
- implement some kind of noitfy mechanism between multiple units
