/* new todo file for BTstack */

Last milestone reached: BTdaemon automatically started by launchd on Mac and iPhone

NEXT:
- deal with Apple stack
  - detect if it is running
  - return appropriate error events
- create a SpringBoardAccess MobileSubstrate Extension
  - put MobileSubstrate header and lib into 3rdparty folder
  - control Status bar icons
  - show alerts/messages
- Detect and handle iPhone sleep mode
== Release Version 0.1
- implement rest of L2CAP state machine
  - incoming connections
    - list of supported PSM
	- commands and events
- better deal with Apple stack
  - figure out how to shut it down
  - user interface
- CocoaTouch User Interface Components
  - Inquiry
  - Alerts and shutdown of Apple's stack
== Release 0.2 - Incoming L2CAP supported + UI Support
- configuration: /etc/btstack
  - single Bluetooth module supported
  - transport type: H4, H5, USB
  - h4/h5: UART path
  - usb: product/vendor ID
  - logging mode: text, bluez, packetlogger
- implement rest of L2CAP state machine
  - error handling
  - error notification
  - flow control
  - reassembly/segmentation
- automatic disable of alternative Bluetooth Stack (e.g., BTServer on iPhone)
- DEMOS:
  - BTstack-cmd
    - info
	- inquiry
	- remote name
	- open/close l2cap connection
    - evtl. SDP browser

== Release Version 0.3
- implement RFCOMM
- implement SDP
- implement PAN

== Release Version 0.4
- naming conventions for various layers
  - if all control is done by pseudo hci commands, only bt_send_cmd(&cmd_name, ... ) is needed anyway
- auto-generate code for sending commands from structured text input file
- devise concept for access to event data
  - auto-generate event struct getter? STRUCTURE_get_FIELD
- Bluetooth low-power modes useful
